### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  commentId: T:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  id: UFPropertiesComparer`1
  parent: UltraForce.Library.NetStandard.Testing
  children:
  - UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})
  - UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
  - UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode(`0)
  langs:
  - csharp
  - vb
  name: UFPropertiesComparer<T>
  nameWithType: UFPropertiesComparer<T>
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFPropertiesComparer
    path: ../UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
    startLine: 21
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Testing
  summary: >-
    <xref href="UltraForce.Library.NetStandard.Testing.UFPropertiesComparer%601" data-throw-if-not-resolved="false"></xref> implements <xref href="System.Collections.Generic.IEqualityComparer%601" data-throw-if-not-resolved="false"></xref> by

    comparing all public properties of a type.

    <p>

    Based on code from: https://stackoverflow.com/a/49825057/968451

    </p>

    <p>

    Use [UFCustomIgnore] to ignore a property. Use [UFCompareProperties] with object type to

    compare the properties of the object and not the object value itself. 

    </p>
  example: []
  syntax:
    content: 'public class UFPropertiesComparer<T> : IEqualityComparer<T> where T : class'
    typeParameters:
    - id: T
      description: Type to compare properties from
    content.vb: Public Class UFPropertiesComparer(Of T As Class) Implements IEqualityComparer(Of T)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UFPropertiesComparer(Of T)
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T)
  name.vb: UFPropertiesComparer(Of T)
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})'
  parent: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  langs:
  - csharp
  - vb
  name: UFPropertiesComparer(bool, IEnumerable<string>?)
  nameWithType: UFPropertiesComparer<T>.UFPropertiesComparer(bool, IEnumerable<string>?)
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.UFPropertiesComparer(bool, System.Collections.Generic.IEnumerable<string>?)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
    startLine: 49
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Testing
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Testing.UFPropertiesComparer%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public UFPropertiesComparer(bool aThrowException = false, IEnumerable<string>? aNotEqualProperties = null)
    parameters:
    - id: aThrowException
      type: System.Boolean
      description: When true throw an exception with <xref href="UltraForce.Library.NetStandard.Testing.UFPropertiesComparer%601.Equals(%600%2c%600)" data-throw-if-not-resolved="false"></xref> if there is a value mismatch instead of returning false.
    - id: aNotEqualProperties
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A list of property names that should not be equal when comparing.
    content.vb: Public Sub New(aThrowException As Boolean = False, aNotEqualProperties As IEnumerable(Of String) = Nothing)
  overload: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor*
  nameWithType.vb: UFPropertiesComparer(Of T).New(Boolean, IEnumerable(Of String))
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).New(Boolean, System.Collections.Generic.IEnumerable(Of String))
  name.vb: New(Boolean, IEnumerable(Of String))
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
  commentId: M:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  langs:
  - csharp
  - vb
  name: Equals(T, T)
  nameWithType: UFPropertiesComparer<T>.Equals(T, T)
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.Equals(T, T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Equals
    path: ../UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
    startLine: 71
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Testing
  summary: >-
    Compare two instances of <code class="typeparamref">T</code> by comparing all public properties.


    Properties using <xref href="UltraForce.Library.NetStandard.Annotations.UFCompareIgnoreAttribute" data-throw-if-not-resolved="false"></xref> are skipped.
  example: []
  syntax:
    content: public bool Equals(T anExpected, T anActual)
    parameters:
    - id: anExpected
      type: '{T}'
      description: ''
    - id: anActual
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: True if all properties are equal
    content.vb: Public Function Equals(anExpected As T, anActual As T) As Boolean
  overload: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Might be thrown depending on the constructor.
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  nameWithType.vb: UFPropertiesComparer(Of T).Equals(T, T)
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).Equals(T, T)
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode(`0)
  commentId: M:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  langs:
  - csharp
  - vb
  name: GetHashCode(T)
  nameWithType: UFPropertiesComparer<T>.GetHashCode(T)
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.GetHashCode(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetHashCode
    path: ../UltraForce.Library.NetStandard/Testing/UFPropertiesComparer.cs
    startLine: 150
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Testing
  summary: Returns a hash code for the specified object.
  example: []
  syntax:
    content: public int GetHashCode(T aParameterValue)
    parameters:
    - id: aParameterValue
      type: '{T}'
    return:
      type: System.Int32
      description: A hash code for the specified object.
    content.vb: Public Function GetHashCode(aParameterValue As T) As Integer
  overload: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The type of <code class="paramref">obj</code> is a reference type and <code class="paramref">obj</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  nameWithType.vb: UFPropertiesComparer(Of T).GetHashCode(T)
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).GetHashCode(T)
references:
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  commentId: T:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
  href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html
  name: UFPropertiesComparer<T>
  nameWithType: UFPropertiesComparer<T>
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>
  nameWithType.vb: UFPropertiesComparer(Of T)
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T)
  name.vb: UFPropertiesComparer(Of T)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
    name: UFPropertiesComparer
    href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1
    name: UFPropertiesComparer
    href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Testing
  commentId: N:UltraForce.Library.NetStandard.Testing
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Testing
  nameWithType: UltraForce.Library.NetStandard.Testing
  fullName: UltraForce.Library.NetStandard.Testing
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Testing
    name: Testing
    href: UltraForce.Library.NetStandard.Testing.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Testing
    name: Testing
    href: UltraForce.Library.NetStandard.Testing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
  commentId: M:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
  href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1_Equals__0__0_
  name: Equals(T, T)
  nameWithType: UFPropertiesComparer<T>.Equals(T, T)
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.Equals(T, T)
  nameWithType.vb: UFPropertiesComparer(Of T).Equals(T, T)
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
    name: Equals
    href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1_Equals__0__0_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals(`0,`0)
    name: Equals
    href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1_Equals__0__0_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.#ctor
  href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1__ctor_System_Boolean_System_Collections_Generic_IEnumerable_System_String__
  name: UFPropertiesComparer
  nameWithType: UFPropertiesComparer<T>.UFPropertiesComparer
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.UFPropertiesComparer
  nameWithType.vb: UFPropertiesComparer(Of T).New
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Annotations.UFCompareIgnoreAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFCompareIgnoreAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFCompareIgnoreAttribute.html
  name: UFCompareIgnoreAttribute
  nameWithType: UFCompareIgnoreAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFCompareIgnoreAttribute
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals*
  commentId: Overload:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.Equals
  href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1_Equals__0__0_
  name: Equals
  nameWithType: UFPropertiesComparer<T>.Equals
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.Equals
  nameWithType.vb: UFPropertiesComparer(Of T).Equals
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).Equals
- uid: System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer{`0}.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer{`0}.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode*
  commentId: Overload:UltraForce.Library.NetStandard.Testing.UFPropertiesComparer`1.GetHashCode
  href: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer-1.html#UltraForce_Library_NetStandard_Testing_UFPropertiesComparer_1_GetHashCode__0_
  name: GetHashCode
  nameWithType: UFPropertiesComparer<T>.GetHashCode
  fullName: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer<T>.GetHashCode
  nameWithType.vb: UFPropertiesComparer(Of T).GetHashCode
  fullName.vb: UltraForce.Library.NetStandard.Testing.UFPropertiesComparer(Of T).GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer{`0}.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer{`0}.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
