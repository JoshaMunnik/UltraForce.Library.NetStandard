### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  id: UFKeyedStorage
  parent: UltraForce.Library.NetStandard.Storage
  children:
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String,System.Byte)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String,System.Byte[])
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String,System.Char)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String,System.DateTime)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String,System.Double)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String,System.Single)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String,System.Guid)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String,System.Int32)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String,System.Int64)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject``1(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String,System.SByte)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String,System.Int16)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String,System.UInt32)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String,System.UInt64)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String,System.UInt16)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool(System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte(System.String,System.Byte)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar(System.String,System.Char)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat(System.String,System.Single)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject``1(System.String,System.Object)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte(System.String,System.SByte)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort(System.String,System.Int16)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt(System.String,System.UInt32)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong(System.String,System.UInt64)
  - UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort(System.String,System.UInt16)
  langs:
  - csharp
  - vb
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFKeyedStorage
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 54
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage" data-throw-if-not-resolved="false"></xref> is a base class for storage classes that

    store different type of values using unique keys.
  remarks: >-
    The default implementations of the storage methods for the various types

    use the <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> method to store textual representations of 

    the data.

    <p>

    The class itself is an abstract class, the following methods need to be 

    implemented in a subclass: <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>,

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>, <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If possible a subclass should also implement <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public abstract class UFKeyedStorage
    content.vb: Public MustInherit Class UFKeyedStorage
  inheritance:
  - System.Object
  derivedClasses:
  - UltraForce.Library.NetStandard.Storage.UFCachedStorage
  - UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor
  id: '#ctor'
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: UFKeyedStorage()
  nameWithType: UFKeyedStorage.UFKeyedStorage()
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.UFKeyedStorage()
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 61
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: protected UFKeyedStorage()
    content.vb: Protected Sub New()
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor*
  nameWithType.vb: UFKeyedStorage.New()
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.New()
  name.vb: New()
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
  id: GetString(System.String,System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetString(string, string)
  nameWithType: UFKeyedStorage.GetString(string, string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(string, string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetString
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 77
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a string.
  example: []
  syntax:
    content: public abstract string GetString(string aKey, string aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the string for.
    - id: aDefault
      type: System.String
      description: A default value to use when there is no string stored for the key.
    return:
      type: System.String
      description: The stored string or aDefault.
    content.vb: Public MustOverride Function GetString(aKey As String, aDefault As String) As String
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString*
  nameWithType.vb: UFKeyedStorage.GetString(String, String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(String, String)
  name.vb: GetString(String, String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
  id: GetString(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetString(string)
  nameWithType: UFKeyedStorage.GetString(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetString
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 84
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a string.
  example: []
  syntax:
    content: public string GetString(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the string for.
    return:
      type: System.String
      description: The stored string or "" if none could be found.
    content.vb: Public Function GetString(aKey As String) As String
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString*
  nameWithType.vb: UFKeyedStorage.GetString(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(String)
  name.vb: GetString(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
  id: SetString(System.String,System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetString(string, string)
  nameWithType: UFKeyedStorage.SetString(string, string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(string, string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetString
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 94
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Stores a string in the storage.
  example: []
  syntax:
    content: public abstract void SetString(string aKey, string aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.String
      description: A value to store.
    content.vb: Public MustOverride Sub SetString(aKey As String, aValue As String)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString*
  nameWithType.vb: UFKeyedStorage.SetString(String, String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(String, String)
  name.vb: SetString(String, String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String,System.Byte)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String,System.Byte)
  id: GetByte(System.String,System.Byte)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetByte(string, byte)
  nameWithType: UFKeyedStorage.GetByte(string, byte)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(string, byte)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 107
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a byte.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual byte GetByte(string aKey, byte aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the byte for.
    - id: aDefault
      type: System.Byte
      description: A default value to use when there is no byte stored for the key.
    return:
      type: System.Byte
      description: The stored byte or aDefault.
    content.vb: Public Overridable Function GetByte(aKey As String, aDefault As Byte) As Byte
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte*
  nameWithType.vb: UFKeyedStorage.GetByte(String, Byte)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(String, Byte)
  name.vb: GetByte(String, Byte)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(System.String)
  id: GetByte(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetByte(string)
  nameWithType: UFKeyedStorage.GetByte(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 121
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a byte.
  example: []
  syntax:
    content: public byte GetByte(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the byte for.
    return:
      type: System.Byte
      description: The stored byte or 0 if none could be found.
    content.vb: Public Function GetByte(aKey As String) As Byte
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte*
  nameWithType.vb: UFKeyedStorage.GetByte(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte(String)
  name.vb: GetByte(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte(System.String,System.Byte)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte(System.String,System.Byte)
  id: SetByte(System.String,System.Byte)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetByte(string, byte)
  nameWithType: UFKeyedStorage.SetByte(string, byte)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte(string, byte)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 138
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a byte in the storage.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetByte(string aKey, byte aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Byte
      description: A value to store.
    content.vb: Public Overridable Sub SetByte(aKey As String, aValue As Byte)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte*
  nameWithType.vb: UFKeyedStorage.SetByte(String, Byte)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte(String, Byte)
  name.vb: SetByte(String, Byte)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String,System.SByte)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String,System.SByte)
  id: GetSByte(System.String,System.SByte)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetSByte(string, sbyte)
  nameWithType: UFKeyedStorage.GetSByte(string, sbyte)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(string, sbyte)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetSByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 158
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a sbyte.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual sbyte GetSByte(string aKey, sbyte aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the sbyte for.
    - id: aDefault
      type: System.SByte
      description: A default value to use when there is no sbyte stored for the key.
    return:
      type: System.SByte
      description: The stored sbyte or aDefault.
    content.vb: Public Overridable Function GetSByte(aKey As String, aDefault As SByte) As SByte
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte*
  nameWithType.vb: UFKeyedStorage.GetSByte(String, SByte)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(String, SByte)
  name.vb: GetSByte(String, SByte)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetSByte(string)
  nameWithType: UFKeyedStorage.GetSByte(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetSByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 172
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a sbyte.
  example: []
  syntax:
    content: public sbyte GetSByte(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the sbyte for.
    return:
      type: System.SByte
      description: The stored sbyte or 0 if none could be found.
    content.vb: Public Function GetSByte(aKey As String) As SByte
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte*
  nameWithType.vb: UFKeyedStorage.GetSByte(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte(String)
  name.vb: GetSByte(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte(System.String,System.SByte)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte(System.String,System.SByte)
  id: SetSByte(System.String,System.SByte)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetSByte(string, sbyte)
  nameWithType: UFKeyedStorage.SetSByte(string, sbyte)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte(string, sbyte)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetSByte
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 189
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a sbyte in the storage.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetSByte(string aKey, sbyte aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.SByte
      description: A value to store.
    content.vb: Public Overridable Sub SetSByte(aKey As String, aValue As SByte)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte*
  nameWithType.vb: UFKeyedStorage.SetSByte(String, SByte)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte(String, SByte)
  name.vb: SetSByte(String, SByte)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String,System.Int16)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String,System.Int16)
  id: GetShort(System.String,System.Int16)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetShort(string, short)
  nameWithType: UFKeyedStorage.GetShort(string, short)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(string, short)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 209
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a short.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual short GetShort(string aKey, short aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the short for.
    - id: aDefault
      type: System.Int16
      description: A default value to use when there is no short stored for the key.
    return:
      type: System.Int16
      description: The stored short or aDefault.
    content.vb: Public Overridable Function GetShort(aKey As String, aDefault As Short) As Short
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort*
  nameWithType.vb: UFKeyedStorage.GetShort(String, Short)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(String, Short)
  name.vb: GetShort(String, Short)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(System.String)
  id: GetShort(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetShort(string)
  nameWithType: UFKeyedStorage.GetShort(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 223
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a short.
  example: []
  syntax:
    content: public short GetShort(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the short for.
    return:
      type: System.Int16
      description: The stored short or 0 if none could be found.
    content.vb: Public Function GetShort(aKey As String) As Short
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort*
  nameWithType.vb: UFKeyedStorage.GetShort(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort(String)
  name.vb: GetShort(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort(System.String,System.Int16)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort(System.String,System.Int16)
  id: SetShort(System.String,System.Int16)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetShort(string, short)
  nameWithType: UFKeyedStorage.SetShort(string, short)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort(string, short)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 240
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a short in the storage.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetShort(string aKey, short aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Int16
      description: A value to store.
    content.vb: Public Overridable Sub SetShort(aKey As String, aValue As Short)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort*
  nameWithType.vb: UFKeyedStorage.SetShort(String, Short)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort(String, Short)
  name.vb: SetShort(String, Short)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String,System.UInt16)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String,System.UInt16)
  id: GetUShort(System.String,System.UInt16)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetUShort(string, ushort)
  nameWithType: UFKeyedStorage.GetUShort(string, ushort)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(string, ushort)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetUShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 260
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a ushort.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual ushort GetUShort(string aKey, ushort aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the ushort for.
    - id: aDefault
      type: System.UInt16
      description: A default value to use when there is no ushort stored for the key.
    return:
      type: System.UInt16
      description: The stored ushort or aDefault.
    content.vb: Public Overridable Function GetUShort(aKey As String, aDefault As UShort) As UShort
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort*
  nameWithType.vb: UFKeyedStorage.GetUShort(String, UShort)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(String, UShort)
  name.vb: GetUShort(String, UShort)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(System.String)
  id: GetUShort(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetUShort(string)
  nameWithType: UFKeyedStorage.GetUShort(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetUShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 274
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a ushort.
  example: []
  syntax:
    content: public ushort GetUShort(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the ushort for.
    return:
      type: System.UInt16
      description: The stored ushort or 0 if none could be found.
    content.vb: Public Function GetUShort(aKey As String) As UShort
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort*
  nameWithType.vb: UFKeyedStorage.GetUShort(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort(String)
  name.vb: GetUShort(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort(System.String,System.UInt16)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort(System.String,System.UInt16)
  id: SetUShort(System.String,System.UInt16)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetUShort(string, ushort)
  nameWithType: UFKeyedStorage.SetUShort(string, ushort)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort(string, ushort)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetUShort
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 291
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a ushort in the storage.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetUShort(string aKey, ushort aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.UInt16
      description: A value to store.
    content.vb: Public Overridable Sub SetUShort(aKey As String, aValue As UShort)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort*
  nameWithType.vb: UFKeyedStorage.SetUShort(String, UShort)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort(String, UShort)
  name.vb: SetUShort(String, UShort)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String,System.Int32)
  id: GetInt(System.String,System.Int32)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetInt(string, int)
  nameWithType: UFKeyedStorage.GetInt(string, int)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(string, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 312
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets an integer.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    uses <xref href="System.Int32.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to convert it back to a integer.

    </p>
  example: []
  syntax:
    content: public virtual int GetInt(string aKey, int aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the integer for.
    - id: aDefault
      type: System.Int32
      description: A default value to use when there is no integer stored for the key.
    return:
      type: System.Int32
      description: The stored integer or aDefault.
    content.vb: Public Overridable Function GetInt(aKey As String, aDefault As Integer) As Integer
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt*
  nameWithType.vb: UFKeyedStorage.GetInt(String, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(String, Integer)
  name.vb: GetInt(String, Integer)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
  id: GetInt(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetInt(string)
  nameWithType: UFKeyedStorage.GetInt(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 326
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets an integer.
  example: []
  syntax:
    content: public int GetInt(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the integer for.
    return:
      type: System.Int32
      description: The stored integer or 0 if none could be found.
    content.vb: Public Function GetInt(aKey As String) As Integer
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt*
  nameWithType.vb: UFKeyedStorage.GetInt(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(String)
  name.vb: GetInt(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
  id: SetInt(System.String,System.Int32)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetInt(string, int)
  nameWithType: UFKeyedStorage.SetInt(string, int)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(string, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 344
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores an integer in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetInt(string aKey, int aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Int32
      description: A value to store.
    content.vb: Public Overridable Sub SetInt(aKey As String, aValue As Integer)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt*
  nameWithType.vb: UFKeyedStorage.SetInt(String, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(String, Integer)
  name.vb: SetInt(String, Integer)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String,System.UInt32)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String,System.UInt32)
  id: GetUInt(System.String,System.UInt32)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetUInt(string, uint)
  nameWithType: UFKeyedStorage.GetUInt(string, uint)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(string, uint)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetUInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 367
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets an unsigned integer.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    uses <xref href="System.UInt32.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to convert it back to an

    unsigned integer.

    </p>
  example: []
  syntax:
    content: public virtual uint GetUInt(string aKey, uint aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the unsigned integer for.
    - id: aDefault
      type: System.UInt32
      description: >-
        A default value to use when there is no unsigned integer stored for 

        the key.
    return:
      type: System.UInt32
      description: The stored unsigned integer or aDefault.
    content.vb: Public Overridable Function GetUInt(aKey As String, aDefault As UInteger) As UInteger
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt*
  nameWithType.vb: UFKeyedStorage.GetUInt(String, UInteger)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(String, UInteger)
  name.vb: GetUInt(String, UInteger)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(System.String)
  id: GetUInt(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetUInt(string)
  nameWithType: UFKeyedStorage.GetUInt(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetUInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 381
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets an unsigned integer.
  example: []
  syntax:
    content: public uint GetUInt(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the unsigned integer for.
    return:
      type: System.UInt32
      description: The stored unsigned integer or 0 if none could be found.
    content.vb: Public Function GetUInt(aKey As String) As UInteger
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt*
  nameWithType.vb: UFKeyedStorage.GetUInt(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt(String)
  name.vb: GetUInt(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt(System.String,System.UInt32)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt(System.String,System.UInt32)
  id: SetUInt(System.String,System.UInt32)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetUInt(string, uint)
  nameWithType: UFKeyedStorage.SetUInt(string, uint)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt(string, uint)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetUInt
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 399
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores an unsigned integer in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetUInt(string aKey, uint aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.UInt32
      description: A value to store.
    content.vb: Public Overridable Sub SetUInt(aKey As String, aValue As UInteger)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt*
  nameWithType.vb: UFKeyedStorage.SetUInt(String, UInteger)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt(String, UInteger)
  name.vb: SetUInt(String, UInteger)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String,System.Int64)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String,System.Int64)
  id: GetLong(System.String,System.Int64)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetLong(string, long)
  nameWithType: UFKeyedStorage.GetLong(string, long)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(string, long)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetLong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 420
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a long.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    uses <xref href="System.Int64.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to convert it back to a long.

    </p>
  example: []
  syntax:
    content: public virtual long GetLong(string aKey, long aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the long for.
    - id: aDefault
      type: System.Int64
      description: A default value to use when there is no long stored for the key.
    return:
      type: System.Int64
      description: The stored long or aDefault.
    content.vb: Public Overridable Function GetLong(aKey As String, aDefault As Long) As Long
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong*
  nameWithType.vb: UFKeyedStorage.GetLong(String, Long)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(String, Long)
  name.vb: GetLong(String, Long)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
  id: GetLong(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetLong(string)
  nameWithType: UFKeyedStorage.GetLong(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetLong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 434
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a long.
  example: []
  syntax:
    content: public long GetLong(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the long for.
    return:
      type: System.Int64
      description: The stored long or 0 if none could be found.
    content.vb: Public Function GetLong(aKey As String) As Long
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong*
  nameWithType.vb: UFKeyedStorage.GetLong(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(String)
  name.vb: GetLong(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
  id: SetLong(System.String,System.Int64)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetLong(string, long)
  nameWithType: UFKeyedStorage.SetLong(string, long)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(string, long)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetLong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 452
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a long in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetLong(string aKey, long aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Int64
      description: A value to store.
    content.vb: Public Overridable Sub SetLong(aKey As String, aValue As Long)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong*
  nameWithType.vb: UFKeyedStorage.SetLong(String, Long)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(String, Long)
  name.vb: SetLong(String, Long)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String,System.UInt64)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String,System.UInt64)
  id: GetULong(System.String,System.UInt64)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetULong(string, ulong)
  nameWithType: UFKeyedStorage.GetULong(string, ulong)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(string, ulong)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetULong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 473
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a ulong.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    uses <xref href="System.UInt64.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to convert it back to a ulong.

    </p>
  example: []
  syntax:
    content: public virtual ulong GetULong(string aKey, ulong aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the ulong for.
    - id: aDefault
      type: System.UInt64
      description: A default value to use when there is no ulong stored for the key.
    return:
      type: System.UInt64
      description: The stored ulong or aDefault.
    content.vb: Public Overridable Function GetULong(aKey As String, aDefault As ULong) As ULong
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong*
  nameWithType.vb: UFKeyedStorage.GetULong(String, ULong)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(String, ULong)
  name.vb: GetULong(String, ULong)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(System.String)
  id: GetULong(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetULong(string)
  nameWithType: UFKeyedStorage.GetULong(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetULong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 487
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a ulong.
  example: []
  syntax:
    content: public ulong GetULong(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the ulong for.
    return:
      type: System.UInt64
      description: The stored ulong or 0 if none could be found.
    content.vb: Public Function GetULong(aKey As String) As ULong
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong*
  nameWithType.vb: UFKeyedStorage.GetULong(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong(String)
  name.vb: GetULong(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong(System.String,System.UInt64)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong(System.String,System.UInt64)
  id: SetULong(System.String,System.UInt64)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetULong(string, ulong)
  nameWithType: UFKeyedStorage.SetULong(string, ulong)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong(string, ulong)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetULong
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 505
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a ulong in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetULong(string aKey, ulong aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.UInt64
      description: A value to store.
    content.vb: Public Overridable Sub SetULong(aKey As String, aValue As ULong)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong*
  nameWithType.vb: UFKeyedStorage.SetULong(String, ULong)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong(String, ULong)
  name.vb: SetULong(String, ULong)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String,System.Single)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String,System.Single)
  id: GetFloat(System.String,System.Single)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetFloat(string, float)
  nameWithType: UFKeyedStorage.GetFloat(string, float)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(string, float)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetFloat
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 527
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a floating number.

    <p>

    The default implementation just calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)" data-throw-if-not-resolved="false"></xref>

    and typecast the value back to float.

    </p>
  example: []
  syntax:
    content: public virtual float GetFloat(string aKey, float aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the floating number for.
    - id: aDefault
      type: System.Single
      description: >-
        A default value to use when there is no floating number stored for

        the key.
    return:
      type: System.Single
      description: The stored floating number or aDefault.
    content.vb: Public Overridable Function GetFloat(aKey As String, aDefault As Single) As Single
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat*
  nameWithType.vb: UFKeyedStorage.GetFloat(String, Single)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(String, Single)
  name.vb: GetFloat(String, Single)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(System.String)
  id: GetFloat(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetFloat(string)
  nameWithType: UFKeyedStorage.GetFloat(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetFloat
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 541
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a floating number.
  example: []
  syntax:
    content: public float GetFloat(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the floating number for.
    return:
      type: System.Single
      description: The stored floating number or 0.0 when missing.
    content.vb: Public Function GetFloat(aKey As String) As Single
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat*
  nameWithType.vb: UFKeyedStorage.GetFloat(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat(String)
  name.vb: GetFloat(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat(System.String,System.Single)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat(System.String,System.Single)
  id: SetFloat(System.String,System.Single)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetFloat(string, float)
  nameWithType: UFKeyedStorage.SetFloat(string, float)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat(string, float)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetFloat
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 558
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a floating number in the storage.

    <p>

    The default implementation calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String%2cSystem.Double)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetFloat(string aKey, float aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Single
      description: A value to store.
    content.vb: Public Overridable Sub SetFloat(aKey As String, aValue As Single)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat*
  nameWithType.vb: UFKeyedStorage.SetFloat(String, Single)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat(String, Single)
  name.vb: SetFloat(String, Single)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String,System.Double)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String,System.Double)
  id: GetDouble(System.String,System.Double)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetDouble(string, double)
  nameWithType: UFKeyedStorage.GetDouble(string, double)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(string, double)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetDouble
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 580
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a double number.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    uses <xref href="System.Double.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to convert it back to a double.

    </p>
  example: []
  syntax:
    content: public virtual double GetDouble(string aKey, double aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the double number for.
    - id: aDefault
      type: System.Double
      description: >-
        A default value to use when there is no double number stored for

        the key.
    return:
      type: System.Double
      description: The stored floating number or aDefault.
    content.vb: Public Overridable Function GetDouble(aKey As String, aDefault As Double) As Double
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble*
  nameWithType.vb: UFKeyedStorage.GetDouble(String, Double)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(String, Double)
  name.vb: GetDouble(String, Double)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetDouble(string)
  nameWithType: UFKeyedStorage.GetDouble(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetDouble
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 594
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a double number.
  example: []
  syntax:
    content: public double GetDouble(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the double number for.
    return:
      type: System.Double
      description: The stored double number or 0.0 when missing.
    content.vb: Public Function GetDouble(aKey As String) As Double
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble*
  nameWithType.vb: UFKeyedStorage.GetDouble(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(String)
  name.vb: GetDouble(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
  id: SetDouble(System.String,System.Double)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetDouble(string, double)
  nameWithType: UFKeyedStorage.SetDouble(string, double)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(string, double)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetDouble
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 612
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a double number in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetDouble(string aKey, double aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Double
      description: A value to store.
    content.vb: Public Overridable Sub SetDouble(aKey As String, aValue As Double)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble*
  nameWithType.vb: UFKeyedStorage.SetDouble(String, Double)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(String, Double)
  name.vb: SetDouble(String, Double)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String,System.Boolean)
  id: GetBool(System.String,System.Boolean)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetBool(string, bool)
  nameWithType: UFKeyedStorage.GetBool(string, bool)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(string, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetBool
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 633
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a bool.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and

    converts its value back to a bool.

    </p>
  example: []
  syntax:
    content: public virtual bool GetBool(string aKey, bool aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the bool for.
    - id: aDefault
      type: System.Boolean
      description: A default value to use when there is no bool stored for the key.
    return:
      type: System.Boolean
      description: The stored bool or aDefault.
    content.vb: Public Overridable Function GetBool(aKey As String, aDefault As Boolean) As Boolean
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool*
  nameWithType.vb: UFKeyedStorage.GetBool(String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(String, Boolean)
  name.vb: GetBool(String, Boolean)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(System.String)
  id: GetBool(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetBool(string)
  nameWithType: UFKeyedStorage.GetBool(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetBool
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 647
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a bool.
  example: []
  syntax:
    content: public bool GetBool(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the bool for.
    return:
      type: System.Boolean
      description: The stored bool or true when missing.
    content.vb: Public Function GetBool(aKey As String) As Boolean
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool*
  nameWithType.vb: UFKeyedStorage.GetBool(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool(String)
  name.vb: GetBool(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool(System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool(System.String,System.Boolean)
  id: SetBool(System.String,System.Boolean)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetBool(string, bool)
  nameWithType: UFKeyedStorage.SetBool(string, bool)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool(string, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetBool
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 665
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a bool in the storage.

    <p>

    The default implementation convert the value to a string and uses

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetBool(string aKey, bool aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Boolean
      description: A value to store.
    content.vb: Public Overridable Sub SetBool(aKey As String, aValue As Boolean)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool*
  nameWithType.vb: UFKeyedStorage.SetBool(String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool(String, Boolean)
  name.vb: SetBool(String, Boolean)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String,System.Char)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String,System.Char)
  id: GetChar(System.String,System.Char)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetChar(string, char)
  nameWithType: UFKeyedStorage.GetChar(string, char)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(string, char)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetChar
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 686
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a char.

    <p>

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> to get

    the stored character.

    </p>
  example: []
  syntax:
    content: public virtual char GetChar(string aKey, char aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the char for.
    - id: aDefault
      type: System.Char
      description: A default value to use when there is no char stored for the key.
    return:
      type: System.Char
      description: The stored char or aDefault.
    content.vb: Public Overridable Function GetChar(aKey As String, aDefault As Char) As Char
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar*
  nameWithType.vb: UFKeyedStorage.GetChar(String, Char)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(String, Char)
  name.vb: GetChar(String, Char)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(System.String)
  id: GetChar(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetChar(string)
  nameWithType: UFKeyedStorage.GetChar(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetChar
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 700
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a char.
  example: []
  syntax:
    content: public char GetChar(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to get the char for.
    return:
      type: System.Char
      description: The stored char or '\0' when missing.
    content.vb: Public Function GetChar(aKey As String) As Char
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar*
  nameWithType.vb: UFKeyedStorage.GetChar(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar(String)
  name.vb: GetChar(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar(System.String,System.Char)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar(System.String,System.Char)
  id: SetChar(System.String,System.Char)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetChar(string, char)
  nameWithType: UFKeyedStorage.SetChar(string, char)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar(string, char)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetChar
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 718
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a char in the storage.

    <p>

    The default implementation just uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store

    the value.

    </p>
  example: []
  syntax:
    content: public virtual void SetChar(string aKey, char aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for.
    - id: aValue
      type: System.Char
      description: A value to store.
    content.vb: Public Overridable Sub SetChar(aKey As String, aValue As Char)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar*
  nameWithType.vb: UFKeyedStorage.SetChar(String, Char)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar(String, Char)
  name.vb: SetChar(String, Char)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String,System.Byte[])
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String,System.Byte[])
  id: GetBytes(System.String,System.Byte[])
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetBytes(string, byte[]?)
  nameWithType: UFKeyedStorage.GetBytes(string, byte[]?)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(string, byte[]?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetBytes
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 739
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets an array of bytes.

    <p> 

    The default implementation uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> and 

    assumes the data is is a base64 encoded string.

    </p>
  example: []
  syntax:
    content: public virtual byte[]? GetBytes(string aKey, byte[]? aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get array for
    - id: aDefault
      type: System.Byte[]
      description: Default value to use when no data exists for aKey
    return:
      type: System.Byte[]
      description: Array of byte or aDefault
    content.vb: Public Overridable Function GetBytes(aKey As String, aDefault As Byte()) As Byte()
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes*
  nameWithType.vb: UFKeyedStorage.GetBytes(String, Byte())
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(String, Byte())
  name.vb: GetBytes(String, Byte())
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
  id: GetBytes(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetBytes(string)
  nameWithType: UFKeyedStorage.GetBytes(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetBytes
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 755
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets an array of bytes.
  example: []
  syntax:
    content: public byte[]? GetBytes(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get array for
    return:
      type: System.Byte[]
      description: Array of byte or null when missing
    content.vb: Public Function GetBytes(aKey As String) As Byte()
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes*
  nameWithType.vb: UFKeyedStorage.GetBytes(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(String)
  name.vb: GetBytes(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
  id: SetBytes(System.String,System.Byte[])
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetBytes(string, byte[])
  nameWithType: UFKeyedStorage.SetBytes(string, byte[])
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(string, byte[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetBytes
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 773
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores an array of bytes to the storage. 

    <p>

    The default implementation converts the array to a base64 encoded

    string and uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store it.

    </p>
  example: []
  syntax:
    content: public virtual void SetBytes(string aKey, byte[] aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for
    - id: aValue
      type: System.Byte[]
      description: Array of byte to store
    content.vb: Public Overridable Sub SetBytes(aKey As String, aValue As Byte())
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes*
  nameWithType.vb: UFKeyedStorage.SetBytes(String, Byte())
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(String, Byte())
  name.vb: SetBytes(String, Byte())
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String,System.DateTime)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String,System.DateTime)
  id: GetDateTime(System.String,System.DateTime)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetDateTime(string, DateTime)
  nameWithType: UFKeyedStorage.GetDateTime(string, DateTime)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(string, System.DateTime)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetDateTime
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 785
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Gets a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value using <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)" data-throw-if-not-resolved="false"></xref> 

    and <xref href="System.DateTime.FromBinary(System.Int64)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual DateTime GetDateTime(string aKey, DateTime aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get date and time for
    - id: aDefault
      type: System.DateTime
      description: Default value to use
    return:
      type: System.DateTime
      description: Store value or aDefault
    content.vb: Public Overridable Function GetDateTime(aKey As String, aDefault As Date) As Date
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime*
  nameWithType.vb: UFKeyedStorage.GetDateTime(String, Date)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(String, Date)
  name.vb: GetDateTime(String, Date)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetDateTime(string)
  nameWithType: UFKeyedStorage.GetDateTime(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetDateTime
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 797
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a date and time.
  example: []
  syntax:
    content: public DateTime GetDateTime(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get date and time for
    return:
      type: System.DateTime
      description: Date and time or <xref href="System.DateTime.Now" data-throw-if-not-resolved="false"></xref> when missing
    content.vb: Public Function GetDateTime(aKey As String) As Date
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime*
  nameWithType.vb: UFKeyedStorage.GetDateTime(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(String)
  name.vb: GetDateTime(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
  id: SetDateTime(System.String,System.DateTime)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetDateTime(string, DateTime)
  nameWithType: UFKeyedStorage.SetDateTime(string, DateTime)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(string, System.DateTime)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetDateTime
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 808
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a date and time using <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String%2cSystem.Int64)" data-throw-if-not-resolved="false"></xref> and

    <xref href="System.DateTime.ToBinary" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void SetDateTime(string aKey, DateTime aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for
    - id: aValue
      type: System.DateTime
      description: Value to store
    content.vb: Public Overridable Sub SetDateTime(aKey As String, aValue As Date)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime*
  nameWithType.vb: UFKeyedStorage.SetDateTime(String, Date)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(String, Date)
  name.vb: SetDateTime(String, Date)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String,System.Guid)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String,System.Guid)
  id: GetGuid(System.String,System.Guid)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetGuid(string, Guid)
  nameWithType: UFKeyedStorage.GetGuid(string, Guid)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(string, System.Guid)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetGuid
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 819
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a guid using <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual Guid GetGuid(string aKey, Guid aDefault)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get value for
    - id: aDefault
      type: System.Guid
      description: Default value to use
    return:
      type: System.Guid
      description: Stored value or aDefault
    content.vb: Public Overridable Function GetGuid(aKey As String, aDefault As Guid) As Guid
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid*
  nameWithType.vb: UFKeyedStorage.GetGuid(String, Guid)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(String, System.Guid)
  name.vb: GetGuid(String, Guid)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
  id: GetGuid(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetGuid(string)
  nameWithType: UFKeyedStorage.GetGuid(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetGuid
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 831
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets a guid.
  example: []
  syntax:
    content: public Guid GetGuid(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get value for
    return:
      type: System.Guid
      description: Stored value or <xref href="System.Guid.Empty" data-throw-if-not-resolved="false"></xref> when missing
    content.vb: Public Function GetGuid(aKey As String) As Guid
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid*
  nameWithType.vb: UFKeyedStorage.GetGuid(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(String)
  name.vb: GetGuid(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
  id: SetGuid(System.String,System.Guid)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetGuid(string, Guid)
  nameWithType: UFKeyedStorage.SetGuid(string, Guid)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(string, System.Guid)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetGuid
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 842
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores a guid using <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String%2cSystem.Byte%5b%5d)" data-throw-if-not-resolved="false"></xref> and 

    <xref href="System.Guid.ToByteArray" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual void SetGuid(string aKey, Guid aValue)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store value for
    - id: aValue
      type: System.Guid
      description: Value to store
    content.vb: Public Overridable Sub SetGuid(aKey As String, aValue As Guid)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid*
  nameWithType.vb: UFKeyedStorage.SetGuid(String, Guid)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(String, System.Guid)
  name.vb: SetGuid(String, Guid)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  id: GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetStorableObject(string, IUFStorableObject)
  nameWithType: UFKeyedStorage.GetStorableObject(string, IUFStorableObject)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(string, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetStorableObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 856
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets the data by loading it into an object that implements the <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref> interface.
  example: []
  syntax:
    content: public virtual IUFStorableObject GetStorableObject(string aKey, IUFStorableObject anObject)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get data for
    - id: anObject
      type: UltraForce.Library.NetStandard.Storage.IUFStorableObject
      description: Object to load from the storage
    return:
      type: UltraForce.Library.NetStandard.Storage.IUFStorableObject
      description: Value of <code>anObject</code>
    content.vb: Public Overridable Function GetStorableObject(aKey As String, anObject As IUFStorableObject) As IUFStorableObject
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject*
  nameWithType.vb: UFKeyedStorage.GetStorableObject(String, IUFStorableObject)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(String, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  name.vb: GetStorableObject(String, IUFStorableObject)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  id: SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetStorableObject(string, IUFStorableObject)
  nameWithType: UFKeyedStorage.SetStorableObject(string, IUFStorableObject)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(string, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetStorableObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 875
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Sets the data by saving it from an object that implements the <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref> interface.

    <p>

    The default implementation uses a <xref href="UltraForce.Library.NetStandard.Storage.UFDictionaryStorage" data-throw-if-not-resolved="false"></xref> to store the data as string.

    </p>
  example: []
  syntax:
    content: public virtual void SetStorableObject(string aKey, IUFStorableObject anObject)
    parameters:
    - id: aKey
      type: System.String
      description: Key to set data for
    - id: anObject
      type: UltraForce.Library.NetStandard.Storage.IUFStorableObject
      description: Object to save to the storage
    content.vb: Public Overridable Sub SetStorableObject(aKey As String, anObject As IUFStorableObject)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject*
  nameWithType.vb: UFKeyedStorage.SetStorableObject(String, IUFStorableObject)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(String, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  name.vb: SetStorableObject(String, IUFStorableObject)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
  id: GetObject(System.String,System.Type)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetObject(string, Type)
  nameWithType: UFKeyedStorage.GetObject(string, Type)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(string, System.Type)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 889
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String%2cSystem.Type%2cSystem.Func%7bSystem.Type%2cSystem.Object%7d)" data-throw-if-not-resolved="false"></xref>

    using <xref href="System.Activator" data-throw-if-not-resolved="false"></xref> to create an instance of <code>aType</code>.
  example: []
  syntax:
    content: public object? GetObject(string aKey, Type aType)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get object for
    - id: aType
      type: System.Type
      description: type of object
    return:
      type: System.Object
      description: instance or <code>null</code> if object could not be found
    content.vb: Public Function GetObject(aKey As String, aType As Type) As Object
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject*
  nameWithType.vb: UFKeyedStorage.GetObject(String, Type)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(String, System.Type)
  name.vb: GetObject(String, Type)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject``1(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject``1(System.String)
  id: GetObject``1(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetObject<T>(string)
  nameWithType: UFKeyedStorage.GetObject<T>(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject<T>(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 904
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: A generic version of <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public T? GetObject<T>(string aKey) where T : struct'
    parameters:
    - id: aKey
      type: System.String
      description: Key value was stored with
    typeParameters:
    - id: T
      description: Type of value to get
    return:
      type: System.Nullable{{T}}
      description: Value or null if none could be found
    content.vb: Public Function GetObject(Of T As Structure)(aKey As String) As T?
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject*
  nameWithType.vb: UFKeyedStorage.GetObject(Of T)(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(Of T)(String)
  name.vb: GetObject(Of T)(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  id: GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: GetObject(string, Type?, Func<Type, object>)
  nameWithType: UFKeyedStorage.GetObject(string, Type?, Func<Type, object>)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(string, System.Type?, System.Func<System.Type, object>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 958
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Gets an object of a specific type.
  remarks: >-
    The default implementation checks for certain type situations.

    <p>

    If the object is a primitive type, its value gets retrieved with one

    of the GetXXXX methods.

    </p>

    <p>

    If the object implements the <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref> interface

    the method uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String%2cUltraForce.Library.NetStandard.Storage.IUFStorableObject)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> the data is retrieved via

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> the data is retrieved via

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.String" data-throw-if-not-resolved="false"></xref> the method uses 

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)" data-throw-if-not-resolved="false"></xref> to get its value.

    </p>

    <p>

    If the object is a <code>enum</code> the method assumes the value was stored

    as integer.

    </p>

    <p>

    If the object is a nullable value, the method will return null if

    no data exists (null values are not stored) or will call itself

    recursively using the underlying type.

    </p>

    <p>

    If none of the above fits, the method will call 

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String%2cSystem.Type%2cSystem.Func%7bSystem.Type%2cSystem.Object%7d)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual object? GetObject(string aKey, Type? aType, Func<Type, object> aFactory)
    parameters:
    - id: aKey
      type: System.String
      description: Key to get object for
    - id: aType
      type: System.Type
      description: Type of object or null if type is unknown
    - id: aFactory
      type: System.Func{System.Type,System.Object}
      description: A factory to create a new instance of <code>aType</code>
    return:
      type: System.Object
      description: Object instance or null if none was found and no type was provided
    content.vb: Public Overridable Function GetObject(aKey As String, aType As Type, aFactory As Func(Of Type, Object)) As Object
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject*
  nameWithType.vb: UFKeyedStorage.GetObject(String, Type, Func(Of Type, Object))
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(String, System.Type, System.Func(Of System.Type, Object))
  name.vb: GetObject(String, Type, Func(Of Type, Object))
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
  id: SetObject(System.String,System.Object,System.Type)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetObject(string, object?, Type?)
  nameWithType: UFKeyedStorage.SetObject(string, object?, Type?)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(string, object?, System.Type?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1063
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Stores an object to the storage using a certain type.
  remarks: >-
    The default implementation checks for certain type situations.

    <p>

    If the object is null, the method will remove the data stored with

    the key value by calling <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)" data-throw-if-not-resolved="false"></xref>

    </p>

    <p>

    If the object is a primitive type, its value gets stored with one

    of the SetXXXX methods.

    </p>

    <p>

    If the object implements the <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref> interface

    the method uses <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String%2cUltraForce.Library.NetStandard.Storage.IUFStorableObject)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> the data is stored via

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String%2cSystem.DateTime)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> the data is stored via

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String%2cSystem.Guid)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If the object is a <xref href="System.String" data-throw-if-not-resolved="false"></xref> the method uses 

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store its value.

    </p>

    <p>

    If the object is a nullable value, the method will remove any value

    stored with aKey if the object is null else it will call itself

    recursively using the underlying type.

    </p>

    <p>

    If none of the above fits, the method will call 

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SetObject(string aKey, object? anObject, Type? aType)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store object for
    - id: anObject
      type: System.Object
      description: object to store
    - id: aType
      type: System.Type
      description: type of object
    content.vb: Public Overridable Sub SetObject(aKey As String, anObject As Object, aType As Type)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject*
  nameWithType.vb: UFKeyedStorage.SetObject(String, Object, Type)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(String, Object, System.Type)
  name.vb: SetObject(String, Object, Type)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object)
  id: SetObject(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetObject(string, object)
  nameWithType: UFKeyedStorage.SetObject(string, object)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(string, object)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1133
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Stores an object. It calls <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String%2cSystem.Object%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>

    using <xref href="System.Object.GetType" data-throw-if-not-resolved="false"></xref> (if anObject is non null).
  example: []
  syntax:
    content: public void SetObject(string aKey, object anObject)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store object for
    - id: anObject
      type: System.Object
      description: Object to store
    content.vb: Public Sub SetObject(aKey As String, anObject As Object)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject*
  nameWithType.vb: UFKeyedStorage.SetObject(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(String, Object)
  name.vb: SetObject(String, Object)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject``1(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject``1(System.String,System.Object)
  id: SetObject``1(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SetObject<T>(string, object)
  nameWithType: UFKeyedStorage.SetObject<T>(string, object)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject<T>(string, object)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SetObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1144
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Generic version of <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String%2cSystem.Object%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetObject<T>(string aKey, object anObject)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store object for
    - id: anObject
      type: System.Object
      description: Object to store
    typeParameters:
    - id: T
      description: Type to store
    content.vb: Public Sub SetObject(Of T)(aKey As String, anObject As Object)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject*
  nameWithType.vb: UFKeyedStorage.SetObject(Of T)(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(Of T)(String, Object)
  name.vb: SetObject(Of T)(String, Object)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  id: DeleteAll
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: DeleteAll()
  nameWithType: UFKeyedStorage.DeleteAll()
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: DeleteAll
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1152
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Deletes all stored data.
  example: []
  syntax:
    content: public virtual void DeleteAll()
    content.vb: Public Overridable Sub DeleteAll()
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll*
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
  id: DeleteKey(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: DeleteKey(string)
  nameWithType: UFKeyedStorage.DeleteKey(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: DeleteKey
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1162
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Deletes the data for specific key.
  example: []
  syntax:
    content: public abstract void DeleteKey(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to Delete the data for.
    content.vb: Public MustOverride Sub DeleteKey(aKey As String)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey*
  nameWithType.vb: UFKeyedStorage.DeleteKey(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(String)
  name.vb: DeleteKey(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
  id: HasKey(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: HasKey(string)
  nameWithType: UFKeyedStorage.HasKey(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: HasKey
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1173
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: Checks if there is a locally stored data for a specific key.
  example: []
  syntax:
    content: public abstract bool HasKey(string aKey)
    parameters:
    - id: aKey
      type: System.String
      description: A key to check.
    return:
      type: System.Boolean
      description: True if has there is data for the key; otherwise, false.
    content.vb: Public MustOverride Function HasKey(aKey As String) As Boolean
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey*
  nameWithType.vb: UFKeyedStorage.HasKey(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(String)
  name.vb: HasKey(String)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
  id: SerializeObject(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: SerializeObject(string, object)
  nameWithType: UFKeyedStorage.SerializeObject(string, object)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(string, object)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SerializeObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1187
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Serializes an object. This method is called when the class can not store the object in any other way.

    <p>

    The default implementation throws an exception. 

    </p>
  example: []
  syntax:
    content: protected virtual void SerializeObject(string aKey, object anObject)
    parameters:
    - id: aKey
      type: System.String
      description: Key to store serializes object with
    - id: anObject
      type: System.Object
      description: Object to store
    content.vb: Protected Overridable Sub SerializeObject(aKey As String, anObject As Object)
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject*
  nameWithType.vb: UFKeyedStorage.SerializeObject(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(String, Object)
  name.vb: SerializeObject(String, Object)
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  id: DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  langs:
  - csharp
  - vb
  name: DeserializeObject(string, Type?, Func<Type, object>)
  nameWithType: UFKeyedStorage.DeserializeObject(string, Type?, Func<Type, object>)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(string, System.Type?, System.Func<System.Type, object>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: DeserializeObject
    path: ../UltraForce.Library.NetStandard/Storage/UFKeyedStorage.cs
    startLine: 1203
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Storage
  summary: >-
    Deserializes an object that was stored previously with 

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual object DeserializeObject(string aKey, Type? aType, Func<Type, object> aFactory)
    parameters:
    - id: aKey
      type: System.String
      description: Key to retrieve serialized object with
    - id: aType
      type: System.Type
      description: Type of object to create (might be <code>null</code>)
    - id: aFactory
      type: System.Func{System.Type,System.Object}
      description: A factory to create a new instance of <code>aType</code>
    return:
      type: System.Object
      description: Retrieved object
    content.vb: Protected Overridable Function DeserializeObject(aKey As String, aType As Type, aFactory As Func(Of Type, Object)) As Object
  overload: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject*
  nameWithType.vb: UFKeyedStorage.DeserializeObject(String, Type, Func(Of Type, Object))
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(String, System.Type, System.Func(Of System.Type, Object))
  name.vb: DeserializeObject(String, Type, Func(Of Type, Object))
references:
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_
  name: GetString(string)
  nameWithType: UFKeyedStorage.GetString(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(string)
  nameWithType.vb: UFKeyedStorage.GetString(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(String)
  name.vb: GetString(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
    name: GetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String)
    name: GetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetString_System_String_System_String_
  name: SetString(string, string)
  nameWithType: UFKeyedStorage.SetString(string, string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(string, string)
  nameWithType.vb: UFKeyedStorage.SetString(String, String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(String, String)
  name.vb: SetString(String, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
    name: SetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetString_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString(System.String,System.String)
    name: SetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetString_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_System_String_
  name: GetString(string, string)
  nameWithType: UFKeyedStorage.GetString(string, string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(string, string)
  nameWithType.vb: UFKeyedStorage.GetString(String, String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(String, String)
  name.vb: GetString(String, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
    name: GetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString(System.String,System.String)
    name: GetString
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_HasKey_System_String_
  name: HasKey(string)
  nameWithType: UFKeyedStorage.HasKey(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(string)
  nameWithType.vb: UFKeyedStorage.HasKey(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(String)
  name.vb: HasKey(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
    name: HasKey
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_HasKey_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey(System.String)
    name: HasKey
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_HasKey_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteKey_System_String_
  name: DeleteKey(string)
  nameWithType: UFKeyedStorage.DeleteKey(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(string)
  nameWithType.vb: UFKeyedStorage.DeleteKey(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(String)
  name.vb: DeleteKey(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
    name: DeleteKey
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteKey_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey(System.String)
    name: DeleteKey
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteKey_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteAll
  name: DeleteAll()
  nameWithType: UFKeyedStorage.DeleteAll()
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
    name: DeleteAll
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteAll
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
    name: DeleteAll
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteAll
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Storage
  commentId: N:UltraForce.Library.NetStandard.Storage
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Storage
  nameWithType: UltraForce.Library.NetStandard.Storage
  fullName: UltraForce.Library.NetStandard.Storage
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.#ctor
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage__ctor
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage.UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.UFKeyedStorage
  nameWithType.vb: UFKeyedStorage.New
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.New
  name.vb: New
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetString_System_String_System_String_
  name: GetString
  nameWithType: UFKeyedStorage.GetString
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetString_System_String_System_String_
  name: SetString
  nameWithType: UFKeyedStorage.SetString
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetString
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetInt_System_String_
  name: GetInt(string)
  nameWithType: UFKeyedStorage.GetInt(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(string)
  nameWithType.vb: UFKeyedStorage.GetInt(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(String)
  name.vb: GetInt(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
    name: GetInt
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetInt_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt(System.String)
    name: GetInt
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetInt_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetByte_System_String_System_Byte_
  name: GetByte
  nameWithType: UFKeyedStorage.GetByte
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetInt_System_String_System_Int32_
  name: SetInt(string, int)
  nameWithType: UFKeyedStorage.SetInt(string, int)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(string, int)
  nameWithType.vb: UFKeyedStorage.SetInt(String, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(String, Integer)
  name.vb: SetInt(String, Integer)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
    name: SetInt
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetInt_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt(System.String,System.Int32)
    name: SetInt
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetInt_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetByte_System_String_System_Byte_
  name: SetByte
  nameWithType: UFKeyedStorage.SetByte
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetByte
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetSByte_System_String_System_SByte_
  name: GetSByte
  nameWithType: UFKeyedStorage.GetSByte
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetSByte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetSByte_System_String_System_SByte_
  name: SetSByte
  nameWithType: UFKeyedStorage.SetSByte
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetSByte
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetShort_System_String_System_Int16_
  name: GetShort
  nameWithType: UFKeyedStorage.GetShort
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetShort
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetShort_System_String_System_Int16_
  name: SetShort
  nameWithType: UFKeyedStorage.SetShort
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetShort
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetUShort_System_String_System_UInt16_
  name: GetUShort
  nameWithType: UFKeyedStorage.GetUShort
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUShort
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetUShort_System_String_System_UInt16_
  name: SetUShort
  nameWithType: UFKeyedStorage.SetUShort
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUShort
- uid: System.Int32.Parse(System.String)
  commentId: M:System.Int32.Parse(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32.parse#system-int32-parse(system-string)
  name: Parse(string)
  nameWithType: int.Parse(string)
  fullName: int.Parse(string)
  nameWithType.vb: Integer.Parse(String)
  fullName.vb: Integer.Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: System.Int32.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32.parse#system-int32-parse(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Int32.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32.parse#system-int32-parse(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetInt_System_String_System_Int32_
  name: GetInt
  nameWithType: UFKeyedStorage.GetInt
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetInt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetInt_System_String_System_Int32_
  name: SetInt
  nameWithType: UFKeyedStorage.SetInt
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetInt
- uid: System.UInt32.Parse(System.String)
  commentId: M:System.UInt32.Parse(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32.parse#system-uint32-parse(system-string)
  name: Parse(string)
  nameWithType: uint.Parse(string)
  fullName: uint.Parse(string)
  nameWithType.vb: UInteger.Parse(String)
  fullName.vb: UInteger.Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: System.UInt32.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32.parse#system-uint32-parse(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.UInt32.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32.parse#system-uint32-parse(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetUInt_System_String_System_UInt32_
  name: GetUInt
  nameWithType: UFKeyedStorage.GetUInt
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetUInt
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetUInt_System_String_System_UInt32_
  name: SetUInt
  nameWithType: UFKeyedStorage.SetUInt
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetUInt
- uid: System.Int64.Parse(System.String)
  commentId: M:System.Int64.Parse(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64.parse#system-int64-parse(system-string)
  name: Parse(string)
  nameWithType: long.Parse(string)
  fullName: long.Parse(string)
  nameWithType.vb: Long.Parse(String)
  fullName.vb: Long.Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: System.Int64.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64.parse#system-int64-parse(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Int64.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64.parse#system-int64-parse(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetLong_System_String_System_Int64_
  name: GetLong
  nameWithType: UFKeyedStorage.GetLong
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetLong_System_String_System_Int64_
  name: SetLong
  nameWithType: UFKeyedStorage.SetLong
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong
- uid: System.UInt64.Parse(System.String)
  commentId: M:System.UInt64.Parse(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64.parse#system-uint64-parse(system-string)
  name: Parse(string)
  nameWithType: ulong.Parse(string)
  fullName: ulong.Parse(string)
  nameWithType.vb: ULong.Parse(String)
  fullName.vb: ULong.Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: System.UInt64.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64.parse#system-uint64-parse(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.UInt64.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64.parse#system-uint64-parse(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetULong_System_String_System_UInt64_
  name: GetULong
  nameWithType: UFKeyedStorage.GetULong
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetULong
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetULong_System_String_System_UInt64_
  name: SetULong
  nameWithType: UFKeyedStorage.SetULong
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetULong
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDouble_System_String_
  name: GetDouble(string)
  nameWithType: UFKeyedStorage.GetDouble(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(string)
  nameWithType.vb: UFKeyedStorage.GetDouble(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(String)
  name.vb: GetDouble(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
    name: GetDouble
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDouble_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble(System.String)
    name: GetDouble
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDouble_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetFloat_System_String_System_Single_
  name: GetFloat
  nameWithType: UFKeyedStorage.GetFloat
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDouble_System_String_System_Double_
  name: SetDouble(string, double)
  nameWithType: UFKeyedStorage.SetDouble(string, double)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(string, double)
  nameWithType.vb: UFKeyedStorage.SetDouble(String, Double)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(String, Double)
  name.vb: SetDouble(String, Double)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
    name: SetDouble
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDouble_System_String_System_Double_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble(System.String,System.Double)
    name: SetDouble
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDouble_System_String_System_Double_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetFloat_System_String_System_Single_
  name: SetFloat
  nameWithType: UFKeyedStorage.SetFloat
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetFloat
- uid: System.Double.Parse(System.String)
  commentId: M:System.Double.Parse(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double.parse#system-double-parse(system-string)
  name: Parse(string)
  nameWithType: double.Parse(string)
  fullName: double.Parse(string)
  nameWithType.vb: Double.Parse(String)
  fullName.vb: Double.Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: System.Double.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double.parse#system-double-parse(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Double.Parse(System.String)
    name: Parse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double.parse#system-double-parse(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDouble_System_String_System_Double_
  name: GetDouble
  nameWithType: UFKeyedStorage.GetDouble
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDouble_System_String_System_Double_
  name: SetDouble
  nameWithType: UFKeyedStorage.SetDouble
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDouble
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetBool_System_String_System_Boolean_
  name: GetBool
  nameWithType: UFKeyedStorage.GetBool
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetBool_System_String_System_Boolean_
  name: SetBool
  nameWithType: UFKeyedStorage.SetBool
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBool
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetChar_System_String_System_Char_
  name: GetChar
  nameWithType: UFKeyedStorage.GetChar
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetChar_System_String_System_Char_
  name: SetChar
  nameWithType: UFKeyedStorage.SetChar
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetChar
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetBytes_System_String_System_Byte___
  name: GetBytes
  nameWithType: UFKeyedStorage.GetBytes
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetBytes_System_String_System_Byte___
  name: SetBytes
  nameWithType: UFKeyedStorage.SetBytes
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetLong_System_String_
  name: GetLong(string)
  nameWithType: UFKeyedStorage.GetLong(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(string)
  nameWithType.vb: UFKeyedStorage.GetLong(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(String)
  name.vb: GetLong(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
    name: GetLong
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetLong_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetLong(System.String)
    name: GetLong
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetLong_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.DateTime.FromBinary(System.Int64)
  commentId: M:System.DateTime.FromBinary(System.Int64)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.frombinary
  name: FromBinary(long)
  nameWithType: DateTime.FromBinary(long)
  fullName: System.DateTime.FromBinary(long)
  nameWithType.vb: Date.FromBinary(Long)
  fullName.vb: Date.FromBinary(Long)
  name.vb: FromBinary(Long)
  spec.csharp:
  - uid: System.DateTime.FromBinary(System.Int64)
    name: FromBinary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.frombinary
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: System.DateTime.FromBinary(System.Int64)
    name: FromBinary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.frombinary
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDateTime_System_String_System_DateTime_
  name: GetDateTime
  nameWithType: UFKeyedStorage.GetDateTime
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime
- uid: System.DateTime.Now
  commentId: P:System.DateTime.Now
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.now
  name: Now
  nameWithType: DateTime.Now
  fullName: System.DateTime.Now
  nameWithType.vb: Date.Now
  fullName.vb: Date.Now
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetLong_System_String_System_Int64_
  name: SetLong(string, long)
  nameWithType: UFKeyedStorage.SetLong(string, long)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(string, long)
  nameWithType.vb: UFKeyedStorage.SetLong(String, Long)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(String, Long)
  name.vb: SetLong(String, Long)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
    name: SetLong
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetLong_System_String_System_Int64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetLong(System.String,System.Int64)
    name: SetLong
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetLong_System_String_System_Int64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.DateTime.ToBinary
  commentId: M:System.DateTime.ToBinary
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.tobinary
  name: ToBinary()
  nameWithType: DateTime.ToBinary()
  fullName: System.DateTime.ToBinary()
  nameWithType.vb: Date.ToBinary()
  fullName.vb: Date.ToBinary()
  spec.csharp:
  - uid: System.DateTime.ToBinary
    name: ToBinary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.tobinary
  - name: (
  - name: )
  spec.vb:
  - uid: System.DateTime.ToBinary
    name: ToBinary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.tobinary
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDateTime_System_String_System_DateTime_
  name: SetDateTime
  nameWithType: UFKeyedStorage.SetDateTime
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetBytes_System_String_
  name: GetBytes(string)
  nameWithType: UFKeyedStorage.GetBytes(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(string)
  nameWithType.vb: UFKeyedStorage.GetBytes(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(String)
  name.vb: GetBytes(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
    name: GetBytes
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetBytes_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetBytes(System.String)
    name: GetBytes
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetBytes_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetGuid_System_String_System_Guid_
  name: GetGuid
  nameWithType: UFKeyedStorage.GetGuid
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid.empty
  name: Empty
  nameWithType: Guid.Empty
  fullName: System.Guid.Empty
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetBytes_System_String_System_Byte___
  name: SetBytes(string, byte[])
  nameWithType: UFKeyedStorage.SetBytes(string, byte[])
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(string, byte[])
  nameWithType.vb: UFKeyedStorage.SetBytes(String, Byte())
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(String, Byte())
  name.vb: SetBytes(String, Byte())
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
    name: SetBytes
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetBytes_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetBytes(System.String,System.Byte[])
    name: SetBytes
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetBytes_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Guid.ToByteArray
  commentId: M:System.Guid.ToByteArray
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid.tobytearray
  name: ToByteArray()
  nameWithType: Guid.ToByteArray()
  fullName: System.Guid.ToByteArray()
  spec.csharp:
  - uid: System.Guid.ToByteArray
    name: ToByteArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid.tobytearray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Guid.ToByteArray
    name: ToByteArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid.tobytearray
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetGuid_System_String_System_Guid_
  name: SetGuid
  nameWithType: UFKeyedStorage.SetGuid
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  commentId: T:UltraForce.Library.NetStandard.Storage.IUFStorableObject
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  name: IUFStorableObject
  nameWithType: IUFStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject
- uid: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
  href: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage.html
  name: UFDictionaryStorage
  nameWithType: UFDictionaryStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  name: GetStorableObject
  nameWithType: UFKeyedStorage.GetStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  name: SetStorableObject
  nameWithType: UFKeyedStorage.SetStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_System_Func_System_Type_System_Object__
  name: GetObject(string, Type, Func<Type, object>)
  nameWithType: UFKeyedStorage.GetObject(string, Type, Func<Type, object>)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(string, System.Type, System.Func<System.Type, object>)
  nameWithType.vb: UFKeyedStorage.GetObject(String, Type, Func(Of Type, Object))
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(String, System.Type, System.Func(Of System.Type, Object))
  name.vb: GetObject(String, Type, Func(Of Type, Object))
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
    name: GetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_System_Func_System_Type_System_Object__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type,System.Func{System.Type,System.Object})
    name: GetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_System_Func_System_Type_System_Object__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Activator
  commentId: T:System.Activator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.activator
  name: Activator
  nameWithType: Activator
  fullName: System.Activator
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_
  name: GetObject
  nameWithType: UFKeyedStorage.GetObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_
  name: GetObject(string, Type)
  nameWithType: UFKeyedStorage.GetObject(string, Type)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(string, System.Type)
  nameWithType.vb: UFKeyedStorage.GetObject(String, Type)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(String, System.Type)
  name.vb: GetObject(String, Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
    name: GetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetObject(System.String,System.Type)
    name: GetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetObject_System_String_System_Type_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: T?
  nameWithType: T?
  fullName: T?
  spec.csharp:
  - name: T
  - name: '?'
  spec.vb:
  - name: T
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  name: GetStorableObject(string, IUFStorableObject)
  nameWithType: UFKeyedStorage.GetStorableObject(string, IUFStorableObject)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(string, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  nameWithType.vb: UFKeyedStorage.GetStorableObject(String, IUFStorableObject)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(String, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  name.vb: GetStorableObject(String, IUFStorableObject)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
    name: GetStorableObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
    name: IUFStorableObject
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
    name: GetStorableObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
    name: IUFStorableObject
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDateTime_System_String_
  name: GetDateTime(string)
  nameWithType: UFKeyedStorage.GetDateTime(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(string)
  nameWithType.vb: UFKeyedStorage.GetDateTime(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(String)
  name.vb: GetDateTime(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
    name: GetDateTime
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDateTime_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetDateTime(System.String)
    name: GetDateTime
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetDateTime_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetGuid_System_String_
  name: GetGuid(string)
  nameWithType: UFKeyedStorage.GetGuid(string)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(string)
  nameWithType.vb: UFKeyedStorage.GetGuid(String)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(String)
  name.vb: GetGuid(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
    name: GetGuid
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetGuid_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.GetGuid(System.String)
    name: GetGuid
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_GetGuid_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeserializeObject_System_String_System_Type_System_Func_System_Type_System_Object__
  name: DeserializeObject(string, Type, Func<Type, object>)
  nameWithType: UFKeyedStorage.DeserializeObject(string, Type, Func<Type, object>)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(string, System.Type, System.Func<System.Type, object>)
  nameWithType.vb: UFKeyedStorage.DeserializeObject(String, Type, Func(Of Type, Object))
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(String, System.Type, System.Func(Of System.Type, Object))
  name.vb: DeserializeObject(String, Type, Func(Of Type, Object))
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
    name: DeserializeObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeserializeObject_System_String_System_Type_System_Func_System_Type_System_Object__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject(System.String,System.Type,System.Func{System.Type,System.Object})
    name: DeserializeObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeserializeObject_System_String_System_Type_System_Func_System_Type_System_Object__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Func{System.Type,System.Object}
  commentId: T:System.Func{System.Type,System.Object}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Type, object>
  nameWithType: Func<Type, object>
  fullName: System.Func<System.Type, object>
  nameWithType.vb: Func(Of Type, Object)
  fullName.vb: System.Func(Of System.Type, Object)
  name.vb: Func(Of Type, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  name: SetStorableObject(string, IUFStorableObject)
  nameWithType: UFKeyedStorage.SetStorableObject(string, IUFStorableObject)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(string, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  nameWithType.vb: UFKeyedStorage.SetStorableObject(String, IUFStorableObject)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(String, UltraForce.Library.NetStandard.Storage.IUFStorableObject)
  name.vb: SetStorableObject(String, IUFStorableObject)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
    name: SetStorableObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
    name: IUFStorableObject
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetStorableObject(System.String,UltraForce.Library.NetStandard.Storage.IUFStorableObject)
    name: SetStorableObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetStorableObject_System_String_UltraForce_Library_NetStandard_Storage_IUFStorableObject_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
    name: IUFStorableObject
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDateTime_System_String_System_DateTime_
  name: SetDateTime(string, DateTime)
  nameWithType: UFKeyedStorage.SetDateTime(string, DateTime)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(string, System.DateTime)
  nameWithType.vb: UFKeyedStorage.SetDateTime(String, Date)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(String, Date)
  name.vb: SetDateTime(String, Date)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
    name: SetDateTime
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDateTime_System_String_System_DateTime_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetDateTime(System.String,System.DateTime)
    name: SetDateTime
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetDateTime_System_String_System_DateTime_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetGuid_System_String_System_Guid_
  name: SetGuid(string, Guid)
  nameWithType: UFKeyedStorage.SetGuid(string, Guid)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(string, System.Guid)
  nameWithType.vb: UFKeyedStorage.SetGuid(String, Guid)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(String, System.Guid)
  name.vb: SetGuid(String, Guid)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
    name: SetGuid
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetGuid_System_String_System_Guid_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetGuid(System.String,System.Guid)
    name: SetGuid
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetGuid_System_String_System_Guid_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SerializeObject_System_String_System_Object_
  name: SerializeObject(string, object)
  nameWithType: UFKeyedStorage.SerializeObject(string, object)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(string, object)
  nameWithType.vb: UFKeyedStorage.SerializeObject(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(String, Object)
  name.vb: SerializeObject(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
    name: SerializeObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SerializeObject_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject(System.String,System.Object)
    name: SerializeObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SerializeObject_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetObject_System_String_System_Object_System_Type_
  name: SetObject
  nameWithType: UFKeyedStorage.SetObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
  parent: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  isExternal: true
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetObject_System_String_System_Object_System_Type_
  name: SetObject(string, object, Type)
  nameWithType: UFKeyedStorage.SetObject(string, object, Type)
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(string, object, System.Type)
  nameWithType.vb: UFKeyedStorage.SetObject(String, Object, Type)
  fullName.vb: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(String, Object, System.Type)
  name.vb: SetObject(String, Object, Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
    name: SetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetObject_System_String_System_Object_System_Type_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SetObject(System.String,System.Object,System.Type)
    name: SetObject
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SetObject_System_String_System_Object_System_Type_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteAll
  name: DeleteAll
  nameWithType: UFKeyedStorage.DeleteAll
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteAll
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeleteKey_System_String_
  name: DeleteKey
  nameWithType: UFKeyedStorage.DeleteKey
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeleteKey
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_HasKey_System_String_
  name: HasKey
  nameWithType: UFKeyedStorage.HasKey
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.HasKey
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_SerializeObject_System_String_System_Object_
  name: SerializeObject
  nameWithType: UFKeyedStorage.SerializeObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.SerializeObject
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject*
  commentId: Overload:UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html#UltraForce_Library_NetStandard_Storage_UFKeyedStorage_DeserializeObject_System_String_System_Type_System_Func_System_Type_System_Object__
  name: DeserializeObject
  nameWithType: UFKeyedStorage.DeserializeObject
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.DeserializeObject
