### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools
  commentId: T:UltraForce.Library.NetStandard.Tools.UFEnumTools
  id: UFEnumTools
  parent: UltraForce.Library.NetStandard.Tools
  children:
  - UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList``1
  - UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(System.Type,System.Int32)
  - UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue``1(System.Int32)
  - UltraForce.Library.NetStandard.Tools.UFEnumTools.Random``1
  - UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet``1(System.Int32,``0@)
  langs:
  - csharp
  - vb
  name: UFEnumTools
  nameWithType: UFEnumTools
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFEnumTools
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 10
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Support methods to work with enums.
  example: []
  syntax:
    content: public static class UFEnumTools
    content.vb: Public Module UFEnumTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random``1
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumTools.Random``1
  id: Random``1
  parent: UltraForce.Library.NetStandard.Tools.UFEnumTools
  langs:
  - csharp
  - vb
  name: Random<TEnum>()
  nameWithType: UFEnumTools.Random<TEnum>()
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random<TEnum>()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Random
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 17
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets a random value from an enum.
  example: []
  syntax:
    content: 'public static TEnum Random<TEnum>() where TEnum : Enum'
    typeParameters:
    - id: TEnum
      description: ''
    return:
      type: '{TEnum}'
      description: ''
    content.vb: Public Shared Function Random(Of TEnum As [Enum])() As TEnum
  overload: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random*
  nameWithType.vb: UFEnumTools.Random(Of TEnum)()
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random(Of TEnum)()
  name.vb: Random(Of TEnum)()
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet``1(System.Int32,``0@)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet``1(System.Int32,``0@)
  id: TryGet``1(System.Int32,``0@)
  parent: UltraForce.Library.NetStandard.Tools.UFEnumTools
  langs:
  - csharp
  - vb
  name: TryGet<TEnum>(int, out TEnum)
  nameWithType: UFEnumTools.TryGet<TEnum>(int, out TEnum)
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet<TEnum>(int, out TEnum)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: TryGet
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 30
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Tries to get an enum equivalent for a given integer.
  example: []
  syntax:
    content: 'public static bool TryGet<TEnum>(int aValue, out TEnum anEnumValue) where TEnum : Enum'
    parameters:
    - id: aValue
      type: System.Int32
      description: ''
    - id: anEnumValue
      type: '{TEnum}'
      description: ''
    typeParameters:
    - id: TEnum
      description: ''
    return:
      type: System.Boolean
      description: True if the integer matches an enum; false when not
    content.vb: Public Shared Function TryGet(Of TEnum As [Enum])(aValue As Integer, anEnumValue As TEnum) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet*
  nameWithType.vb: UFEnumTools.TryGet(Of TEnum)(Integer, TEnum)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet(Of TEnum)(Integer, TEnum)
  name.vb: TryGet(Of TEnum)(Integer, TEnum)
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue``1(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue``1(System.Int32)
  id: FindValue``1(System.Int32)
  parent: UltraForce.Library.NetStandard.Tools.UFEnumTools
  langs:
  - csharp
  - vb
  name: FindValue<TEnum>(int)
  nameWithType: UFEnumTools.FindValue<TEnum>(int)
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue<TEnum>(int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindValue
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 47
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets the enum value for a given integer.
  example: []
  syntax:
    content: 'public static TEnum FindValue<TEnum>(int aValue) where TEnum : Enum'
    parameters:
    - id: aValue
      type: System.Int32
      description: ''
    typeParameters:
    - id: TEnum
      description: ''
    return:
      type: '{TEnum}'
      description: ''
    content.vb: Public Shared Function FindValue(Of TEnum As [Enum])(aValue As Integer) As TEnum
  overload: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue*
  nameWithType.vb: UFEnumTools.FindValue(Of TEnum)(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(Of TEnum)(Integer)
  name.vb: FindValue(Of TEnum)(Integer)
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList``1
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList``1
  id: AsList``1
  parent: UltraForce.Library.NetStandard.Tools.UFEnumTools
  langs:
  - csharp
  - vb
  name: AsList<TEnum>()
  nameWithType: UFEnumTools.AsList<TEnum>()
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList<TEnum>()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: AsList
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 57
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets all values of an enum as a <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public static List<TEnum> AsList<TEnum>() where TEnum : Enum'
    typeParameters:
    - id: TEnum
      description: ''
    return:
      type: System.Collections.Generic.List{{TEnum}}
      description: ''
    content.vb: Public Shared Function AsList(Of TEnum As [Enum])() As List(Of TEnum)
  overload: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList*
  nameWithType.vb: UFEnumTools.AsList(Of TEnum)()
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList(Of TEnum)()
  name.vb: AsList(Of TEnum)()
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(System.Type,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(System.Type,System.Int32)
  id: FindValue(System.Type,System.Int32)
  parent: UltraForce.Library.NetStandard.Tools.UFEnumTools
  langs:
  - csharp
  - vb
  name: FindValue(Type, int)
  nameWithType: UFEnumTools.FindValue(Type, int)
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(System.Type, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindValue
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumTools.cs
    startLine: 69
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets the enum value for a given integer.
  example: []
  syntax:
    content: public static object FindValue(Type anEnumType, int aValue)
    parameters:
    - id: anEnumType
      type: System.Type
      description: ''
    - id: aValue
      type: System.Int32
      description: ''
    return:
      type: System.Object
      description: Enum equivalent
    content.vb: Public Shared Function FindValue(anEnumType As Type, aValue As Integer) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: UFEnumTools.FindValue(Type, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue(System.Type, Integer)
  name.vb: FindValue(Type, Integer)
references:
- uid: UltraForce.Library.NetStandard.Tools
  commentId: N:UltraForce.Library.NetStandard.Tools
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Tools
  nameWithType: UltraForce.Library.NetStandard.Tools
  fullName: UltraForce.Library.NetStandard.Tools
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumTools.Random
  href: UltraForce.Library.NetStandard.Tools.UFEnumTools.html#UltraForce_Library_NetStandard_Tools_UFEnumTools_Random__1
  name: Random
  nameWithType: UFEnumTools.Random
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.Random
- uid: '{TEnum}'
  commentId: '!:TEnum'
  definition: TEnum
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: TEnum
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet
  href: UltraForce.Library.NetStandard.Tools.UFEnumTools.html#UltraForce_Library_NetStandard_Tools_UFEnumTools_TryGet__1_System_Int32___0__
  name: TryGet
  nameWithType: UFEnumTools.TryGet
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.TryGet
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue
  href: UltraForce.Library.NetStandard.Tools.UFEnumTools.html#UltraForce_Library_NetStandard_Tools_UFEnumTools_FindValue__1_System_Int32_
  name: FindValue
  nameWithType: UFEnumTools.FindValue
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.FindValue
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList
  href: UltraForce.Library.NetStandard.Tools.UFEnumTools.html#UltraForce_Library_NetStandard_Tools_UFEnumTools_AsList__1
  name: AsList
  nameWithType: UFEnumTools.AsList
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumTools.AsList
- uid: System.Collections.Generic.List{{TEnum}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TEnum>
  nameWithType: List<TEnum>
  fullName: System.Collections.Generic.List<TEnum>
  nameWithType.vb: List(Of TEnum)
  fullName.vb: System.Collections.Generic.List(Of TEnum)
  name.vb: List(Of TEnum)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TEnum
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TEnum
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
