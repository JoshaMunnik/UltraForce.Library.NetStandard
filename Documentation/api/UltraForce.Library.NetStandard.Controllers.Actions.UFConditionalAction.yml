### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  commentId: T:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  id: UFConditionalAction
  parent: UltraForce.Library.NetStandard.Controllers.Actions
  children:
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean})
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  - UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UFConditionalAction
  nameWithType: UFConditionalAction
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  type: Class
  source:
    id: UFConditionalAction
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 39
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref> can be used to run some action only when a certain condition is met.
  remarks: >-
    The condition can either be a function or another action. This class can be used for example to perform a

    certain action if another action fails.
  example: []
  syntax:
    content: 'public class UFConditionalAction : UFQueueableAction, IUFWeightedProgress, IUFProgress, IUFQueueableAction'
    content.vb: Public Class UFConditionalAction Inherits UFQueueableAction Implements IUFWeightedProgress, IUFProgress, IUFQueueableAction
  inheritance:
  - System.Object
  - UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFWeightedProgress
  - UltraForce.Library.NetStandard.Interfaces.IUFProgress
  - UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
  inheritedMembers:
  - UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync
  - UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.ProgressWeight
  - UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.Progress
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean})
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean})
  id: '#ctor(System.Func{System.Boolean})'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(Func<bool>)
  nameWithType: UFConditionalAction.UFConditionalAction(Func<bool>)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(System.Func<bool>)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 87
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: >-
    Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.

    <p>

    The action will return the result from aFunction

    </p>
  example: []
  syntax:
    content: public UFConditionalAction(Func<bool> aFunction)
    parameters:
    - id: aFunction
      type: System.Func{System.Boolean}
      description: Function that should return a boolean.
    content.vb: Public Sub New(aFunction As Func(Of Boolean))
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(Func(Of Boolean))
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(System.Func(Of Boolean))
  name.vb: New(Func(Of Boolean))
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  id: '#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(Func<bool>, IUFQueueableAction, IUFQueueableAction)
  nameWithType: UFConditionalAction.UFConditionalAction(Func<bool>, IUFQueueableAction, IUFQueueableAction)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(System.Func<bool>, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 111
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: >-
    Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.

    <p>

    The action will return the result from either the aSuccessAction or aFailureAction.

    </p>
  example: []
  syntax:
    content: public UFConditionalAction(Func<bool> aFunction, IUFQueueableAction aSuccessAction, IUFQueueableAction aFailureAction)
    parameters:
    - id: aFunction
      type: System.Func{System.Boolean}
      description: Function that should return a boolean.
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if aFunction returns true
    - id: aFailureAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if aFunction returns false
    content.vb: Public Sub New(aFunction As Func(Of Boolean), aSuccessAction As IUFQueueableAction, aFailureAction As IUFQueueableAction)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(Func(Of Boolean), IUFQueueableAction, IUFQueueableAction)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(System.Func(Of Boolean), UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  name.vb: New(Func(Of Boolean), IUFQueueableAction, IUFQueueableAction)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  id: '#ctor(System.Func{System.Boolean},System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(Func<bool>, bool, IUFQueueableAction, bool)
  nameWithType: UFConditionalAction.UFConditionalAction(Func<bool>, bool, IUFQueueableAction, bool)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(System.Func<bool>, bool, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, bool)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 139
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public UFConditionalAction(Func<bool> aFunction, bool aTestResult, IUFQueueableAction aSuccessAction, bool anActionResult = true)
    parameters:
    - id: aFunction
      type: System.Func{System.Boolean}
      description: Function that should return a boolean.
    - id: aTestResult
      type: System.Boolean
      description: Value to compare result of aFunction with
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if aTestResult matches the result from aFunction
    - id: anActionResult
      type: System.Boolean
      description: Value to return if aConditionalAction is not run.
    content.vb: Public Sub New(aFunction As Func(Of Boolean), aTestResult As Boolean, aSuccessAction As IUFQueueableAction, anActionResult As Boolean = True)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(Func(Of Boolean), Boolean, IUFQueueableAction, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(System.Func(Of Boolean), Boolean, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, Boolean)
  name.vb: New(Func(Of Boolean), Boolean, IUFQueueableAction, Boolean)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  id: '#ctor(System.Func{System.Boolean},UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(Func<bool>, IUFQueueableAction, bool)
  nameWithType: UFConditionalAction.UFConditionalAction(Func<bool>, IUFQueueableAction, bool)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(System.Func<bool>, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, bool)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 165
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public UFConditionalAction(Func<bool> aFunction, IUFQueueableAction aSuccessAction, bool anActionResult = true)
    parameters:
    - id: aFunction
      type: System.Func{System.Boolean}
      description: Function that should return a boolean.
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if aFunction returns <code>true</code>.
    - id: anActionResult
      type: System.Boolean
      description: Value to return if aFunction returns <code>false</code>
    content.vb: Public Sub New(aFunction As Func(Of Boolean), aSuccessAction As IUFQueueableAction, anActionResult As Boolean = True)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(Func(Of Boolean), IUFQueueableAction, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(System.Func(Of Boolean), UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, Boolean)
  name.vb: New(Func(Of Boolean), IUFQueueableAction, Boolean)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  id: '#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(IUFQueueableAction, IUFQueueableAction, IUFQueueableAction)
  nameWithType: UFConditionalAction.UFConditionalAction(IUFQueueableAction, IUFQueueableAction, IUFQueueableAction)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 189
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: >-
    Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.

    <p>

    The action will return the result from either the aSuccessAction or

    aFailureAction.

    </p>
  example: []
  syntax:
    content: public UFConditionalAction(IUFQueueableAction anAction, IUFQueueableAction aSuccessAction, IUFQueueableAction aFailureAction)
    parameters:
    - id: anAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run and use its result for the test.
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if anAction run successfully and returned true.
    - id: aFailureAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if anAction failed and returned false.
    content.vb: Public Sub New(anAction As IUFQueueableAction, aSuccessAction As IUFQueueableAction, aFailureAction As IUFQueueableAction)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(IUFQueueableAction, IUFQueueableAction, IUFQueueableAction)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction)
  name.vb: New(IUFQueueableAction, IUFQueueableAction, IUFQueueableAction)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  id: '#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(IUFQueueableAction, bool, IUFQueueableAction, bool)
  nameWithType: UFConditionalAction.UFConditionalAction(IUFQueueableAction, bool, IUFQueueableAction, bool)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, bool, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, bool)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 217
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public UFConditionalAction(IUFQueueableAction anAction, bool aTestResult, IUFQueueableAction aSuccessAction, bool anActionResult = true)
    parameters:
    - id: anAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run and use its result for the test.
    - id: aTestResult
      type: System.Boolean
      description: Value to compare result of anAction with
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run if aTestResult matches the result from anAction
    - id: anActionResult
      type: System.Boolean
      description: Value to return if aConditionalAction is not run.
    content.vb: Public Sub New(anAction As IUFQueueableAction, aTestResult As Boolean, aSuccessAction As IUFQueueableAction, anActionResult As Boolean = True)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(IUFQueueableAction, Boolean, IUFQueueableAction, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, Boolean, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, Boolean)
  name.vb: New(IUFQueueableAction, Boolean, IUFQueueableAction, Boolean)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)
  id: '#ctor(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: UFConditionalAction(IUFQueueableAction, IUFQueueableAction, bool)
  nameWithType: UFConditionalAction.UFConditionalAction(IUFQueueableAction, IUFQueueableAction, bool)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, bool)
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 243
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public UFConditionalAction(IUFQueueableAction anAction, IUFQueueableAction aSuccessAction, bool anActionResult = true)
    parameters:
    - id: anAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: Action to run and use its result for the test.
    - id: aSuccessAction
      type: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
      description: >-
        Action to run if aTestResult matches anAction run successfully and

        returned true.
    - id: anActionResult
      type: System.Boolean
      description: Value to return if aConditionalAction is not run.
    content.vb: Public Sub New(anAction As IUFQueueableAction, aSuccessAction As IUFQueueableAction, anActionResult As Boolean = True)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  nameWithType.vb: UFConditionalAction.New(IUFQueueableAction, IUFQueueableAction, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New(UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction, Boolean)
  name.vb: New(IUFQueueableAction, IUFQueueableAction, Boolean)
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync(System.Threading.CancellationToken)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync(System.Threading.CancellationToken)
  id: RunAsync(System.Threading.CancellationToken)
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  langs:
  - csharp
  - vb
  name: RunAsync(CancellationToken)
  nameWithType: UFConditionalAction.RunAsync(CancellationToken)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: RunAsync
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Controllers\Actions\UFConditionalAction.cs
    startLine: 273
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Controllers.Actions
  summary: >-
    Runs the action. First the test result is determines by either executing the function or running the action.

    <p>

    If no success action has been set, the method just returns the result.

    </p>

    <p>

    If the result matches the required value, the success action is run and the its result is returned. 

    </p>

    <p>

    Else the method checks if a failure action has been set. If there is a failure action it is run and its result

    is returned. If there is no failure action the default action result is returned.

    </p>
  example: []
  syntax:
    content: public override Task<bool> RunAsync(CancellationToken aToken)
    parameters:
    - id: aToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        The result of the test function/action or the result of the success or failure action or the value as passed

        in the constructor. If aToken indicates a cancellation the method returns <code>false</code>.
    content.vb: Public Overrides Function RunAsync(aToken As CancellationToken) As Task(Of Boolean)
  overridden: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
  overload: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync*
references:
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  commentId: T:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.html
  name: UFConditionalAction
  nameWithType: UFConditionalAction
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction
- uid: UltraForce.Library.NetStandard.Controllers.Actions
  commentId: N:UltraForce.Library.NetStandard.Controllers.Actions
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Controllers.Actions
  nameWithType: UltraForce.Library.NetStandard.Controllers.Actions
  fullName: UltraForce.Library.NetStandard.Controllers.Actions
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Controllers
    name: Controllers
    href: UltraForce.Library.NetStandard.Controllers.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Controllers.Actions
    name: Actions
    href: UltraForce.Library.NetStandard.Controllers.Actions.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Controllers
    name: Controllers
    href: UltraForce.Library.NetStandard.Controllers.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Controllers.Actions
    name: Actions
    href: UltraForce.Library.NetStandard.Controllers.Actions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  commentId: T:UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  parent: UltraForce.Library.NetStandard.Controllers.Actions
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html
  name: UFQueueableAction
  nameWithType: UFQueueableAction
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
- uid: UltraForce.Library.NetStandard.Interfaces.IUFWeightedProgress
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFWeightedProgress
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFWeightedProgress.html
  name: IUFWeightedProgress
  nameWithType: IUFWeightedProgress
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFWeightedProgress
- uid: UltraForce.Library.NetStandard.Interfaces.IUFProgress
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFProgress
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFProgress.html
  name: IUFProgress
  nameWithType: IUFProgress
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFProgress
- uid: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
  commentId: T:UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
  parent: UltraForce.Library.NetStandard.Controllers.Actions
  href: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction.html
  name: IUFQueueableAction
  nameWithType: IUFQueueableAction
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.IUFQueueableAction
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync
  name: RunAsync()
  nameWithType: UFQueueableAction.RunAsync()
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync
    name: RunAsync
    href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync
    name: RunAsync
    href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.ProgressWeight
  commentId: P:UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.ProgressWeight
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_ProgressWeight
  name: ProgressWeight
  nameWithType: UFQueueableAction.ProgressWeight
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.ProgressWeight
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.Progress
  commentId: P:UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.Progress
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_Progress
  name: Progress
  nameWithType: UFQueueableAction.Progress
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.Progress
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.#ctor
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFConditionalAction__ctor_System_Func_System_Boolean__
  name: UFConditionalAction
  nameWithType: UFConditionalAction.UFConditionalAction
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.UFConditionalAction
  nameWithType.vb: UFConditionalAction.New
  fullName.vb: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.New
  name.vb: New
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
  commentId: M:UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
  parent: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction
  isExternal: true
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync_System_Threading_CancellationToken_
  name: RunAsync(CancellationToken)
  nameWithType: UFQueueableAction.RunAsync(CancellationToken)
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
    name: RunAsync
    href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.RunAsync(System.Threading.CancellationToken)
    name: RunAsync
    href: UltraForce.Library.NetStandard.Controllers.Actions.UFQueueableAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFQueueableAction_RunAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync*
  commentId: Overload:UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync
  href: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.html#UltraForce_Library_NetStandard_Controllers_Actions_UFConditionalAction_RunAsync_System_Threading_CancellationToken_
  name: RunAsync
  nameWithType: UFConditionalAction.RunAsync
  fullName: UltraForce.Library.NetStandard.Controllers.Actions.UFConditionalAction.RunAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
