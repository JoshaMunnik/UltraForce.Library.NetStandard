### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools
  commentId: T:UltraForce.Library.NetStandard.Tools.UFStringTools
  id: UFStringTools
  parent: UltraForce.Library.NetStandard.Tools
  children:
  - UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid
  - UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid(System.Guid)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.Char,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.String,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32,System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode(System.Int32)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode(System.Int32)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[])
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[],System.Char[])
  - UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString(System.Byte[])
  - UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters(System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail(System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName(System.String)
  - UltraForce.Library.NetStandard.Tools.UFStringTools.Replace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString(System.String[])
  langs:
  - csharp
  - vb
  name: UFStringTools
  nameWithType: UFStringTools
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFStringTools
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 42
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: An utility class that adds extra string related methods.
  example: []
  syntax:
    content: public static class UFStringTools
    content.vb: Public Module UFStringTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32)
  id: GenerateCode(System.Int32)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GenerateCode(int)
  nameWithType: UFStringTools.GenerateCode(int)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GenerateCode
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 78
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Generates a code existing of a random sequence of upper and lowercase letters and numbers.
  remarks: >-
    The code makes sure every 3rd char is a numeric value (to prevent offensive words). Also the code will not

    contain any zero, uppercase o, one and lowercase l characters since these might look similar with certain fonts.
  example: []
  syntax:
    content: public static string GenerateCode(int aLength)
    parameters:
    - id: aLength
      type: System.Int32
      description: Size of the generated code
    return:
      type: System.String
      description: a random code of aLength characters
    content.vb: Public Shared Function GenerateCode(aLength As Integer) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode*
  nameWithType.vb: UFStringTools.GenerateCode(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(Integer)
  name.vb: GenerateCode(Integer)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode(System.Int32)
  id: GenerateTextCode(System.Int32)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GenerateTextCode(int)
  nameWithType: UFStringTools.GenerateTextCode(int)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode(int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GenerateTextCode
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 128
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Generates a code existing of a random sequence of upper and lowercase letters.
  remarks: >-
    The code will not contain any uppercase o and lowercase l characters since these might look

    similar with certain fonts.
  example: []
  syntax:
    content: public static string GenerateTextCode(int aLength)
    parameters:
    - id: aLength
      type: System.Int32
      description: Size of the generated code
    return:
      type: System.String
      description: a random code of aLength characters
    content.vb: Public Shared Function GenerateTextCode(aLength As Integer) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode*
  nameWithType.vb: UFStringTools.GenerateTextCode(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode(Integer)
  name.vb: GenerateTextCode(Integer)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode(System.Int32)
  id: GenerateNumericCode(System.Int32)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GenerateNumericCode(int)
  nameWithType: UFStringTools.GenerateNumericCode(int)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode(int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GenerateNumericCode
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 158
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Generates a numeric code. The method makes sure the first digit is not 0.
  example: []
  syntax:
    content: public static string GenerateNumericCode(int aLength)
    parameters:
    - id: aLength
      type: System.Int32
      description: Number of digits
    return:
      type: System.String
      description: A code of aLength characters existing of characters '0' - '9'
    content.vb: Public Shared Function GenerateNumericCode(aLength As Integer) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode*
  nameWithType.vb: UFStringTools.GenerateNumericCode(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode(Integer)
  name.vb: GenerateNumericCode(Integer)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32,System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(System.Int32,System.String)
  id: GenerateCode(System.Int32,System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GenerateCode(int, string)
  nameWithType: UFStringTools.GenerateCode(int, string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(int, string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GenerateCode
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 178
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Generates a code using a custom alphabet.
  example: []
  syntax:
    content: public static string GenerateCode(int aLength, string anAlphabet)
    parameters:
    - id: aLength
      type: System.Int32
      description: Number of digits
    - id: anAlphabet
      type: System.String
      description: Alphabet to get characters from
    return:
      type: System.String
      description: A code of aLength characters existing of random characters from anAlphabet
    content.vb: Public Shared Function GenerateCode(aLength As Integer, anAlphabet As String) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode*
  nameWithType.vb: UFStringTools.GenerateCode(Integer, String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode(Integer, String)
  name.vb: GenerateCode(Integer, String)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid
  id: CodeFromGuid
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: CodeFromGuid()
  nameWithType: UFStringTools.CodeFromGuid()
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CodeFromGuid
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 192
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Creates an unique code by converting a new guid to a hex string.
  example: []
  syntax:
    content: public static string CodeFromGuid()
    return:
      type: System.String
      description: Unique code based on a guid
    content.vb: Public Shared Function CodeFromGuid() As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid*
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid(System.Guid)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid(System.Guid)
  id: CodeFromGuid(System.Guid)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: CodeFromGuid(Guid)
  nameWithType: UFStringTools.CodeFromGuid(Guid)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid(System.Guid)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CodeFromGuid
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 202
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Converts a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to a hex string.
  example: []
  syntax:
    content: public static string CodeFromGuid(Guid aGuid)
    parameters:
    - id: aGuid
      type: System.Guid
      description: Guid to convert
    return:
      type: System.String
      description: Unique code based on a guid
    content.vb: Public Shared Function CodeFromGuid(aGuid As Guid) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid*
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString(System.String[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString(System.String[])
  id: SelectString(System.String[])
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: SelectString(params string?[]?)
  nameWithType: UFStringTools.SelectString(params string?[]?)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString(params string?[]?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SelectString
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 215
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Checks the string and returns the first one that is not null and not empty.

    If all texts fail, return <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string SelectString(params string?[]? aTexts)
    parameters:
    - id: aTexts
      type: System.String[]
      description: Texts to check to check
    return:
      type: System.String
      description: One of the values from aTexts or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function SelectString(ParamArray aTexts As String()) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString*
  nameWithType.vb: UFStringTools.SelectString(ParamArray String())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString(ParamArray String())
  name.vb: SelectString(ParamArray String())
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: Add(string?, string?, string)
  nameWithType: UFStringTools.Add(string?, string?, string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(string?, string?, string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 244
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Adds a string to the end of a string. Use a separator if the string being added to is not empty.
  example: []
  syntax:
    content: public static string Add(string? aSource, string? aValue, string aSeparator = ", ")
    parameters:
    - id: aSource
      type: System.String
      description: String to add to
    - id: aValue
      type: System.String
      description: String to add
    - id: aSeparator
      type: System.String
      description: Separator to use if aSource is not empty
    return:
      type: System.String
      description: '[aSource + aSeparator] + aValue'
    content.vb: Public Shared Function Add(aSource As String, aValue As String, aSeparator As String = ", ") As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.Add*
  nameWithType.vb: UFStringTools.Add(String, String, String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(String, String, String)
  name.vb: Add(String, String, String)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.Char,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.Char,System.String,System.Boolean)
  id: Count(System.Char,System.String,System.Boolean)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: Count(char, string, bool)
  nameWithType: UFStringTools.Count(char, string, bool)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(char, string, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Count
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 263
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Count the number of occurrences of a character inside another string
  example: []
  syntax:
    content: public static int Count(char aValue, string aText, bool aCaseInsensitive = false)
    parameters:
    - id: aValue
      type: System.Char
      description: A char value to count
    - id: aText
      type: System.String
      description: A string to count in
    - id: aCaseInsensitive
      type: System.Boolean
      description: <code>true</code>, ignore casing; <code>false</code>, differentiate between lower- and uppercase.
    return:
      type: System.Int32
      description: Number of occurrences
    content.vb: Public Shared Function Count(aValue As Char, aText As String, aCaseInsensitive As Boolean = False) As Integer
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.Count*
  nameWithType.vb: UFStringTools.Count(Char, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(Char, String, Boolean)
  name.vb: Count(Char, String, Boolean)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.String,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Count(System.String,System.String,System.Boolean)
  id: Count(System.String,System.String,System.Boolean)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: Count(string, string, bool)
  nameWithType: UFStringTools.Count(string, string, bool)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(string, string, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Count
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 286
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Count the number of occurrences of a character inside another string
  example: []
  syntax:
    content: public static int Count(string aValue, string aText, bool aCaseInsensitive = false)
    parameters:
    - id: aValue
      type: System.String
      description: A char value to count
    - id: aText
      type: System.String
      description: A string to count in
    - id: aCaseInsensitive
      type: System.Boolean
      description: <code>true</code>, ignore casing; <code>false</code>, differentiate between lower- and uppercase.
    return:
      type: System.Int32
      description: Number of occurrences or -1 if aValue is empty
    content.vb: Public Shared Function Count(aValue As String, aText As String, aCaseInsensitive As Boolean = False) As Integer
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.Count*
  nameWithType.vb: UFStringTools.Count(String, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Count(String, String, Boolean)
  name.vb: Count(String, String, Boolean)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[])
  id: GetHexString(System.Byte[])
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GetHexString(byte[])
  nameWithType: UFStringTools.GetHexString(byte[])
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(byte[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetHexString
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 318
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Create an hexadecimal representation of a byte array.
  remarks: The method will return uppercase A..F characters.
  example: []
  syntax:
    content: public static string GetHexString(byte[] aBytes)
    parameters:
    - id: aBytes
      type: System.Byte[]
      description: An array of bytes to convert to string.
    return:
      type: System.String
      description: The bytes as hexadecimal string.
    content.vb: Public Shared Function GetHexString(aBytes As Byte()) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString*
  nameWithType.vb: UFStringTools.GetHexString(Byte())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(Byte())
  name.vb: GetHexString(Byte())
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString(System.Byte[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString(System.Byte[])
  id: GetLowerCaseHexString(System.Byte[])
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GetLowerCaseHexString(byte[])
  nameWithType: UFStringTools.GetLowerCaseHexString(byte[])
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString(byte[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetLowerCaseHexString
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 331
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Create an hexadecimal representation of a byte array.
  remarks: The method will return lowercase a..f characters.
  example: []
  syntax:
    content: public static string GetLowerCaseHexString(byte[] aBytes)
    parameters:
    - id: aBytes
      type: System.Byte[]
      description: An array of bytes to convert to string.
    return:
      type: System.String
      description: The bytes as hexadecimal string.
    content.vb: Public Shared Function GetLowerCaseHexString(aBytes As Byte()) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString*
  nameWithType.vb: UFStringTools.GetLowerCaseHexString(Byte())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString(Byte())
  name.vb: GetLowerCaseHexString(Byte())
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[],System.Char[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(System.Byte[],System.Char[])
  id: GetHexString(System.Byte[],System.Char[])
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: GetHexString(byte[], char[])
  nameWithType: UFStringTools.GetHexString(byte[], char[])
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(byte[], char[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetHexString
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 348
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Converts a byte array to a hexadecimal presentation.
  example: []
  syntax:
    content: public static string GetHexString(byte[] aBytes, char[] aNibbleMap)
    parameters:
    - id: aBytes
      type: System.Byte[]
      description: Bytes to convert
    - id: aNibbleMap
      type: System.Char[]
      description: Maps nibbles (0..15) to character equivalent
    return:
      type: System.String
      description: A string containing a textual representation of the array
    content.vb: Public Shared Function GetHexString(aBytes As Byte(), aNibbleMap As Char()) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString*
  nameWithType.vb: UFStringTools.GetHexString(Byte(), Char())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString(Byte(), Char())
  name.vb: GetHexString(Byte(), Char())
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Replace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: Replace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: Replace(string?, IDictionary<string, string>?)
  nameWithType: UFStringTools.Replace(string?, IDictionary<string, string>?)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace(string?, System.Collections.Generic.IDictionary<string, string>?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Replace
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 385
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Replaces all keys with their value in a string.
  example: []
  syntax:
    content: public static string? Replace(string? anOriginal, IDictionary<string, string>? aMapping)
    parameters:
    - id: anOriginal
      type: System.String
      description: string to update, when it is <code>null</code> the method just returns <code>null</code>.
    - id: aMapping
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: keys and values, when it is <code>null</code> the method just returns the value of <code>anOriginal</code>.
    return:
      type: System.String
      description: updated string
    content.vb: Public Shared Function Replace(anOriginal As String, aMapping As IDictionary(Of String, String)) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace*
  nameWithType.vb: UFStringTools.Replace(String, IDictionary(Of String, String))
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace(String, System.Collections.Generic.IDictionary(Of String, String))
  name.vb: Replace(String, IDictionary(Of String, String))
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters(System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters(System.String)
  id: HasUniqueCharacters(System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: HasUniqueCharacters(string)
  nameWithType: UFStringTools.HasUniqueCharacters(string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: HasUniqueCharacters
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 404
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Checks if a string is made up of unique characters.
  example: []
  syntax:
    content: public static bool HasUniqueCharacters(string aText)
    parameters:
    - id: aText
      type: System.String
      description: Text to check
    return:
      type: System.Boolean
      description: true if all characters only occur once
    content.vb: Public Shared Function HasUniqueCharacters(aText As String) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters*
  nameWithType.vb: UFStringTools.HasUniqueCharacters(String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters(String)
  name.vb: HasUniqueCharacters(String)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  id: Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: Join<T>(IEnumerable<T>, string)
  nameWithType: UFStringTools.Join<T>(IEnumerable<T>, string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Join<T>(System.Collections.Generic.IEnumerable<T>, string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Join
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 426
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Joins the values of an enumerable type by using <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and joining them using

    <xref href="UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static string Join<T>(IEnumerable<T> anEnumerable, string aSeparator = ", ") where T : notnull'
    parameters:
    - id: anEnumerable
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Enumerable to combine into one string
    - id: aSeparator
      type: System.String
      description: Text to use separator between each value
    typeParameters:
    - id: T
      description: Enumerable type
    return:
      type: System.String
      description: A string with all values joined together
    content.vb: Public Shared Function Join(Of T)(anEnumerable As IEnumerable(Of T), aSeparator As String = ", ") As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.Join*
  nameWithType.vb: UFStringTools.Join(Of T)(IEnumerable(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Join(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: Join(Of T)(IEnumerable(Of T), String)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName(System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName(System.String)
  id: NormalizeName(System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: NormalizeName(string)
  nameWithType: UFStringTools.NormalizeName(string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: NormalizeName
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 438
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Creates a normalized version of a name, which can be used with case insensitive comparisons.
  example: []
  syntax:
    content: public static string NormalizeName(string aName)
    parameters:
    - id: aName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function NormalizeName(aName As String) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName*
  nameWithType.vb: UFStringTools.NormalizeName(String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName(String)
  name.vb: NormalizeName(String)
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail(System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail(System.String)
  id: NormalizeEmail(System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFStringTools
  langs:
  - csharp
  - vb
  name: NormalizeEmail(string)
  nameWithType: UFStringTools.NormalizeEmail(string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail(string)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFStringTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: NormalizeEmail
    path: ../UltraForce.Library.NetStandard/Tools/UFStringTools.cs
    startLine: 449
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Creates a normalized version of an email, which can be used with case insensitive

    comparisons.
  example: []
  syntax:
    content: public static string NormalizeEmail(string anEmail)
    parameters:
    - id: anEmail
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function NormalizeEmail(anEmail As String) As String
  overload: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail*
  nameWithType.vb: UFStringTools.NormalizeEmail(String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail(String)
  name.vb: NormalizeEmail(String)
references:
- uid: UltraForce.Library.NetStandard.Tools
  commentId: N:UltraForce.Library.NetStandard.Tools
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Tools
  nameWithType: UltraForce.Library.NetStandard.Tools
  fullName: UltraForce.Library.NetStandard.Tools
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_GenerateCode_System_Int32_
  name: GenerateCode
  nameWithType: UFStringTools.GenerateCode
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_GenerateTextCode_System_Int32_
  name: GenerateTextCode
  nameWithType: UFStringTools.GenerateTextCode
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateTextCode
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_GenerateNumericCode_System_Int32_
  name: GenerateNumericCode
  nameWithType: UFStringTools.GenerateNumericCode
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GenerateNumericCode
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_CodeFromGuid
  name: CodeFromGuid
  nameWithType: UFStringTools.CodeFromGuid
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.CodeFromGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string.empty
  name: Empty
  nameWithType: string.Empty
  fullName: string.Empty
  nameWithType.vb: String.Empty
  fullName.vb: String.Empty
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_SelectString_System_String___
  name: SelectString
  nameWithType: UFStringTools.SelectString
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.SelectString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Add*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.Add
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Add_System_String_System_String_System_String_
  name: Add
  nameWithType: UFStringTools.Add
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Add
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Count*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.Count
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Count_System_Char_System_String_System_Boolean_
  name: Count
  nameWithType: UFStringTools.Count
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Count
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_GetHexString_System_Byte___
  name: GetHexString
  nameWithType: UFStringTools.GetHexString
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GetHexString
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_GetLowerCaseHexString_System_Byte___
  name: GetLowerCaseHexString
  nameWithType: UFStringTools.GetLowerCaseHexString
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.GetLowerCaseHexString
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.Replace
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Replace_System_String_System_Collections_Generic_IDictionary_System_String_System_String__
  name: Replace
  nameWithType: UFStringTools.Replace
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Replace
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_HasUniqueCharacters_System_String_
  name: HasUniqueCharacters
  nameWithType: UFStringTools.HasUniqueCharacters
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.HasUniqueCharacters
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Add_System_String_System_String_System_String_
  name: Add(string, string, string)
  nameWithType: UFStringTools.Add(string, string, string)
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(string, string, string)
  nameWithType.vb: UFStringTools.Add(String, String, String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(String, String, String)
  name.vb: Add(String, String, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
    name: Add
    href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Add_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Add(System.String,System.String,System.String)
    name: Add
    href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Add_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.Join*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.Join
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_Join__1_System_Collections_Generic_IEnumerable___0__System_String_
  name: Join
  nameWithType: UFStringTools.Join
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.Join
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_NormalizeName_System_String_
  name: NormalizeName
  nameWithType: UFStringTools.NormalizeName
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeName
- uid: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail
  href: UltraForce.Library.NetStandard.Tools.UFStringTools.html#UltraForce_Library_NetStandard_Tools_UFStringTools_NormalizeEmail_System_String_
  name: NormalizeEmail
  nameWithType: UFStringTools.NormalizeEmail
  fullName: UltraForce.Library.NetStandard.Tools.UFStringTools.NormalizeEmail
