### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  commentId: T:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  id: UFWeakReferenceCollection`1
  parent: UltraForce.Library.NetStandard.Data
  children:
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor(System.Int32)
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains(`0)
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  - UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: UFWeakReferenceCollection<T>
  nameWithType: UFWeakReferenceCollection<T>
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFWeakReferenceCollection
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 50
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: >-
    This collection can be used to track a collection of objects that might get garbage collected at one point.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.Add(%600)" data-throw-if-not-resolved="false"></xref> or <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.Add(System.Collections.Generic.IEnumerable%7b%600%7d)" data-throw-if-not-resolved="false"></xref> to add items. If possible an object can

    call <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.Disposing(%600)" data-throw-if-not-resolved="false"></xref> from its destructor or <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref> method to clean up

    dead references.

    </p>

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.GetExistingItems" data-throw-if-not-resolved="false"></xref> to get a list of all items that are still existing.

    </p>

    <p>

    The class can also act as a pool of objects, use the <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.Pop" data-throw-if-not-resolved="false"></xref> to get an existing item.

    </p>
  example: []
  syntax:
    content: 'public class UFWeakReferenceCollection<T> where T : class'
    typeParameters:
    - id: T
      description: Type to track references to
    content.vb: Public Class UFWeakReferenceCollection(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UFWeakReferenceCollection(Of T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T)
  name.vb: UFWeakReferenceCollection(Of T)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: UFWeakReferenceCollection(int)
  nameWithType: UFWeakReferenceCollection<T>.UFWeakReferenceCollection(int)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.UFWeakReferenceCollection(int)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 83
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: >-
    Constructs an instance of <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601" data-throw-if-not-resolved="false"></xref>.

    <p>

    The threshold indicates after how many <xref href="UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection%601.Disposing(%600)" data-throw-if-not-resolved="false"></xref> calls

    the class will clean up the internally managed list by removing all

    references to objects that are no longer existing.

    </p>
  example: []
  syntax:
    content: public UFWeakReferenceCollection(int aThreshold = 100)
    parameters:
    - id: aThreshold
      type: System.Int32
      description: Clean up threshold
    content.vb: Public Sub New(aThreshold As Integer = 100)
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor*
  nameWithType.vb: UFWeakReferenceCollection(Of T).New(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).New(Integer)
  name.vb: New(Integer)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
  id: Add(`0)
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: UFWeakReferenceCollection<T>.Add(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 97
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Adds an item to the collection.
  example: []
  syntax:
    content: public void Add(T anItem)
    parameters:
    - id: anItem
      type: '{T}'
      description: Item to add
    content.vb: Public Sub Add(anItem As T)
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Add(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Add(T)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
  id: Add(System.Collections.Generic.IEnumerable{`0})
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<T>)
  nameWithType: UFWeakReferenceCollection<T>.Add(IEnumerable<T>)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Add(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 111
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Adds multiple items to the collection.
  example: []
  syntax:
    content: public void Add(IEnumerable<T> anItems)
    parameters:
    - id: anItems
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Items to add
    content.vb: Public Sub Add(anItems As IEnumerable(Of T))
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Add(IEnumerable(Of T))
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Add(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(IEnumerable(Of T))
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove(`0)
  id: Remove(`0)
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: UFWeakReferenceCollection<T>.Remove(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Remove
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 123
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Removes an item from the collection.
  example: []
  syntax:
    content: public void Remove(T anItem)
    parameters:
    - id: anItem
      type: '{T}'
      description: Item to remove
    content.vb: Public Sub Remove(anItem As T)
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Remove(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Remove(T)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  id: Pop
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Pop()
  nameWithType: UFWeakReferenceCollection<T>.Pop()
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Pop()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Pop
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 136
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Gets and removes an existing item from the end of the list.
  example: []
  syntax:
    content: public T? Pop()
    return:
      type: '{T}'
      description: Instance or null if there are no existing items
    content.vb: Public Function Pop() As T
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Pop()
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Pop()
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains(`0)
  id: Contains(`0)
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: UFWeakReferenceCollection<T>.Contains(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Contains
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 157
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Checks if the collection already contains a reference to a certain item.
  example: []
  syntax:
    content: public bool Contains(T anItem)
    parameters:
    - id: anItem
      type: '{T}'
      description: Item to check
    return:
      type: System.Boolean
      description: <code>True</code> if item is in the collection
    content.vb: Public Function Contains(anItem As T) As Boolean
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Contains(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Contains(T)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
  id: Disposing(`0)
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Disposing(T)
  nameWithType: UFWeakReferenceCollection<T>.Disposing(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Disposing(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Disposing
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 171
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: >-
    An object that is part of the collection can call this method from its destructor or

    <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref> method.

    <p>

    The method will keep track of the number of calls and cleans up dead references once the threshold has been

    reached.

    </p>
  example: []
  syntax:
    content: public void Disposing(T anItem)
    parameters:
    - id: anItem
      type: '{T}'
      description: Item being disposed
    content.vb: Public Sub Disposing(anItem As T)
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Disposing(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Disposing(T)
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear
  id: Clear
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: UFWeakReferenceCollection<T>.Clear()
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Clear()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Clear
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 183
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: Clears all referenced items.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear*
  nameWithType.vb: UFWeakReferenceCollection(Of T).Clear()
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Clear()
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  id: GetExistingItems
  parent: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  langs:
  - csharp
  - vb
  name: GetExistingItems()
  nameWithType: UFWeakReferenceCollection<T>.GetExistingItems()
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.GetExistingItems()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetExistingItems
    path: ../UltraForce.Library.NetStandard/Data/UFWeakReferenceCollection.cs
    startLine: 194
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Data
  summary: >-
    Gets all items that are still existing. Take note that the items will not be garbage collected until the

    returned list instance is garbage collected.
  example: []
  syntax:
    content: public List<T> GetExistingItems()
    return:
      type: System.Collections.Generic.List{{T}}
      description: List containing all existing items
    content.vb: Public Function GetExistingItems() As List(Of T)
  overload: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems*
  nameWithType.vb: UFWeakReferenceCollection(Of T).GetExistingItems()
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).GetExistingItems()
references:
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add__0_
  name: Add(T)
  nameWithType: UFWeakReferenceCollection<T>.Add(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Add(T)
  nameWithType.vb: UFWeakReferenceCollection(Of T).Add(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Add(T)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
    name: Add
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(`0)
    name: Add
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add_System_Collections_Generic_IEnumerable__0__
  name: Add(IEnumerable<T>)
  nameWithType: UFWeakReferenceCollection<T>.Add(IEnumerable<T>)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Add(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: UFWeakReferenceCollection(Of T).Add(IEnumerable(Of T))
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Add(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(IEnumerable(Of T))
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Disposing__0_
  name: Disposing(T)
  nameWithType: UFWeakReferenceCollection<T>.Disposing(T)
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Disposing(T)
  nameWithType.vb: UFWeakReferenceCollection(Of T).Disposing(T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Disposing(T)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
    name: Disposing
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Disposing__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing(`0)
    name: Disposing
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Disposing__0_
  - name: (
  - name: T
  - name: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_GetExistingItems
  name: GetExistingItems()
  nameWithType: UFWeakReferenceCollection<T>.GetExistingItems()
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.GetExistingItems()
  nameWithType.vb: UFWeakReferenceCollection(Of T).GetExistingItems()
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).GetExistingItems()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
    name: GetExistingItems
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_GetExistingItems
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
    name: GetExistingItems
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_GetExistingItems
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  commentId: M:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Pop
  name: Pop()
  nameWithType: UFWeakReferenceCollection<T>.Pop()
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Pop()
  nameWithType.vb: UFWeakReferenceCollection(Of T).Pop()
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Pop()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
    name: Pop
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Pop
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
    name: Pop
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Pop
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Data
  commentId: N:UltraForce.Library.NetStandard.Data
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Data
  nameWithType: UltraForce.Library.NetStandard.Data
  fullName: UltraForce.Library.NetStandard.Data
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Data
    name: Data
    href: UltraForce.Library.NetStandard.Data.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Data
    name: Data
    href: UltraForce.Library.NetStandard.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  commentId: T:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html
  name: UFWeakReferenceCollection<T>
  nameWithType: UFWeakReferenceCollection<T>
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>
  nameWithType.vb: UFWeakReferenceCollection(Of T)
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T)
  name.vb: UFWeakReferenceCollection(Of T)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
    name: UFWeakReferenceCollection
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1
    name: UFWeakReferenceCollection
    href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.#ctor
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1__ctor_System_Int32_
  name: UFWeakReferenceCollection
  nameWithType: UFWeakReferenceCollection<T>.UFWeakReferenceCollection
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.UFWeakReferenceCollection
  nameWithType.vb: UFWeakReferenceCollection(Of T).New
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Add
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Add__0_
  name: Add
  nameWithType: UFWeakReferenceCollection<T>.Add
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Add
  nameWithType.vb: UFWeakReferenceCollection(Of T).Add
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Remove
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Remove__0_
  name: Remove
  nameWithType: UFWeakReferenceCollection<T>.Remove
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Remove
  nameWithType.vb: UFWeakReferenceCollection(Of T).Remove
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Remove
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Pop
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Pop
  name: Pop
  nameWithType: UFWeakReferenceCollection<T>.Pop
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Pop
  nameWithType.vb: UFWeakReferenceCollection(Of T).Pop
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Pop
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Contains
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Contains__0_
  name: Contains
  nameWithType: UFWeakReferenceCollection<T>.Contains
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Contains
  nameWithType.vb: UFWeakReferenceCollection(Of T).Contains
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Disposing
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Disposing__0_
  name: Disposing
  nameWithType: UFWeakReferenceCollection<T>.Disposing
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Disposing
  nameWithType.vb: UFWeakReferenceCollection(Of T).Disposing
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Disposing
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.Clear
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_Clear
  name: Clear
  nameWithType: UFWeakReferenceCollection<T>.Clear
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.Clear
  nameWithType.vb: UFWeakReferenceCollection(Of T).Clear
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).Clear
- uid: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems*
  commentId: Overload:UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection`1.GetExistingItems
  href: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection-1.html#UltraForce_Library_NetStandard_Data_UFWeakReferenceCollection_1_GetExistingItems
  name: GetExistingItems
  nameWithType: UFWeakReferenceCollection<T>.GetExistingItems
  fullName: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection<T>.GetExistingItems
  nameWithType.vb: UFWeakReferenceCollection(Of T).GetExistingItems
  fullName.vb: UltraForce.Library.NetStandard.Data.UFWeakReferenceCollection(Of T).GetExistingItems
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
