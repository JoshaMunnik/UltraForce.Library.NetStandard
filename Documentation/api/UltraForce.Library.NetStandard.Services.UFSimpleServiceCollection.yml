### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  commentId: T:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  id: UFSimpleServiceCollection
  parent: UltraForce.Library.NetStandard.Services
  children:
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance``1
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService(System.Type)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered(System.Type)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects(System.Object)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register(System.Type,System.Type)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Object)
  - UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: UFSimpleServiceCollection
  nameWithType: UFSimpleServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  type: Class
  source:
    id: UFSimpleServiceCollection
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 50
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    <xref href="UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection" data-throw-if-not-resolved="false"></xref> is a basic implementation of <xref href="UltraForce.Library.NetStandard.Services.IUFServiceCollection" data-throw-if-not-resolved="false"></xref>.

    <p>

    The class does not implement any constructor matching code. If there are multiple constructors, the class will

    skip constructors without parameters and use the first constructor with parameters to create an instance with.

    </p>

    <p>

    It is possible to annotate a constructor with <xref href="UltraForce.Library.NetStandard.Annotations.UFInjectAttribute" data-throw-if-not-resolved="false"></xref> to force the use of that

    constructor. If multiple constructors are annotated, the class will use the first annotated constructor.

    </p>
  example: []
  syntax:
    content: 'public class UFSimpleServiceCollection : IUFServiceCollection, IServiceProvider'
    content.vb: Public Class UFSimpleServiceCollection Implements IUFServiceCollection, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection
  - System.IServiceProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor
  id: '#ctor'
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: UFSimpleServiceCollection()
  nameWithType: UFSimpleServiceCollection.UFSimpleServiceCollection()
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.UFSimpleServiceCollection()
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 68
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public UFSimpleServiceCollection()
    content.vb: Public Sub New()
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor*
  nameWithType.vb: UFSimpleServiceCollection.New()
  fullName.vb: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.New()
  name.vb: New()
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: CreateInstance(Type)
  nameWithType: UFSimpleServiceCollection.CreateInstance(Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  type: Method
  source:
    id: CreateInstance
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 83
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Creates an instance of certain class type. The type does not have to be a registered service. The method will

    still use dependency injection to resolve constructor parameters.
  example: []
  syntax:
    content: public object CreateInstance(Type aType)
    parameters:
    - id: aType
      type: System.Type
      description: Type to create instance of
    return:
      type: System.Object
      description: Instance of the requested type
    content.vb: Public Function CreateInstance(aType As Type) As Object
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance*
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance``1
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance``1
  id: CreateInstance``1
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: CreateInstance<T>()
  nameWithType: UFSimpleServiceCollection.CreateInstance<T>()
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance<T>()
  type: Method
  source:
    id: CreateInstance
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 93
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Generic version of <xref href="UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public T CreateInstance<T>()
    typeParameters:
    - id: T
      description: Type of class to create instance of
    return:
      type: '{T}'
      description: Instance of the specified type
    content.vb: Public Function CreateInstance(Of T)() As T
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance*
  nameWithType.vb: UFSimpleServiceCollection.CreateInstance(Of T)()
  fullName.vb: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register(System.Type,System.Type)
  id: Register(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: Register(Type, Type)
  nameWithType: UFSimpleServiceCollection.Register(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register(System.Type, System.Type)
  type: Method
  source:
    id: Register
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 103
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Registers a provider type for a certain service type. A new instance will be created every time the service type

    is requested.
  example: []
  syntax:
    content: public void Register(Type aServiceType, Type aProvider)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProvider
      type: System.Type
      description: Type to create instance of when then service is requested.
    content.vb: Public Sub Register(aServiceType As Type, aProvider As Type)
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register*
  implements:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Type)
  id: RegisterSingleton(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: RegisterSingleton(Type, Type)
  nameWithType: UFSimpleServiceCollection.RegisterSingleton(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type, System.Type)
  type: Method
  source:
    id: RegisterSingleton
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 109
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Registers a provider type for a certain service type. The first time the service is requested an instance is

    created. Subsequent requests will use the same instance.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to register an existing instance.

    </p>
  example: []
  syntax:
    content: public void RegisterSingleton(Type aServiceType, Type aProvider)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProvider
      type: System.Type
      description: Type to create singleton instance of when the service is requested.
    content.vb: Public Sub RegisterSingleton(aServiceType As Type, aProvider As Type)
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton*
  implements:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type,System.Object)
  id: RegisterSingleton(System.Type,System.Object)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: RegisterSingleton(Type, object)
  nameWithType: UFSimpleServiceCollection.RegisterSingleton(Type, object)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type, object)
  type: Method
  source:
    id: RegisterSingleton
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 115
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Registers a singleton provider instance for a certain service type.
  example: []
  syntax:
    content: public void RegisterSingleton(Type aServiceType, object aProviderInstance)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProviderInstance
      type: System.Object
      description: Instance to return when the service is requested.
    content.vb: Public Sub RegisterSingleton(aServiceType As Type, aProviderInstance As Object)
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton*
  implements:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  nameWithType.vb: UFSimpleServiceCollection.RegisterSingleton(Type, Object)
  fullName.vb: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton(System.Type, Object)
  name.vb: RegisterSingleton(Type, Object)
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered(System.Type)
  id: IsRegistered(System.Type)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: IsRegistered(Type)
  nameWithType: UFSimpleServiceCollection.IsRegistered(Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered(System.Type)
  type: Method
  source:
    id: IsRegistered
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 121
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Checks if there is a registration for a service type.
  example: []
  syntax:
    content: public bool IsRegistered(Type aServiceType)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to check registration for
    return:
      type: System.Boolean
      description: <code>True</code> if there is a registration; otherwise <code>false</code>.
    content.vb: Public Function IsRegistered(aServiceType As Type) As Boolean
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered*
  implements:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService(System.Type)
  id: GetService(System.Type)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: GetService(Type)
  nameWithType: UFSimpleServiceCollection.GetService(Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService(System.Type)
  type: Method
  source:
    id: GetService
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 131
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Gets the service object of the specified type.
  example: []
  syntax:
    content: public object? GetService(Type aServiceType)
    parameters:
    - id: aServiceType
      type: System.Type
    return:
      type: System.Object
      description: >-
        A service object of type <code class="paramref">serviceType</code>.  
         -or-  
         <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is no service object of type <code class="paramref">serviceType</code>.
    content.vb: Public Function GetService(aServiceType As Type) As Object
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService*
  implements:
  - System.IServiceProvider.GetService(System.Type)
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects(System.Object)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects(System.Object)
  id: ProcessInjects(System.Object)
  parent: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  langs:
  - csharp
  - vb
  name: ProcessInjects(object)
  nameWithType: UFSimpleServiceCollection.ProcessInjects(object)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects(object)
  type: Method
  source:
    id: ProcessInjects
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Services\UFSimpleServiceCollection.cs
    startLine: 253
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Processes methods, properties and fields annotated with <xref href="UltraForce.Library.NetStandard.Annotations.UFInjectAttribute" data-throw-if-not-resolved="false"></xref> by calling

    <xref href="UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(System.Object%2cSystem.IServiceProvider)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void ProcessInjects(object anInstance)
    parameters:
    - id: anInstance
      type: System.Object
      description: Object instance to check methods, properties and fields for
    content.vb: Public Sub ProcessInjects(anInstance As Object)
  overload: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects*
  nameWithType.vb: UFSimpleServiceCollection.ProcessInjects(Object)
  fullName.vb: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects(Object)
  name.vb: ProcessInjects(Object)
references:
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  commentId: T:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html
  name: UFSimpleServiceCollection
  nameWithType: UFSimpleServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  commentId: T:UltraForce.Library.NetStandard.Services.IUFServiceCollection
  parent: UltraForce.Library.NetStandard.Services
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html
  name: IUFServiceCollection
  nameWithType: IUFServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection
- uid: UltraForce.Library.NetStandard.Annotations.UFInjectAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFInjectAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFInjectAttribute.html
  name: UFInjectAttribute
  nameWithType: UFInjectAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFInjectAttribute
- uid: UltraForce.Library.NetStandard.Services
  commentId: N:UltraForce.Library.NetStandard.Services
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Services
  nameWithType: UltraForce.Library.NetStandard.Services
  fullName: UltraForce.Library.NetStandard.Services
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Services
    name: Services
    href: UltraForce.Library.NetStandard.Services.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Services
    name: Services
    href: UltraForce.Library.NetStandard.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.#ctor
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection__ctor
  name: UFSimpleServiceCollection
  nameWithType: UFSimpleServiceCollection.UFSimpleServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.UFSimpleServiceCollection
  nameWithType.vb: UFSimpleServiceCollection.New
  fullName.vb: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.New
  name.vb: New
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_CreateInstance_System_Type_
  name: CreateInstance
  nameWithType: UFSimpleServiceCollection.CreateInstance
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_CreateInstance_System_Type_
  name: CreateInstance(Type)
  nameWithType: UFSimpleServiceCollection.CreateInstance(Type)
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
    name: CreateInstance
    href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_CreateInstance_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.CreateInstance(System.Type)
    name: CreateInstance
    href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_CreateInstance_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_Register_System_Type_System_Type_
  name: Register
  nameWithType: UFSimpleServiceCollection.Register
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.Register
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_Register_System_Type_System_Type_
  name: Register(Type, Type)
  nameWithType: IUFServiceCollection.Register(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type, System.Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
    name: Register
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_Register_System_Type_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
    name: Register
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_Register_System_Type_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  name: RegisterSingleton(Type, object)
  nameWithType: IUFServiceCollection.RegisterSingleton(Type, object)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, object)
  nameWithType.vb: IUFServiceCollection.RegisterSingleton(Type, Object)
  fullName.vb: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, Object)
  name.vb: RegisterSingleton(Type, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_RegisterSingleton_System_Type_System_Type_
  name: RegisterSingleton
  nameWithType: UFSimpleServiceCollection.RegisterSingleton
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.RegisterSingleton
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Type_
  name: RegisterSingleton(Type, Type)
  nameWithType: IUFServiceCollection.RegisterSingleton(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, System.Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_IsRegistered_System_Type_
  name: IsRegistered
  nameWithType: UFSimpleServiceCollection.IsRegistered
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.IsRegistered
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_IsRegistered_System_Type_
  name: IsRegistered(Type)
  nameWithType: IUFServiceCollection.IsRegistered(Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
    name: IsRegistered
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_IsRegistered_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
    name: IsRegistered
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_IsRegistered_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_GetService_System_Type_
  name: GetService
  nameWithType: UFSimpleServiceCollection.GetService
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.GetService
- uid: System.IServiceProvider.GetService(System.Type)
  commentId: M:System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  name: GetService(Type)
  nameWithType: IServiceProvider.GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(System.Object,System.IServiceProvider)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(System.Object,System.IServiceProvider)
  isExternal: true
  href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_ProcessInjects_System_Object_System_IServiceProvider_
  name: ProcessInjects(object, IServiceProvider)
  nameWithType: UFServiceCollectionTools.ProcessInjects(object, IServiceProvider)
  fullName: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(object, System.IServiceProvider)
  nameWithType.vb: UFServiceCollectionTools.ProcessInjects(Object, IServiceProvider)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(Object, System.IServiceProvider)
  name.vb: ProcessInjects(Object, IServiceProvider)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(System.Object,System.IServiceProvider)
    name: ProcessInjects
    href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_ProcessInjects_System_Object_System_IServiceProvider_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.ProcessInjects(System.Object,System.IServiceProvider)
    name: ProcessInjects
    href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_ProcessInjects_System_Object_System_IServiceProvider_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects*
  commentId: Overload:UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects
  href: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.html#UltraForce_Library_NetStandard_Services_UFSimpleServiceCollection_ProcessInjects_System_Object_
  name: ProcessInjects
  nameWithType: UFSimpleServiceCollection.ProcessInjects
  fullName: UltraForce.Library.NetStandard.Services.UFSimpleServiceCollection.ProcessInjects
