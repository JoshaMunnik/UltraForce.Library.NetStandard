### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  id: UFWeakReferencedEventHandlerManager
  parent: UltraForce.Library.NetStandard.Events
  children:
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.EventHandler,System.Object,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler,System.Object,System.String,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Collections.Specialized.INotifyCollectionChanged,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.ComponentModel.PropertyChangedEventHandler,System.ComponentModel.INotifyPropertyChanged,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs},UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged,System.Boolean)
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove
  langs:
  - csharp
  - vb
  name: UFWeakReferencedEventHandlerManager
  nameWithType: UFWeakReferencedEventHandlerManager
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFWeakReferencedEventHandlerManager
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 68
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: This class can be used to manage a <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler%601" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    When adding an event handler to an event provider, the object implementing the event handler will not get garbage

    collected until either the event handler is removed or the object implementing the event provider is also

    garbage collected.

    </p>

    <p>

    This class can be used with objects that can not remove event handlers. It will manages

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler%601" data-throw-if-not-resolved="false"></xref> so that the target still can get garbage collected.

    </p>

    <p>

    To use this class, create an instance of <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> and assign

    it to some private property or field in the target instance.

    </p>

    <p>

    When the instance is getting garbage collected it removes also the

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler%601" data-throw-if-not-resolved="false"></xref> instance from the event provider.

    </p>

    <p>

    Do not forget to assign the instance of  <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> to a

    private field or property so that the instance only gets garbage collected once the target also gets garbage

    collected. Else the instance might get garbage collected sooner, resulting in removal of the event handler

    while it is still needed.

    </p>
  example: []
  syntax:
    content: 'public class UFWeakReferencedEventHandlerManager : IDisposable'
    content.vb: Public Class UFWeakReferencedEventHandlerManager Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.EventHandler,System.Object,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.EventHandler,System.Object,System.String,System.Boolean)
  id: '#ctor(System.EventHandler,System.Object,System.String,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: UFWeakReferencedEventHandlerManager(EventHandler, object, string, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(EventHandler, object, string, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(System.EventHandler, object, string, bool)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 147
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Constructs an instance

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    The handler can not be static. Trying to use a static handler will 

    throw an exception.
  example: []
  syntax:
    content: public UFWeakReferencedEventHandlerManager(EventHandler anHandler, object aProvider, string anEventName, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.EventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.Object
      description: Provider that will fire events.
    - id: anEventName
      type: System.String
      description: Name of event to add handler to.
    - id: anAdd
      type: System.Boolean
      description: >-
        When <code>true</code> add handler to provider; else call <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add" data-throw-if-not-resolved="false"></xref> 

        to add the handler.
    content.vb: Public Sub New(anHandler As EventHandler, aProvider As Object, anEventName As String, anAdd As Boolean = True)
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.New(EventHandler, Object, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.New(System.EventHandler, Object, String, Boolean)
  name.vb: New(EventHandler, Object, String, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.String,System.Boolean)
  id: '#ctor(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.String,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: UFWeakReferencedEventHandlerManager(PropertyChangedEventHandler, object, string, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(PropertyChangedEventHandler, object, string, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(System.ComponentModel.PropertyChangedEventHandler, object, string, bool)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 177
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Constructs an instance

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    The handler can not be static. Trying to use a static handler will 

    throw an exception.
  example: []
  syntax:
    content: public UFWeakReferencedEventHandlerManager(PropertyChangedEventHandler anHandler, object aProvider, string anEventName, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.ComponentModel.PropertyChangedEventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.Object
      description: Provider that will fire events.
    - id: anEventName
      type: System.String
      description: Name of event to add handler to.
    - id: anAdd
      type: System.Boolean
      description: >-
        When <code>true</code> add handler to provider; else call <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add" data-throw-if-not-resolved="false"></xref> 

        to add the handler.
    content.vb: Public Sub New(anHandler As PropertyChangedEventHandler, aProvider As Object, anEventName As String, anAdd As Boolean = True)
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.New(PropertyChangedEventHandler, Object, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.New(System.ComponentModel.PropertyChangedEventHandler, Object, String, Boolean)
  name.vb: New(PropertyChangedEventHandler, Object, String, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object,System.String,System.Boolean)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object,System.String,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: UFWeakReferencedEventHandlerManager(NotifyCollectionChangedEventHandler, object, string, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(NotifyCollectionChangedEventHandler, object, string, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(System.Collections.Specialized.NotifyCollectionChangedEventHandler, object, string, bool)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 207
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Constructs an instance

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    The handler can not be static. Trying to use a static handler will 

    throw an exception.
  example: []
  syntax:
    content: public UFWeakReferencedEventHandlerManager(NotifyCollectionChangedEventHandler anHandler, object aProvider, string anEventName, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.Object
      description: Provider that will fire events.
    - id: anEventName
      type: System.String
      description: Name of event to add handler to.
    - id: anAdd
      type: System.Boolean
      description: >-
        When <code>true</code> add handler to provider; else call <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add" data-throw-if-not-resolved="false"></xref> 

        to add the handler.
    content.vb: Public Sub New(anHandler As NotifyCollectionChangedEventHandler, aProvider As Object, anEventName As String, anAdd As Boolean = True)
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.New(NotifyCollectionChangedEventHandler, Object, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.New(System.Collections.Specialized.NotifyCollectionChangedEventHandler, Object, String, Boolean)
  name.vb: New(NotifyCollectionChangedEventHandler, Object, String, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler,System.Object,System.String,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler,System.Object,System.String,System.Boolean)
  id: '#ctor(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler,System.Object,System.String,System.Boolean)'
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: UFWeakReferencedEventHandlerManager(UFWeakReferencedEventHandler, object, string, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(UFWeakReferencedEventHandler, object, string, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler, object, string, bool)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 237
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Constructs an instance

    <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    The handler can not be static. Trying to use a static handler will 

    throw an exception.
  example: []
  syntax:
    content: protected UFWeakReferencedEventHandlerManager(UFWeakReferencedEventHandler anHandler, object aProvider, string anEventName, bool anAdd = true)
    parameters:
    - id: anHandler
      type: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.Object
      description: Provider that will fire events.
    - id: anEventName
      type: System.String
      description: Name of event to add handler to.
    - id: anAdd
      type: System.Boolean
      description: >-
        When <code>true</code> add handler to provider; else call <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add" data-throw-if-not-resolved="false"></xref> 

        to add the handler.
    content.vb: Protected Sub New(anHandler As UFWeakReferencedEventHandler, aProvider As Object, anEventName As String, anAdd As Boolean = True)
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.New(UFWeakReferencedEventHandler, Object, String, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.New(UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler, Object, String, Boolean)
  name.vb: New(UFWeakReferencedEventHandler, Object, String, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize
  id: Finalize
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: ~UFWeakReferencedEventHandlerManager()
  nameWithType: UFWeakReferencedEventHandlerManager.~UFWeakReferencedEventHandlerManager()
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.~UFWeakReferencedEventHandlerManager()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Finalize
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 261
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: Removes the event handler from the provider.
  example: []
  syntax:
    content: protected ~UFWeakReferencedEventHandlerManager()
    content.vb: 'Protected '
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose
  id: Dispose
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: UFWeakReferencedEventHandlerManager.Dispose()
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Dispose
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 271
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  id: Add
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Add()
  nameWithType: UFWeakReferencedEventHandlerManager.Add()
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 284
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: Adds the managed handler to the event provider. If the handler is already added this method does nothing.
  example: []
  syntax:
    content: public void Add()
    content.vb: Public Sub Add()
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add*
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove
  id: Remove
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Remove()
  nameWithType: UFWeakReferencedEventHandlerManager.Remove()
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Remove
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 292
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: Removes the managed handler from the event provider. If the handler is already removed this method does nothing.
  example: []
  syntax:
    content: public void Remove()
    content.vb: Public Sub Remove()
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove*
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs},UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs},UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged,System.Boolean)
  id: Create(System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs},UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged,System.Boolean)
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Create(EventHandler<UFDataChangedEventArgs>, IUFNotifyDataChanged, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.Create(EventHandler<UFDataChangedEventArgs>, IUFNotifyDataChanged, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.EventHandler<UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs>, UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Create
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 319
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Create instance of <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> for

    <xref href="UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static UFWeakReferencedEventHandlerManager<UFDataChangedEventArgs> Create(EventHandler<UFDataChangedEventArgs> anHandler, IUFNotifyDataChanged aProvider, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
      description: Handler method to manage.
    - id: aProvider
      type: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
      description: Object that implements <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref>.
    - id: anAdd
      type: System.Boolean
      description: When <code>true</code> add handler to provider.
    return:
      type: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
      description: >-
        Instance of

        <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> for

        <xref href="UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create(anHandler As EventHandler(Of UFDataChangedEventArgs), aProvider As IUFNotifyDataChanged, anAdd As Boolean = True) As UFWeakReferencedEventHandlerManager(Of UFDataChangedEventArgs)
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.Create(EventHandler(Of UFDataChangedEventArgs), IUFNotifyDataChanged, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.EventHandler(Of UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs), UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged, Boolean)
  name.vb: Create(EventHandler(Of UFDataChangedEventArgs), IUFNotifyDataChanged, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.ComponentModel.PropertyChangedEventHandler,System.ComponentModel.INotifyPropertyChanged,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.ComponentModel.PropertyChangedEventHandler,System.ComponentModel.INotifyPropertyChanged,System.Boolean)
  id: Create(System.ComponentModel.PropertyChangedEventHandler,System.ComponentModel.INotifyPropertyChanged,System.Boolean)
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Create(PropertyChangedEventHandler, INotifyPropertyChanged, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.Create(PropertyChangedEventHandler, INotifyPropertyChanged, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.ComponentModel.PropertyChangedEventHandler, System.ComponentModel.INotifyPropertyChanged, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Create
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 350
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Create instance of <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref> for

    <xref href="System.ComponentModel.PropertyChangedEventHandler" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static UFWeakReferencedEventHandlerManager Create(PropertyChangedEventHandler anHandler, INotifyPropertyChanged aProvider, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.ComponentModel.PropertyChangedEventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.ComponentModel.INotifyPropertyChanged
      description: Object that implements <xref href="System.ComponentModel.INotifyPropertyChanged" data-throw-if-not-resolved="false"></xref>.
    - id: anAdd
      type: System.Boolean
      description: When <code>true</code> add handler to provider.
    return:
      type: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
      description: >-
        Instance of

        <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create(anHandler As PropertyChangedEventHandler, aProvider As INotifyPropertyChanged, anAdd As Boolean = True) As UFWeakReferencedEventHandlerManager
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.Create(PropertyChangedEventHandler, INotifyPropertyChanged, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.ComponentModel.PropertyChangedEventHandler, System.ComponentModel.INotifyPropertyChanged, Boolean)
  name.vb: Create(PropertyChangedEventHandler, INotifyPropertyChanged, Boolean)
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Collections.Specialized.INotifyCollectionChanged,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Collections.Specialized.INotifyCollectionChanged,System.Boolean)
  id: Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Collections.Specialized.INotifyCollectionChanged,System.Boolean)
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  langs:
  - csharp
  - vb
  name: Create(NotifyCollectionChangedEventHandler, INotifyCollectionChanged, bool)
  nameWithType: UFWeakReferencedEventHandlerManager.Create(NotifyCollectionChangedEventHandler, INotifyCollectionChanged, bool)
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler, System.Collections.Specialized.INotifyCollectionChanged, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Create
    path: ../UltraForce.Library.NetStandard/Events/UFWeakReferencedEventHandlerManager.cs
    startLine: 377
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Events
  summary: >-
    Create instance of <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> for

    <xref href="System.Collections.Specialized.NotifyCollectionChangedEventArgs" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static UFWeakReferencedEventHandlerManager Create(NotifyCollectionChangedEventHandler anHandler, INotifyCollectionChanged aProvider, bool anAdd = true)
    parameters:
    - id: anHandler
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: Handler method to manage.
    - id: aProvider
      type: System.Collections.Specialized.INotifyCollectionChanged
      description: Object that implements <xref href="System.Collections.Specialized.INotifyCollectionChanged" data-throw-if-not-resolved="false"></xref>.
    - id: anAdd
      type: System.Boolean
      description: When <code>true</code> add handler to provider.
    return:
      type: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
      description: >-
        Instance of

        <xref href="UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager%601" data-throw-if-not-resolved="false"></xref> for

        <xref href="System.Collections.Specialized.NotifyCollectionChangedEventArgs" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create(anHandler As NotifyCollectionChangedEventHandler, aProvider As INotifyCollectionChanged, anAdd As Boolean = True) As UFWeakReferencedEventHandlerManager
  overload: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create*
  nameWithType.vb: UFWeakReferencedEventHandlerManager.Create(NotifyCollectionChangedEventHandler, INotifyCollectionChanged, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create(System.Collections.Specialized.NotifyCollectionChangedEventHandler, System.Collections.Specialized.INotifyCollectionChanged, Boolean)
  name.vb: Create(NotifyCollectionChangedEventHandler, INotifyCollectionChanged, Boolean)
references:
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler`1
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler`1
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler-1.html
  name: UFWeakReferencedEventHandler<TEventArgs>
  nameWithType: UFWeakReferencedEventHandler<TEventArgs>
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler<TEventArgs>
  nameWithType.vb: UFWeakReferencedEventHandler(Of TEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler(Of TEventArgs)
  name.vb: UFWeakReferencedEventHandler(Of TEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler`1
    name: UFWeakReferencedEventHandler
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler`1
    name: UFWeakReferencedEventHandler
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  name: UFWeakReferencedEventHandlerManager<TEventArgs>
  nameWithType: UFWeakReferencedEventHandlerManager<TEventArgs>
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager<TEventArgs>
  nameWithType.vb: UFWeakReferencedEventHandlerManager(Of TEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager(Of TEventArgs)
  name.vb: UFWeakReferencedEventHandlerManager(Of TEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
    name: UFWeakReferencedEventHandlerManager
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
    name: UFWeakReferencedEventHandlerManager
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: UltraForce.Library.NetStandard.Events
  commentId: N:UltraForce.Library.NetStandard.Events
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Events
  nameWithType: UltraForce.Library.NetStandard.Events
  fullName: UltraForce.Library.NetStandard.Events
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Events
    name: Events
    href: UltraForce.Library.NetStandard.Events.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Events
    name: Events
    href: UltraForce.Library.NetStandard.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  parent: UltraForce.Library.NetStandard.Events
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html
  name: UFWeakReferencedEventHandlerManager
  nameWithType: UFWeakReferencedEventHandlerManager
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  commentId: M:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  parent: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Add
  name: Add()
  nameWithType: UFWeakReferencedEventHandlerManager.Add()
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
    name: Add
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Add
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
    name: Add
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Add
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.#ctor
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager__ctor_System_EventHandler_System_Object_System_String_System_Boolean_
  name: UFWeakReferencedEventHandlerManager
  nameWithType: UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.UFWeakReferencedEventHandlerManager
  nameWithType.vb: UFWeakReferencedEventHandlerManager.New
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.New
  name.vb: New
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventhandler
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler
  parent: UltraForce.Library.NetStandard.Events
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler.html
  name: UFWeakReferencedEventHandler
  nameWithType: UFWeakReferencedEventHandler
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandler
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Finalize
  name: ~UFWeakReferencedEventHandlerManager
  nameWithType: UFWeakReferencedEventHandlerManager.~UFWeakReferencedEventHandlerManager
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.~UFWeakReferencedEventHandlerManager
  spec.csharp:
  - name: "~"
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Finalize*
    name: UFWeakReferencedEventHandlerManager
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Finalize
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Dispose
  name: Dispose
  nameWithType: UFWeakReferencedEventHandlerManager.Dispose
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Add
  name: Add
  nameWithType: UFWeakReferencedEventHandlerManager.Add
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Add
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Remove
  name: Remove
  nameWithType: UFWeakReferencedEventHandlerManager.Remove
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Remove
- uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
  commentId: T:UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
  parent: UltraForce.Library.NetStandard.Events
  href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  name: UFDataChangedEventArgs
  nameWithType: UFDataChangedEventArgs
  fullName: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
- uid: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.html
  name: IUFNotifyDataChanged
  nameWithType: IUFNotifyDataChanged
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create*
  commentId: Overload:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.html#UltraForce_Library_NetStandard_Events_UFWeakReferencedEventHandlerManager_Create_System_EventHandler_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs__UltraForce_Library_NetStandard_Interfaces_IUFNotifyDataChanged_System_Boolean_
  name: Create
  nameWithType: UFWeakReferencedEventHandlerManager.Create
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager.Create
- uid: System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  commentId: T:System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UFDataChangedEventArgs>
  nameWithType: EventHandler<UFDataChangedEventArgs>
  fullName: System.EventHandler<UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs>
  nameWithType.vb: EventHandler(Of UFDataChangedEventArgs)
  fullName.vb: System.EventHandler(Of UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: EventHandler(Of UFDataChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  commentId: T:UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  parent: UltraForce.Library.NetStandard.Events
  definition: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
  href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  name: UFWeakReferencedEventHandlerManager<UFDataChangedEventArgs>
  nameWithType: UFWeakReferencedEventHandlerManager<UFDataChangedEventArgs>
  fullName: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager<UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs>
  nameWithType.vb: UFWeakReferencedEventHandlerManager(Of UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager(Of UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: UFWeakReferencedEventHandlerManager(Of UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
    name: UFWeakReferencedEventHandlerManager
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  - name: <
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager`1
    name: UFWeakReferencedEventHandlerManager
    href: UltraForce.Library.NetStandard.Events.UFWeakReferencedEventHandlerManager-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
