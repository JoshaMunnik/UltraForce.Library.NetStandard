### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog
  commentId: T:UltraForce.Library.NetStandard.Development.UFTextFileLog
  id: UFTextFileLog
  parent: UltraForce.Library.NetStandard.Development
  children:
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor(System.String,System.String,System.String)
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.Object,System.String,System.Object[])
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.String,System.String,System.Object[])
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception)
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception,System.String,System.Object[])
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.String,System.Object[])
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception)
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception,System.String,System.Object[])
  - UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: UFTextFileLog
  nameWithType: UFTextFileLog
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFTextFileLog
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 49
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: >-
    <xref href="UltraForce.Library.NetStandard.Development.UFTextFileLog" data-throw-if-not-resolved="false"></xref> implements a log that is written to a text file. New messages get added to the end

    of the log file. The messages are prefixed with a time stamp.

    <p>

    The class will create a a new log file when the day changes. The log filename includes a date.

    </p>

    <p>

    If <code>UFDEBUG</code> is defined, the log messages are also outputted to the general debugger log via

    <xref href="System.Diagnostics.Debug.WriteLine(System.String)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public class UFTextFileLog
    content.vb: Public Class UFTextFileLog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor(System.String,System.String,System.String)
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: UFTextFileLog(string, string, string)
  nameWithType: UFTextFileLog.UFTextFileLog(string, string, string)
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.UFTextFileLog(string, string, string)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 81
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Constructs an instance of <xref href="UltraForce.Library.NetStandard.Development.UFTextFileLog" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public UFTextFileLog(string aPath, string aFileName, string aFileExtension = "log")
    parameters:
    - id: aPath
      type: System.String
      description: Path to create log files in
    - id: aFileName
      type: System.String
      description: Filename for log file (without extension)
    - id: aFileExtension
      type: System.String
      description: File extension to use (without '.')
    content.vb: Public Sub New(aPath As String, aFileName As String, aFileExtension As String = "log")
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor*
  nameWithType.vb: UFTextFileLog.New(String, String, String)
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.New(String, String, String)
  name.vb: New(String, String, String)
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.Object,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.Object,System.String,System.Object[])
  id: AddAsync(System.Object,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: AddAsync(object, string, params object[])
  nameWithType: UFTextFileLog.AddAsync(object, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(object, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: AddAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 98
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an entry to log.
  example: []
  syntax:
    content: public Task AddAsync(object anObject, string aMessage, params object[] anArguments)
    parameters:
    - id: anObject
      type: System.Object
      description: Object which type name will be used as tag
    - id: aMessage
      type: System.String
      description: Log entry to add
    - id: anArguments
      type: System.Object[]
      description: Formatting arguments
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAsync(anObject As Object, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync*
  nameWithType.vb: UFTextFileLog.AddAsync(Object, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(Object, String, ParamArray Object())
  name.vb: AddAsync(Object, String, ParamArray Object())
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.String,System.Object[])
  id: ErrorAsync(System.Object,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(object, string, params object[])
  nameWithType: UFTextFileLog.ErrorAsync(object, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(object, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 109
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an error entry to the log.
  example: []
  syntax:
    content: public Task ErrorAsync(object anObject, string aMessage, params object[] anArguments)
    parameters:
    - id: anObject
      type: System.Object
      description: Object which type name will be used as tag
    - id: aMessage
      type: System.String
      description: Log entry to add
    - id: anArguments
      type: System.Object[]
      description: Formatting arguments
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(anObject As Object, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(Object, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(Object, String, ParamArray Object())
  name.vb: ErrorAsync(Object, String, ParamArray Object())
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception)
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception)
  id: ErrorAsync(System.Object,System.Exception)
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(object, Exception)
  nameWithType: UFTextFileLog.ErrorAsync(object, Exception)
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(object, System.Exception)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 119
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an error entry for an exception.
  example: []
  syntax:
    content: public Task ErrorAsync(object anObject, Exception anError)
    parameters:
    - id: anObject
      type: System.Object
      description: Tag to use
    - id: anError
      type: System.Exception
      description: Error to add
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(anObject As Object, anError As Exception) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(Object, Exception)
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(Object, System.Exception)
  name.vb: ErrorAsync(Object, Exception)
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.Object,System.Exception,System.String,System.Object[])
  id: ErrorAsync(System.Object,System.Exception,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(object, Exception, string, params object[])
  nameWithType: UFTextFileLog.ErrorAsync(object, Exception, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(object, System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 131
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: >-
    Adds an error entry for an exception.

    <param name="anObject">Object which type name will be used as tag</param>

    <param name="anError">Error to add</param>

    <param name="aMessage">Log entry to add</param>

    <param name="anArguments">Formatting arguments</param>
  example: []
  syntax:
    content: public Task ErrorAsync(object anObject, Exception anError, string aMessage, params object[] anArguments)
    parameters:
    - id: anObject
      type: System.Object
    - id: anError
      type: System.Exception
    - id: aMessage
      type: System.String
    - id: anArguments
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(anObject As Object, anError As Exception, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(Object, Exception, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(Object, System.Exception, String, ParamArray Object())
  name.vb: ErrorAsync(Object, Exception, String, ParamArray Object())
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.String,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(System.String,System.String,System.Object[])
  id: AddAsync(System.String,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: AddAsync(string, string, params object[])
  nameWithType: UFTextFileLog.AddAsync(string, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(string, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: AddAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 142
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an entry to log.
  example: []
  syntax:
    content: public Task AddAsync(string aTag, string aMessage, params object[] anArguments)
    parameters:
    - id: aTag
      type: System.String
      description: Tag to use
    - id: aMessage
      type: System.String
      description: Log entry to add
    - id: anArguments
      type: System.Object[]
      description: Formatting arguments
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAsync(aTag As String, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync*
  nameWithType.vb: UFTextFileLog.AddAsync(String, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync(String, String, ParamArray Object())
  name.vb: AddAsync(String, String, ParamArray Object())
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.String,System.Object[])
  id: ErrorAsync(System.String,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(string, string, params object[])
  nameWithType: UFTextFileLog.ErrorAsync(string, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(string, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 153
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an error entry to the log.
  example: []
  syntax:
    content: public Task ErrorAsync(string aTag, string aMessage, params object[] anArguments)
    parameters:
    - id: aTag
      type: System.String
      description: Tag to use
    - id: aMessage
      type: System.String
      description: Log entry to add
    - id: anArguments
      type: System.Object[]
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(aTag As String, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(String, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(String, String, ParamArray Object())
  name.vb: ErrorAsync(String, String, ParamArray Object())
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception)
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception)
  id: ErrorAsync(System.String,System.Exception)
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(string, Exception)
  nameWithType: UFTextFileLog.ErrorAsync(string, Exception)
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(string, System.Exception)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 163
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: Adds an error entry for an exception.
  example: []
  syntax:
    content: public Task ErrorAsync(string aTag, Exception anError)
    parameters:
    - id: aTag
      type: System.String
      description: Tag to use
    - id: anError
      type: System.Exception
      description: Error to add
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(aTag As String, anError As Exception) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(String, Exception)
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(String, System.Exception)
  name.vb: ErrorAsync(String, Exception)
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception,System.String,System.Object[])
  commentId: M:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(System.String,System.Exception,System.String,System.Object[])
  id: ErrorAsync(System.String,System.Exception,System.String,System.Object[])
  parent: UltraForce.Library.NetStandard.Development.UFTextFileLog
  langs:
  - csharp
  - vb
  name: ErrorAsync(string, Exception, string, params object[])
  nameWithType: UFTextFileLog.ErrorAsync(string, Exception, string, params object[])
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(string, System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ErrorAsync
    path: ../UltraForce.Library.NetStandard/Development/UFTextFileLog.cs
    startLine: 180
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Development
  summary: >-
    Adds an error entry for an exception.

    <param name="aTag">Tag to use</param>

    <param name="anError">Error to add</param>

    <param name="aMessage">Log entry to add</param>

    <param name="anArguments">Formatting arguments</param>
  example: []
  syntax:
    content: public Task ErrorAsync(string aTag, Exception anError, string aMessage, params object[] anArguments)
    parameters:
    - id: aTag
      type: System.String
    - id: anError
      type: System.Exception
    - id: aMessage
      type: System.String
    - id: anArguments
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorAsync(aTag As String, anError As Exception, aMessage As String, ParamArray anArguments As Object()) As Task
  overload: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  nameWithType.vb: UFTextFileLog.ErrorAsync(String, Exception, String, ParamArray Object())
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync(String, System.Exception, String, ParamArray Object())
  name.vb: ErrorAsync(String, Exception, String, ParamArray Object())
references:
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog
  commentId: T:UltraForce.Library.NetStandard.Development.UFTextFileLog
  href: UltraForce.Library.NetStandard.Development.UFTextFileLog.html
  name: UFTextFileLog
  nameWithType: UFTextFileLog
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog
- uid: System.Diagnostics.Debug.WriteLine(System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.debug.writeline#system-diagnostics-debug-writeline(system-string)
  name: WriteLine(string)
  nameWithType: Debug.WriteLine(string)
  fullName: System.Diagnostics.Debug.WriteLine(string)
  nameWithType.vb: Debug.WriteLine(String)
  fullName.vb: System.Diagnostics.Debug.WriteLine(String)
  name.vb: WriteLine(String)
  spec.csharp:
  - uid: System.Diagnostics.Debug.WriteLine(System.String)
    name: WriteLine
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.debug.writeline#system-diagnostics-debug-writeline(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Diagnostics.Debug.WriteLine(System.String)
    name: WriteLine
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.debug.writeline#system-diagnostics-debug-writeline(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Development
  commentId: N:UltraForce.Library.NetStandard.Development
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Development
  nameWithType: UltraForce.Library.NetStandard.Development
  fullName: UltraForce.Library.NetStandard.Development
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Development
    name: Development
    href: UltraForce.Library.NetStandard.Development.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Development
    name: Development
    href: UltraForce.Library.NetStandard.Development.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Development.UFTextFileLog.#ctor
  href: UltraForce.Library.NetStandard.Development.UFTextFileLog.html#UltraForce_Library_NetStandard_Development_UFTextFileLog__ctor_System_String_System_String_System_String_
  name: UFTextFileLog
  nameWithType: UFTextFileLog.UFTextFileLog
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.UFTextFileLog
  nameWithType.vb: UFTextFileLog.New
  fullName.vb: UltraForce.Library.NetStandard.Development.UFTextFileLog.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync*
  commentId: Overload:UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync
  href: UltraForce.Library.NetStandard.Development.UFTextFileLog.html#UltraForce_Library_NetStandard_Development_UFTextFileLog_AddAsync_System_Object_System_String_System_Object___
  name: AddAsync
  nameWithType: UFTextFileLog.AddAsync
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.AddAsync
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync*
  commentId: Overload:UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync
  href: UltraForce.Library.NetStandard.Development.UFTextFileLog.html#UltraForce_Library_NetStandard_Development_UFTextFileLog_ErrorAsync_System_Object_System_String_System_Object___
  name: ErrorAsync
  nameWithType: UFTextFileLog.ErrorAsync
  fullName: UltraForce.Library.NetStandard.Development.UFTextFileLog.ErrorAsync
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
