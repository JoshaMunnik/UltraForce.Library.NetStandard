### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  commentId: T:UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  id: UFEnumerableTools
  parent: UltraForce.Library.NetStandard.Tools
  children:
  - UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},``0[])
  - UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},``0[])
  - UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: UFEnumerableTools
  nameWithType: UFEnumerableTools
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFEnumerableTools
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
    startLine: 37
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Support methods for <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class UFEnumerableTools
    content.vb: Public Module UFEnumerableTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},``0[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},``0[])
  id: ContainsAny``1(System.Collections.Generic.IEnumerable{``0},``0[])
  parent: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  langs:
  - csharp
  - vb
  name: ContainsAny<T>(IEnumerable<T>, params T[])
  nameWithType: UFEnumerableTools.ContainsAny<T>(IEnumerable<T>, params T[])
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny<T>(System.Collections.Generic.IEnumerable<T>, params T[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ContainsAny
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
    startLine: 46
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Checks if a collection contains any of the values.
  example: []
  syntax:
    content: public static bool ContainsAny<T>(IEnumerable<T> collection, params T[] values)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Collection to check
    - id: values
      type: '{T}[]'
      description: Value to check
    typeParameters:
    - id: T
      description: Type of the elements inside the collection
    return:
      type: System.Boolean
      description: <code>true</code> if any of the values are found in the collection
    content.vb: Public Shared Function ContainsAny(Of T)(collection As IEnumerable(Of T), ParamArray values As T()) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny*
  nameWithType.vb: UFEnumerableTools.ContainsAny(Of T)(IEnumerable(Of T), ParamArray T())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny(Of T)(System.Collections.Generic.IEnumerable(Of T), ParamArray T())
  name.vb: ContainsAny(Of T)(IEnumerable(Of T), ParamArray T())
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},``0[])
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},``0[])
  id: ContainsAll``1(System.Collections.Generic.IEnumerable{``0},``0[])
  parent: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  langs:
  - csharp
  - vb
  name: ContainsAll<T>(IEnumerable<T>, params T[])
  nameWithType: UFEnumerableTools.ContainsAll<T>(IEnumerable<T>, params T[])
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll<T>(System.Collections.Generic.IEnumerable<T>, params T[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ContainsAll
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
    startLine: 58
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Checks if a collection contains all the values.
  example: []
  syntax:
    content: public static bool ContainsAll<T>(IEnumerable<T> collection, params T[] values)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Collection to check
    - id: values
      type: '{T}[]'
      description: Value to check
    typeParameters:
    - id: T
      description: Type of the elements inside the collection
    return:
      type: System.Boolean
      description: <code>true</code> if all values are found in the collection
    content.vb: Public Shared Function ContainsAll(Of T)(collection As IEnumerable(Of T), ParamArray values As T()) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll*
  nameWithType.vb: UFEnumerableTools.ContainsAll(Of T)(IEnumerable(Of T), ParamArray T())
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll(Of T)(System.Collections.Generic.IEnumerable(Of T), ParamArray T())
  name.vb: ContainsAll(Of T)(IEnumerable(Of T), ParamArray T())
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem``1(System.Collections.Generic.IEnumerable{``0})
  id: RandomItem``1(System.Collections.Generic.IEnumerable{``0})
  parent: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  langs:
  - csharp
  - vb
  name: RandomItem<T>(IEnumerable<T>)
  nameWithType: UFEnumerableTools.RandomItem<T>(IEnumerable<T>)
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: RandomItem
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
    startLine: 75
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Returns a random item from some collection.
  example: []
  syntax:
    content: public static T RandomItem<T>(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection to get a value from.
    typeParameters:
    - id: T
      description: Item type.
    return:
      type: '{T}'
      description: An item from the collection.
    content.vb: Public Shared Function RandomItem(Of T)(collection As IEnumerable(Of T)) As T
  overload: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem*
  nameWithType.vb: UFEnumerableTools.RandomItem(Of T)(IEnumerable(Of T))
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: RandomItem(Of T)(IEnumerable(Of T))
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: EqualContent``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: UltraForce.Library.NetStandard.Tools.UFEnumerableTools
  langs:
  - csharp
  - vb
  name: EqualContent<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: UFEnumerableTools.EqualContent<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: EqualContent
    path: ../UltraForce.Library.NetStandard/Tools/UFEnumerableTools.cs
    startLine: 87
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Checks if two collections are equal, in that they contain the same items.
  example: []
  syntax:
    content: public static bool EqualContent<T>(IEnumerable<T> first, IEnumerable<T> second)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{T}}
      description: First collection to check
    - id: second
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Second collection to check
    typeParameters:
    - id: T
      description: Type of the elements inside the collection
    return:
      type: System.Boolean
      description: True if both collections contain the same items
    content.vb: Public Shared Function EqualContent(Of T)(first As IEnumerable(Of T), second As IEnumerable(Of T)) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent*
  nameWithType.vb: UFEnumerableTools.EqualContent(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: EqualContent(Of T)(IEnumerable(Of T), IEnumerable(Of T))
references:
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Tools
  commentId: N:UltraForce.Library.NetStandard.Tools
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Tools
  nameWithType: UltraForce.Library.NetStandard.Tools
  fullName: UltraForce.Library.NetStandard.Tools
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny
  href: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.html#UltraForce_Library_NetStandard_Tools_UFEnumerableTools_ContainsAny__1_System_Collections_Generic_IEnumerable___0____0___
  name: ContainsAny
  nameWithType: UFEnumerableTools.ContainsAny
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAny
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll
  href: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.html#UltraForce_Library_NetStandard_Tools_UFEnumerableTools_ContainsAll__1_System_Collections_Generic_IEnumerable___0____0___
  name: ContainsAll
  nameWithType: UFEnumerableTools.ContainsAll
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.ContainsAll
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem
  href: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.html#UltraForce_Library_NetStandard_Tools_UFEnumerableTools_RandomItem__1_System_Collections_Generic_IEnumerable___0__
  name: RandomItem
  nameWithType: UFEnumerableTools.RandomItem
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.RandomItem
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent
  href: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.html#UltraForce_Library_NetStandard_Tools_UFEnumerableTools_EqualContent__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  name: EqualContent
  nameWithType: UFEnumerableTools.EqualContent
  fullName: UltraForce.Library.NetStandard.Tools.UFEnumerableTools.EqualContent
