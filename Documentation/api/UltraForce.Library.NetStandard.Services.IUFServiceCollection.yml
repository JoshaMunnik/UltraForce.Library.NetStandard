### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  commentId: T:UltraForce.Library.NetStandard.Services.IUFServiceCollection
  id: IUFServiceCollection
  parent: UltraForce.Library.NetStandard.Services
  children:
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  - UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: IUFServiceCollection
  nameWithType: IUFServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  type: Interface
  source:
    remote:
      path: UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IUFServiceCollection
    path: ../UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
    startLine: 41
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    <xref href="UltraForce.Library.NetStandard.Services.IUFServiceCollection" data-throw-if-not-resolved="false"></xref> extends <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> and adds minimal

    number of methods to register services and providers.
  remarks: Use <xref href="UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)" data-throw-if-not-resolved="false"></xref> for registration types using generic methods.
  example: []
  syntax:
    content: 'public interface IUFServiceCollection : IServiceProvider'
    content.vb: Public Interface IUFServiceCollection Inherits IServiceProvider
  inheritedMembers:
  - System.IServiceProvider.GetService(System.Type)
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type,System.Type)
  id: Register(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  langs:
  - csharp
  - vb
  name: Register(Type, Type)
  nameWithType: IUFServiceCollection.Register(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Register
    path: ../UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
    startLine: 53
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Registers a provider type for a certain service type. A new instance will be created every

    time the service type is requested.
  example: []
  syntax:
    content: void Register(Type aServiceType, Type aProvider)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProvider
      type: System.Type
      description: Type to create instance of when then service is requested.
    content.vb: Sub Register(aServiceType As Type, aProvider As Type)
  overload: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register*
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Type)
  id: RegisterSingleton(System.Type,System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  langs:
  - csharp
  - vb
  name: RegisterSingleton(Type, Type)
  nameWithType: IUFServiceCollection.RegisterSingleton(Type, Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: RegisterSingleton
    path: ../UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
    startLine: 68
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: >-
    Registers a provider type for a certain service type. The first time the service is

    requested an instance is created. Subsequent requests will use the same instance.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to register an existing instance.

    </p>
  example: []
  syntax:
    content: void RegisterSingleton(Type aServiceType, Type aProvider)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProvider
      type: System.Type
      description: Type to create singleton instance of when the service is requested.
    content.vb: Sub RegisterSingleton(aServiceType As Type, aProvider As Type)
  overload: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton*
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  id: RegisterSingleton(System.Type,System.Object)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  langs:
  - csharp
  - vb
  name: RegisterSingleton(Type, object)
  nameWithType: IUFServiceCollection.RegisterSingleton(Type, object)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, object)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: RegisterSingleton
    path: ../UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
    startLine: 79
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Registers a singleton provider instance for a certain service type.
  example: []
  syntax:
    content: void RegisterSingleton(Type aServiceType, object aProviderInstance)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to register provider type for.
    - id: aProviderInstance
      type: System.Object
      description: Instance to return when the service is requested.
    content.vb: Sub RegisterSingleton(aServiceType As Type, aProviderInstance As Object)
  overload: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton*
  nameWithType.vb: IUFServiceCollection.RegisterSingleton(Type, Object)
  fullName.vb: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, Object)
  name.vb: RegisterSingleton(Type, Object)
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  id: IsRegistered(System.Type)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  langs:
  - csharp
  - vb
  name: IsRegistered(Type)
  nameWithType: IUFServiceCollection.IsRegistered(Type)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered(System.Type)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IsRegistered
    path: ../UltraForce.Library.NetStandard/Services/IUFServiceCollection.cs
    startLine: 90
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Services
  summary: Checks if there is a registration for a service type.
  example: []
  syntax:
    content: bool IsRegistered(Type aServiceType)
    parameters:
    - id: aServiceType
      type: System.Type
      description: Service type to check registration for
    return:
      type: System.Boolean
      description: <code>True</code> if there is a registration; otherwise <code>false</code>.
    content.vb: Function IsRegistered(aServiceType As Type) As Boolean
  overload: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered*
references:
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  commentId: T:UltraForce.Library.NetStandard.Services.IUFServiceCollection
  parent: UltraForce.Library.NetStandard.Services
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html
  name: IUFServiceCollection
  nameWithType: IUFServiceCollection
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)
  href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_With_UltraForce_Library_NetStandard_Services_IUFServiceCollection_
  name: With(IUFServiceCollection)
  nameWithType: UFServiceCollectionTools.With(IUFServiceCollection)
  fullName: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)
    name: With
    href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_With_UltraForce_Library_NetStandard_Services_IUFServiceCollection_
  - name: (
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection
    name: IUFServiceCollection
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.With(UltraForce.Library.NetStandard.Services.IUFServiceCollection)
    name: With
    href: UltraForce.Library.NetStandard.Tools.UFServiceCollectionTools.html#UltraForce_Library_NetStandard_Tools_UFServiceCollectionTools_With_UltraForce_Library_NetStandard_Services_IUFServiceCollection_
  - name: (
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection
    name: IUFServiceCollection
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html
  - name: )
- uid: UltraForce.Library.NetStandard.Services
  commentId: N:UltraForce.Library.NetStandard.Services
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Services
  nameWithType: UltraForce.Library.NetStandard.Services
  fullName: UltraForce.Library.NetStandard.Services
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Services
    name: Services
    href: UltraForce.Library.NetStandard.Services.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Services
    name: Services
    href: UltraForce.Library.NetStandard.Services.html
- uid: System.IServiceProvider.GetService(System.Type)
  commentId: M:System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  name: GetService(Type)
  nameWithType: IServiceProvider.GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider.getservice
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register*
  commentId: Overload:UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_Register_System_Type_System_Type_
  name: Register
  nameWithType: IUFServiceCollection.Register
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.Register
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
  parent: UltraForce.Library.NetStandard.Services.IUFServiceCollection
  isExternal: true
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  name: RegisterSingleton(Type, object)
  nameWithType: IUFServiceCollection.RegisterSingleton(Type, object)
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, object)
  nameWithType.vb: IUFServiceCollection.RegisterSingleton(Type, Object)
  fullName.vb: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type, Object)
  name.vb: RegisterSingleton(Type, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton(System.Type,System.Object)
    name: RegisterSingleton
    href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Object_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton*
  commentId: Overload:UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_RegisterSingleton_System_Type_System_Type_
  name: RegisterSingleton
  nameWithType: IUFServiceCollection.RegisterSingleton
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.RegisterSingleton
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered*
  commentId: Overload:UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered
  href: UltraForce.Library.NetStandard.Services.IUFServiceCollection.html#UltraForce_Library_NetStandard_Services_IUFServiceCollection_IsRegistered_System_Type_
  name: IsRegistered
  nameWithType: IUFServiceCollection.IsRegistered
  fullName: UltraForce.Library.NetStandard.Services.IUFServiceCollection.IsRegistered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
