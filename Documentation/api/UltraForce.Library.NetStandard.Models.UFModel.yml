### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Models.UFModel
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel
  id: UFModel
  parent: UltraForce.Library.NetStandard.Models
  children:
  - UltraForce.Library.NetStandard.Models.UFModel.#ctor(System.Object,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModel.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  - UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.Changed
  - UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.Clear
  - UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  - UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  - UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  - UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  - UltraForce.Library.NetStandard.Models.UFModel.IsValid
  - UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.Lock
  - UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  - UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  - UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  - UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.ToString
  - UltraForce.Library.NetStandard.Models.UFModel.Unlock
  - UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  - UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  langs:
  - csharp
  - vb
  name: UFModel
  nameWithType: UFModel
  fullName: UltraForce.Library.NetStandard.Models.UFModel
  type: Class
  source:
    id: UFModel
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 111
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Base class for data classes.
  remarks: >-
    <p>

    Subclasses should define properties, the set part should use the <xref href="UltraForce.Library.NetStandard.Models.UFModel.Assign%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref> method; so <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> can fire <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> events when a property changes value.

    </p>

    <p>

    A subclass can use <xref href="UltraForce.Library.NetStandard.Models.UFModel.Assign%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> in combination with a private variable or a subclass can use

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref> and <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(System.Func%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    which will use an internally stored value. Using <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(System.Func%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> will be slightly slower then directly referencing a private variable.

    </p>

    <p>

    It is possible to <xref href="UltraForce.Library.NetStandard.Models.UFModel.Lock" data-throw-if-not-resolved="false"></xref> the instance; this prevent the class from firing events. While locked the

    class will keep track of any changed properties. When the class is unlocked with <xref href="UltraForce.Library.NetStandard.Models.UFModel.Unlock" data-throw-if-not-resolved="false"></xref> a

    single <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event might fire and multiple <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> events might fire.

    </p>

    <p>

    <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> can be used to access properties and fields of another class by passing the instance to

    the constructor. Change events will only be fired when values are assigned trough

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> option is used <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> installs change listeners at all

    property values that implement <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref>. If the listener detects a change,

    <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> will fire also a change event for that property. 

    </p>

    <p>

    For correct working, <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> must be called when ever the property gets

    assigned a new value so that listeners can be removed from the old value and added to the new value.

    </p>

    <p>

    The methods <xref href="UltraForce.Library.NetStandard.Models.UFModel.Assign%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> and <xref href="UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref> both call the

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> whenever a new value is used.

    </p>

    <p>

    Annotate properties and fields with <xref href="UltraForce.Library.NetStandard.Annotations.UFIgnoreAttribute" data-throw-if-not-resolved="false"></xref> to ignore them. These properties and fields

    can not be accessed trough their names and will be ignored with IO operations.

    </p>

    <p>

    <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> also contains support for storing and retrieving itself from a

    <xref href="UltraForce.Library.NetStandard.Storage.UFKeyedStorage" data-throw-if-not-resolved="false"></xref>. Annotate properties and fields with <xref href="UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute" data-throw-if-not-resolved="false"></xref> to prevent

    them from being saved. Annotate with <xref href="UltraForce.Library.NetStandard.Annotations.UFIONameAttribute" data-throw-if-not-resolved="false"></xref> to set a different name to store data with.

    A subclass can also override <xref href="UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to control which properties and fields gets saved.

    </p>

    <p>

    If <code>UFDEBUG</code> is defined a <xref href="UltraForce.Library.NetStandard.Development.UFHtmlLog" data-throw-if-not-resolved="false"></xref> instance can be set via the static <xref href="UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)" data-throw-if-not-resolved="false"></xref> to

    log any changes to properties and fields which are annotated with <xref href="UltraForce.Library.NetStandard.Annotations.UFLogAttribute" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Validators added via calls to <xref href="UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String%2cUltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)" data-throw-if-not-resolved="false"></xref> or

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String%2cUltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)" data-throw-if-not-resolved="false"></xref> from within <xref href="UltraForce.Library.NetStandard.Models.UFModel.InitMeta" data-throw-if-not-resolved="false"></xref> will be stored at

    meta level and will be shared by all instances.

    </p>

    <p>

    The <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref>, <xref href="UltraForce.Library.NetStandard.Models.UFModel.ChildChanged" data-throw-if-not-resolved="false"></xref> and <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> use a weak reference

    to the object implementing the handler method.

    </p>
  example: []
  syntax:
    content: 'public class UFModel : IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue'
    content.vb: Public Class UFModel Implements IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue
  inheritance:
  - System.Object
  derivedClasses:
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  - UltraForce.Library.NetStandard.Models.UFModelList`1
  - UltraForce.Library.NetStandard.Models.UFModelStorageWrapper
  implements:
  - UltraForce.Library.NetStandard.Storage.IUFStorableObject
  - UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  - UltraForce.Library.NetStandard.Interfaces.IUFLockable
  - System.ComponentModel.INotifyPropertyChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFClearable
  - UltraForce.Library.NetStandard.Models.IUFModel
  - UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  - UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: UltraForce.Library.NetStandard.Models.UFModel.#ctor(System.Object,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.#ctor(System.Object,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(System.Object,UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: UFModel(object?, params Option[])
  nameWithType: UFModel.UFModel(object?, params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UFModel(object?, params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 241
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    The constructor, creates an instance and processes all properties.

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used, subclasses must call <xref href="UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties" data-throw-if-not-resolved="false"></xref>

    after assigning initial values to the properties.

    </p>
  example: []
  syntax:
    content: public UFModel(object? aData = null, params UFModel.Option[] anOptions)
    parameters:
    - id: aData
      type: System.Object
      description: An instance to manage the properties and fields of, when <code>null</code> <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> uses itself.
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: Array of options to use.
    content.vb: Public Sub New(aData As Object = Nothing, ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModel.#ctor*
  nameWithType.vb: UFModel.New(Object, ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.New(Object, ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(Object, ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModel.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: UFModel(params Option[])
  nameWithType: UFModel.UFModel(params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UFModel(params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    id: .ctor
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 287
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    The constructor, creates an instance and processes all properties.

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used, subclasses must call <xref href="UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties" data-throw-if-not-resolved="false"></xref>

    after assigning initial values to the properties.

    </p>
  example: []
  syntax:
    content: public UFModel(params UFModel.Option[] anOptions)
    parameters:
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: Array of options to use.
    content.vb: Public Sub New(ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModel.#ctor*
  nameWithType.vb: UFModel.New(ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.New(ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  id: UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: UseLog(UFHtmlLog)
  nameWithType: UFModel.UseLog(UFHtmlLog)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  type: Method
  source:
    id: UseLog
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 302
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Sets a log to use to log changes for properties that are annotated with <xref href="UltraForce.Library.NetStandard.Annotations.UFLogAttribute" data-throw-if-not-resolved="false"></xref>.

    <p>

    This method only does something if <code>UFDEBUG</code> has been defined.

    </p>
  example: []
  syntax:
    content: >-
      [Conditional("UFDEBUG")]

      public static void UseLog(UFHtmlLog aLog)
    parameters:
    - id: aLog
      type: UltraForce.Library.NetStandard.Development.UFHtmlLog
      description: Log to use
    content.vb: >-
      <Conditional("UFDEBUG")>

      Public Shared Sub UseLog(aLog As UFHtmlLog)
  overload: UltraForce.Library.NetStandard.Models.UFModel.UseLog*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UFDEBUG
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: UFModel.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear(bool)
  type: Method
  source:
    id: Clear
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 334
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes or clears the properties of the data structure to default values. 

    <p>

    The default implementation sets all the properties that have a <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached to

    the value specified by that attribute. 

    </p>

    <p>

    If the property has no <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached the method will check if the property

    value has a method named <code>Clear</code> and will call that method if it does.

    </p>

    <p>

    As last step the method will call <xref href="UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties" data-throw-if-not-resolved="false"></xref>

    </p>

    <p>

    Subclasses can override this method to initialize or clear additional properties.

    </p>

    <p>

    If there are properties that implement <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used, the clear method should make sure the instances are existing.

    </p>

    <param name="aCallChanged">

    When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed" data-throw-if-not-resolved="false"></xref>. 

    </param>
  example: []
  syntax:
    content: public virtual void Clear(bool aCallChanged)
    parameters:
    - id: aCallChanged
      type: System.Boolean
    content.vb: Public Overridable Sub Clear(aCallChanged As Boolean)
  overload: UltraForce.Library.NetStandard.Models.UFModel.Clear*
  nameWithType.vb: UFModel.Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  id: GetPropertyType(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: GetPropertyType(string)
  nameWithType: UFModel.GetPropertyType(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(string)
  type: Method
  source:
    id: GetPropertyType
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 357
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the type for a property.
  example: []
  syntax:
    content: public Type GetPropertyType(string aPropertyName)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    return:
      type: System.Type
      description: The type.
    content.vb: Public Function GetPropertyType(aPropertyName As String) As Type
  overload: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType*
  nameWithType.vb: UFModel.GetPropertyType(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(String)
  name.vb: GetPropertyType(String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  id: ResetLock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: ResetLock()
  nameWithType: UFModel.ResetLock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetLock()
  type: Method
  source:
    id: ResetLock
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 369
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Resets the internal lock counter, bringing the data class back to the unlocked state. No events are fired.

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, the <xref href="UltraForce.Library.NetStandard.Models.UFModel.ResetLock" data-throw-if-not-resolved="false"></xref> method of all properties that 

    implement <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> instance gets called as well.

    </p>
  example: []
  syntax:
    content: public virtual void ResetLock()
    content.vb: Public Overridable Sub ResetLock()
  overload: UltraForce.Library.NetStandard.Models.UFModel.ResetLock*
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  id: HasChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: HasChanged()
  nameWithType: UFModel.HasChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasChanged()
  type: Method
  source:
    id: HasChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 395
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Checks if one or more properties have changed value while the <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> instance is locked.

    <p>

    If the data instance is not locked, this method will always return <code>false</code>.

    </p>
  example: []
  syntax:
    content: public bool HasChanged()
    return:
      type: System.Boolean
      description: <code>true</code> one or more properties have changed value; otherwise, <code>false</code>.
    content.vb: Public Function HasChanged() As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.HasChanged*
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  id: ResetChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: ResetChanged()
  nameWithType: UFModel.ResetChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged()
  type: Method
  source:
    id: ResetChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 407
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Clears the changed state of properties. A call to unlock after a call to this method will not generate a

    DataChanged event.

    <p>

    Calling this method while the data instance is not locked, has no use.

    </p>
  example: []
  syntax:
    content: public void ResetChanged()
    content.vb: Public Sub ResetChanged()
  overload: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged*
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  id: GetPropertyNames
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: GetPropertyNames()
  nameWithType: UFModel.GetPropertyNames()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames()
  type: Method
  source:
    id: GetPropertyNames
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 422
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the name of all the properties managed by <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string[] GetPropertyNames()
    return:
      type: System.String[]
      description: The property names.
    content.vb: Public Function GetPropertyNames() As String()
  overload: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames*
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  id: HasProperty(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: HasProperty(string)
  nameWithType: UFModel.HasProperty(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(string)
  type: Method
  source:
    id: HasProperty
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 436
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Checks if the <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> (sub)class contains a certain property.
  example: []
  syntax:
    content: public bool HasProperty(string aName)
    parameters:
    - id: aName
      type: System.String
      description: A property name.
    return:
      type: System.Boolean
      description: <code>true</code> if the property exists; otherwise, <code>false</code>.
    content.vb: Public Function HasProperty(aName As String) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.HasProperty*
  nameWithType.vb: UFModel.HasProperty(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(String)
  name.vb: HasProperty(String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValid
  id: IsValid
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: UFModel.IsValid()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValid()
  type: Method
  source:
    id: IsValid
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 448
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Checks if all property have valid values. This method calls <xref href="UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> for every

    property.
  example: []
  syntax:
    content: public virtual bool IsValid()
    return:
      type: System.Boolean
      description: <code>true</code> if all values are valid; <code>false</code> if not
    content.vb: Public Overridable Function IsValid() As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.IsValid*
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  id: SetPropertyValue(System.String,System.Object,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SetPropertyValue(string, object, bool)
  nameWithType: UFModel.SetPropertyValue(string, object, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object, bool)
  type: Method
  source:
    id: SetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 468
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Sets the value of a property.
  example: []
  syntax:
    content: public bool SetPropertyValue(string aPropertyName, object aValue, bool aCallChanged)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    - id: aValue
      type: System.Object
      description: A value.
    - id: aCallChanged
      type: System.Boolean
      description: >-
        When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> if the <code>aValue</code> is not equal to the

        current value of <code>aPropertyName</code>
    return:
      type: System.Boolean
    content.vb: Public Function SetPropertyValue(aPropertyName As String, aValue As Object, aCallChanged As Boolean) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue*
  nameWithType.vb: UFModel.SetPropertyValue(String, Object, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object, Boolean)
  name.vb: SetPropertyValue(String, Object, Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  id: CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: CopyTo(UFModel, bool)
  nameWithType: UFModel.CopyTo(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, bool)
  type: Method
  source:
    id: CopyTo
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 496
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Copies the property values from this instance to another instance.

    <p>

    The method will use <xref href="UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String%2cSystem.Object%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and <xref href="UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)" data-throw-if-not-resolved="false"></xref> to

    copy the values.

    </p>
  example: []
  syntax:
    content: public virtual void CopyTo(UFModel aTarget, bool aCallChanged = true)
    parameters:
    - id: aTarget
      type: UltraForce.Library.NetStandard.Models.UFModel
      description: Target to copy to
    - id: aCallChanged
      type: System.Boolean
      description: When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> for every property value that is different.
    content.vb: Public Overridable Sub CopyTo(aTarget As UFModel, aCallChanged As Boolean = True)
  overload: UltraForce.Library.NetStandard.Models.UFModel.CopyTo*
  nameWithType.vb: UFModel.CopyTo(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyTo(UFModel, Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  id: CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: CopyFrom(UFModel, bool)
  nameWithType: UFModel.CopyFrom(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, bool)
  type: Method
  source:
    id: CopyFrom
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 518
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Copies the property values from another instance to this instance.

    <p>

    This method just calls <xref href="UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> on <code>aSource</code> using this instance as the target.

    </p>
  example: []
  syntax:
    content: public virtual void CopyFrom(UFModel aSource, bool aCallChanged = true)
    parameters:
    - id: aSource
      type: UltraForce.Library.NetStandard.Models.UFModel
      description: Source to copy from
    - id: aCallChanged
      type: System.Boolean
      description: When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> for every property value that is different.
    content.vb: Public Overridable Sub CopyFrom(aSource As UFModel, aCallChanged As Boolean = True)
  overload: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom*
  nameWithType.vb: UFModel.CopyFrom(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyFrom(UFModel, Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  id: GetDataChangedToken
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: GetDataChangedToken()
  nameWithType: UFModel.GetDataChangedToken()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken()
  type: Method
  source:
    id: GetDataChangedToken
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 531
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    The data changed token value will be used when firing a <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event and can be used to

    match events to certain changes. 

    <p>

    The value is increased and copied every time when creating an <xref href="UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs" data-throw-if-not-resolved="false"></xref> instance. If

    the event handler changes the data resulting in new events the token will be increased again.

    </p>
  example: []
  syntax:
    content: public int GetDataChangedToken()
    return:
      type: System.Int32
    content.vb: Public Function GetDataChangedToken() As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken*
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  id: SaveToStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SaveToStream(int, Stream)
  nameWithType: UFModel.SaveToStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(int, System.IO.Stream)
  type: Method
  source:
    id: SaveToStream
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 545
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Saves the model to a stream together with a version.
  remarks: The method use <xref href="UltraForce.Library.NetStandard.Storage.UFDictionaryStorage" data-throw-if-not-resolved="false"></xref> to save the data.
  example: []
  syntax:
    content: public void SaveToStream(int aVersion, Stream aStream)
    parameters:
    - id: aVersion
      type: System.Int32
      description: Version to save
    - id: aStream
      type: System.IO.Stream
      description: Stream to write to
    content.vb: Public Sub SaveToStream(aVersion As Integer, aStream As Stream)
  overload: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream*
  nameWithType.vb: UFModel.SaveToStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(Integer, System.IO.Stream)
  name.vb: SaveToStream(Integer, Stream)
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  id: LoadFromStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: LoadFromStream(int, Stream)
  nameWithType: UFModel.LoadFromStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(int, System.IO.Stream)
  type: Method
  source:
    id: LoadFromStream
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 562
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Loads the model from a stream after validating the version.
  example: []
  syntax:
    content: public bool LoadFromStream(int aVersion, Stream aStream)
    parameters:
    - id: aVersion
      type: System.Int32
      description: Version that should be matched
    - id: aStream
      type: System.IO.Stream
      description: Stream to read from
    return:
      type: System.Boolean
      description: True if loaded successfully, false if the version is incorrect.
    content.vb: Public Function LoadFromStream(aVersion As Integer, aStream As Stream) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream*
  nameWithType.vb: UFModel.LoadFromStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(Integer, System.IO.Stream)
  name.vb: LoadFromStream(Integer, Stream)
- uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ToString
  id: ToString
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: UFModel.ToString()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ToString()
  type: Method
  source:
    id: ToString
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 580
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: UltraForce.Library.NetStandard.Models.UFModel.ToString*
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  id: GetPropertyValue``1(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: GetPropertyValue<T>(string)
  nameWithType: UFModel.GetPropertyValue<T>(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue<T>(string)
  type: Method
  source:
    id: GetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 597
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the value for a property casting it to a certain type.
  example: []
  syntax:
    content: 'public T GetPropertyValue<T>(string aPropertyName) where T : struct'
    parameters:
    - id: aPropertyName
      type: System.String
      description: Name of property
    typeParameters:
    - id: T
      description: Type to cast to
    return:
      type: '{T}'
      description: Value
    content.vb: Public Function GetPropertyValue(Of T As Structure)(aPropertyName As String) As T
  overload: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue*
  nameWithType.vb: UFModel.GetPropertyValue(Of T)(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(Of T)(String)
  name.vb: GetPropertyValue(Of T)(String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  id: SaveJson
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SaveJson()
  nameWithType: UFModel.SaveJson()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson()
  type: Method
  source:
    id: SaveJson
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 610
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Create JSON formatted string from the data.
  example: []
  syntax:
    content: public string SaveJson()
    return:
      type: System.String
      description: JSON formatted string
    content.vb: Public Function SaveJson() As String
  overload: UltraForce.Library.NetStandard.Models.UFModel.SaveJson*
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear
  id: Clear
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: UFModel.Clear()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear()
  type: Method
  source:
    id: Clear
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 625
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Clears the instance by calling <xref href="UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)" data-throw-if-not-resolved="false"></xref> with 

    <code>true</code>.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: UltraForce.Library.NetStandard.Models.UFModel.Clear*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear
- uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Lock
  id: Lock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: UFModel.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Lock()
  type: Method
  source:
    id: Lock
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 653
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Call lock to prevent <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> events from occurring until <xref href="UltraForce.Library.NetStandard.Models.UFModel.Unlock" data-throw-if-not-resolved="false"></xref> is called.

    <p>

    While the instances is locked, changes are still tracked and with the 

    last unlock an event will be fired containing all changed properties.

    </p>

    <p>

    The number of lock and unlock calls must match before events are fired 

    again.

    </p>

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, the 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock" data-throw-if-not-resolved="false"></xref> method of all properties that implement 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref> gets called as well.

    </p>
  example: []
  syntax:
    content: public virtual int Lock()
    return:
      type: System.Int32
      description: Current lock counter
    content.vb: Public Overridable Function Lock() As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModel.Lock*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
- uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Unlock
  id: Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Unlock()
  nameWithType: UFModel.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Unlock()
  type: Method
  source:
    id: Unlock
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 681
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Unlock to allow <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> events. If any property changed while the data was locked, a

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event is fired with all properties that changed.

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, the unlock method of all properties that implement

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref> instance gets called as well.

    </p>
  example: []
  syntax:
    content: public virtual int Unlock()
    return:
      type: System.Int32
      description: Current lock counter
    content.vb: Public Overridable Function Unlock() As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModel.Unlock*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: GetPropertyValue(string)
  nameWithType: UFModel.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(string)
  type: Method
  source:
    id: GetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 754
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the value for a property.
  example: []
  syntax:
    content: public object GetPropertyValue(string aPropertyName)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    return:
      type: System.Object
      description: The value.
    content.vb: Public Function GetPropertyValue(aPropertyName As String) As Object
  overload: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
  nameWithType.vb: UFModel.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SetPropertyValue(string, object)
  nameWithType: UFModel.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object)
  type: Method
  source:
    id: SetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 773
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Sets the value of a property. If the value is different the <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> method

    is called.
  example: []
  syntax:
    content: public bool SetPropertyValue(string aPropertyName, object aValue)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    - id: aValue
      type: System.Object
      description: A value.
    return:
      type: System.Boolean
      description: >-
        True if <code>aValue</code> is different from the current value and 

        has been assigned.
    content.vb: Public Function SetPropertyValue(aPropertyName As String, aValue As Object) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  id: IsValidPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: IsValidPropertyValue(string, object?)
  nameWithType: UFModel.IsValidPropertyValue(string, object?)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(string, object?)
  type: Method
  source:
    id: IsValidPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 794
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Validate a value for a certain property. 

    <p>

    The default implementation checks the registered validators. Subclasses can override this method to use

    alternative validation.

    </p>
  example: []
  syntax:
    content: public virtual bool IsValidPropertyValue(string aPropertyName, object? aValue)
    parameters:
    - id: aPropertyName
      type: System.String
      description: Property to validate value for
    - id: aValue
      type: System.Object
      description: Value to validate.
    return:
      type: System.Boolean
      description: <code>true</code> if the value is valid for the property; otherwise, <code>false</code>.
    content.vb: Public Overridable Function IsValidPropertyValue(aPropertyName As String, aValue As Object) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(System.String,System.Object)
  nameWithType.vb: UFModel.IsValidPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(String, Object)
  name.vb: IsValidPropertyValue(String, Object)
- uid: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  id: DataChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: DataChanged
  nameWithType: UFModel.DataChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  type: Event
  source:
    id: DataChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 812
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: This event is fired when one or more property value changed.
  example: []
  syntax:
    content: public event EventHandler<UFDataChangedEventArgs> DataChanged
    return:
      type: System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
    content.vb: Public Event DataChanged As EventHandler(Of UFDataChangedEventArgs)
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.DataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: UFModel.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    id: SaveToStorage
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 836
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Stores data in a keyed storage. 

    <p>

    The method uses the <xref href="UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute" data-throw-if-not-resolved="false"></xref> and <xref href="UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to determine if a property can

    be stored.

    </p>

    <p>

    The method supports the <xref href="UltraForce.Library.NetStandard.Annotations.UFIONameAttribute" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If a property implements <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref>, the data is stored via

    <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void SaveToStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: A storage to store data in.
    content.vb: Public Overridable Sub SaveToStorage(aStorage As UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage*
  implements:
  - UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: UFModel.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    id: LoadFromStorage
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 866
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Gets data from a keyed storage. 

    <p>

    The method uses the <xref href="UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute" data-throw-if-not-resolved="false"></xref> to determine 

    if a property can be retrieved.

    </p>

    <p>

    The method supports the <xref href="UltraForce.Library.NetStandard.Annotations.UFIONameAttribute" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    If a property is read only but implements the 

    <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject" data-throw-if-not-resolved="false"></xref>, it will get initialized from the

    storage via <xref href="UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public virtual void LoadFromStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: A storage to get data from.
    content.vb: Public Overridable Sub LoadFromStorage(aStorage As UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage*
  implements:
  - UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  id: SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: SaveJson(StringBuilder)
  nameWithType: UFModel.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  type: Method
  source:
    id: SaveJson
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 910
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Add data to <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref> using JSON formatting.

    <p>

    The method uses the <xref href="UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute" data-throw-if-not-resolved="false"></xref> annotation and <xref href="UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to determine 

    if a property can be saved.

    </p>

    <p>

    The method supports <xref href="UltraForce.Library.NetStandard.Annotations.UFIONameAttribute" data-throw-if-not-resolved="false"></xref> annotation.

    </p>
  example: []
  syntax:
    content: public virtual void SaveJson(StringBuilder aBuilder)
    parameters:
    - id: aBuilder
      type: System.Text.StringBuilder
      description: A builder to add data to.
    content.vb: Public Overridable Sub SaveJson(aBuilder As StringBuilder)
  overload: UltraForce.Library.NetStandard.Models.UFModel.SaveJson*
  implements:
  - UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
- uid: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  id: PropertyChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: UFModel.PropertyChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  type: Event
  source:
    id: PropertyChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 942
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    This event is fired when a property changes. If the data was locked and is unlocked, multiple events will

    fire (once for every property that is changed).
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  id: ChildChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: ChildChanged
  nameWithType: UFModel.ChildChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  type: Event
  source:
    id: ChildChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 958
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    This event is fired when <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used and one of the child properties that

    implements the <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref> fires an <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.DataChanged" data-throw-if-not-resolved="false"></xref> event.

    <p>

    The sender of this event will be the original child property instance that fired the event.

    </p>
  example: []
  syntax:
    content: public event EventHandler<UFDataChangedEventArgs> ChildChanged
    return:
      type: System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
    content.vb: Public Event ChildChanged As EventHandler(Of UFDataChangedEventArgs)
- uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  id: InitMeta
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: InitMeta()
  nameWithType: UFModel.InitMeta()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.InitMeta()
  type: Method
  source:
    id: InitMeta
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 978
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    This method gets called the first time an instance of certain <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> subclass is created.

    <p>

    This subclass can contain calls to  <xref href="UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String%2cUltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)" data-throw-if-not-resolved="false"></xref> and 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String%2cUltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)" data-throw-if-not-resolved="false"></xref>. The validators are stored in the meta and will be

    shared by all instances.

    </p>

    <p>

    The default implementation does nothing.

    </p>
  example: []
  syntax:
    content: protected virtual void InitMeta()
    content.vb: Protected Overridable Sub InitMeta()
  overload: UltraForce.Library.NetStandard.Models.UFModel.InitMeta*
- uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  id: CanSave(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: CanSave(string, object?)
  nameWithType: UFModel.CanSave(string, object?)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CanSave(string, object?)
  type: Method
  source:
    id: CanSave
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 997
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Check if a certain property can be saved. 

    <p>

    The default implementation checks if a default value has been set via <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> and

    returns <code>true</code> if <code>aValue</code> is not equal to the default value.

    </p>

    <p>

    If no default value has been specified, the method just returns true.

    </p>
  example: []
  syntax:
    content: protected virtual bool CanSave(string aPropertyName, object? aValue)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    - id: aValue
      type: System.Object
      description: Current property value.
    return:
      type: System.Boolean
      description: <code>true</code> if the property and its value should be saved; otherwise, <code>false</code>.
    content.vb: Protected Overridable Function CanSave(aPropertyName As String, aValue As Object) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.CanSave*
  nameWithType.vb: UFModel.CanSave(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CanSave(String, Object)
  name.vb: CanSave(String, Object)
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed
  id: Changed
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Changed()
  nameWithType: UFModel.Changed()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed()
  type: Method
  source:
    id: Changed
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1011
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Fire a DataChanged event without specifying a property. If the instance is locked, the change gets stored and

    the event will fire when the instance gets unlocked.
  example: []
  syntax:
    content: protected virtual void Changed()
    content.vb: Protected Overridable Sub Changed()
  overload: UltraForce.Library.NetStandard.Models.UFModel.Changed*
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  id: Changed(System.String,System.Object,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Changed(string, object?, object?)
  nameWithType: UFModel.Changed(string, object?, object?)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed(string, object?, object?)
  type: Method
  source:
    id: Changed
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1039
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Fire a DataChanged event for a property. If the instance is locked, the changed info gets stored and it is

    used when the instance gets unlocked.
  example: []
  syntax:
    content: protected virtual void Changed(string aPropertyName, object? anOldValue = null, object? aNewValue = null)
    parameters:
    - id: aPropertyName
      type: System.String
      description: The property that changed.
    - id: anOldValue
      type: System.Object
      description: The old value.
    - id: aNewValue
      type: System.Object
      description: The new value. If <code>null</code>, the method uses <xref href="UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)" data-throw-if-not-resolved="false"></xref> to get the current value.
    content.vb: Protected Overridable Sub Changed(aPropertyName As String, anOldValue As Object = Nothing, aNewValue As Object = Nothing)
  overload: UltraForce.Library.NetStandard.Models.UFModel.Changed*
  nameWithType.vb: UFModel.Changed(String, Object, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Changed(String, Object, Object)
  name.vb: Changed(String, Object, Object)
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  id: ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: ChildHasChanged(object, string[], UFDataChangedEventArgs)
  nameWithType: UFModel.ChildHasChanged(object, string[], UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(object, string[], UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  type: Method
  source:
    id: ChildHasChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1099
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    This method is called when the <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used.

    <p>

    The default implementation does nothing.

    </p>
  example: []
  syntax:
    content: protected virtual void ChildHasChanged(object aValue, string[] aPropertyNames, UFDataChangedEventArgs anEvent)
    parameters:
    - id: aValue
      type: System.Object
      description: Property value (is the sender of the event)
    - id: aPropertyNames
      type: System.String[]
      description: One or more property names the value is assigned to
    - id: anEvent
      type: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
      description: The change event
    content.vb: Protected Overridable Sub ChildHasChanged(aValue As Object, aPropertyNames As String(), anEvent As UFDataChangedEventArgs)
  overload: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged*
  nameWithType.vb: UFModel.ChildHasChanged(Object, String(), UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(Object, String(), UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: ChildHasChanged(Object, String(), UFDataChangedEventArgs)
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  id: OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: OnChildChanged(object, UFDataChangedEventArgs)
  nameWithType: UFModel.OnChildChanged(object, UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  type: Method
  source:
    id: OnChildChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1108
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Triggers the <xref href="UltraForce.Library.NetStandard.Models.UFModel.ChildChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnChildChanged(object aSender, UFDataChangedEventArgs anEvent)
    parameters:
    - id: aSender
      type: System.Object
      description: Sender of the event
    - id: anEvent
      type: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
      description: Event data
    content.vb: Protected Overridable Sub OnChildChanged(aSender As Object, anEvent As UFDataChangedEventArgs)
  overload: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged*
  nameWithType.vb: UFModel.OnChildChanged(Object, UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(Object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: OnChildChanged(Object, UFDataChangedEventArgs)
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(object, PropertyChangedEventArgs)
  nameWithType: UFModel.OnPropertyChanged(object, PropertyChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs)
  type: Method
  source:
    id: OnPropertyChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1121
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Triggers the <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(object aSender, PropertyChangedEventArgs anEvent)
    parameters:
    - id: aSender
      type: System.Object
      description: Sender of event
    - id: anEvent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: Event data
    content.vb: Protected Overridable Sub OnPropertyChanged(aSender As Object, anEvent As PropertyChangedEventArgs)
  overload: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged*
  nameWithType.vb: UFModel.OnPropertyChanged(Object, PropertyChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(Object, System.ComponentModel.PropertyChangedEventArgs)
  name.vb: OnPropertyChanged(Object, PropertyChangedEventArgs)
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  id: OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: OnDataChanged(UFDataChangedEventArgs)
  nameWithType: UFModel.OnDataChanged(UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  type: Method
  source:
    id: OnDataChanged
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1135
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Triggers the <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnDataChanged(UFDataChangedEventArgs anEvent)
    parameters:
    - id: anEvent
      type: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
      description: The event
    content.vb: Protected Overridable Sub OnDataChanged(anEvent As UFDataChangedEventArgs)
  overload: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged*
- uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  id: UpdateTrackedProperties
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: UpdateTrackedProperties()
  nameWithType: UFModel.UpdateTrackedProperties()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties()
  type: Method
  source:
    id: UpdateTrackedProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1152
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> has been set, this method will check all properties and updates

    listeners for properties that contain values that implement the <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref>.

    <p>

    This method should be called from within the <xref href="UltraForce.Library.NetStandard.Models.UFModel.Clear" data-throw-if-not-resolved="false"></xref> method if new instances are assigned to one

    or more properties directly without any calls to <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: protected void UpdateTrackedProperties()
    content.vb: Protected Sub UpdateTrackedProperties()
  overload: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties*
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  id: AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: AddValidator(string, IUFValidateValue)
  nameWithType: UFModel.AddValidator(string, IUFValidateValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  type: Method
  source:
    id: AddValidator
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1173
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Adds a value validator for a certain property. If this method is called from within the

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.InitMeta" data-throw-if-not-resolved="false"></xref> method, the validator is stored at meta level and shared by all property instances.
  example: []
  syntax:
    content: protected void AddValidator(string aPropertyName, IUFValidateValue aValidator)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    - id: aValidator
      type: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
      description: The validator to attach.
    content.vb: Protected Sub AddValidator(aPropertyName As String, aValidator As IUFValidateValue)
  overload: UltraForce.Library.NetStandard.Models.UFModel.AddValidator*
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  name.vb: AddValidator(String, IUFValidateValue)
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  id: AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: AddValidator(string, IUFValidateProperty)
  nameWithType: UFModel.AddValidator(string, IUFValidateProperty)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  type: Method
  source:
    id: AddValidator
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1199
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Adds a property validator for a certain property. If this method is called from within the

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.InitMeta" data-throw-if-not-resolved="false"></xref> method, the validator is stored at meta level and shared by all property instances.
  example: []
  syntax:
    content: protected void AddValidator(string aPropertyName, IUFValidateProperty aValidator)
    parameters:
    - id: aPropertyName
      type: System.String
      description: A property name.
    - id: aValidator
      type: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
      description: The validator to attach.
    content.vb: Protected Sub AddValidator(aPropertyName As String, aValidator As IUFValidateProperty)
  overload: UltraForce.Library.NetStandard.Models.UFModel.AddValidator*
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateProperty)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  name.vb: AddValidator(String, IUFValidateProperty)
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  id: Assign``1(``0@,``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  type: Method
  source:
    id: Assign
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1235
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Checks if a value is different; assigns a new value to a private var that represents a property and calls

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to fire an event.
  example: []
  syntax:
    content: protected virtual bool Assign<T>(ref T aPrivateVar, T aNewValue, string aPropertyName = "")
    parameters:
    - id: aPrivateVar
      type: '{T}'
      description: The private variable to get the current value from and assign the new value to.
    - id: aNewValue
      type: '{T}'
      description: A new value.
    - id: aPropertyName
      type: System.String
      description: >-
        A property name. This parameter is optional and does not need to be set when calling this method from inside

        the property setter.
    typeParameters:
    - id: T
      description: The type of the property.
    return:
      type: System.Boolean
      description: <code>true</code> if the value has changed; otherwise <code>false</code>.
    content.vb: Protected Overridable Function Assign(Of T)(aPrivateVar As T, aNewValue As T, aPropertyName As String = "") As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.Assign*
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  id: Set(System.Object,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Set(object?, string)
  nameWithType: UFModel.Set(object?, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Set(object?, string)
  type: Method
  source:
    id: Set
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1273
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Checks if a value is different; if it is the method stores the value internally and

    calls <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String%2cSystem.Object%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to fire an event.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> or <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(System.Func%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to retrieve the internally stored

    value.

    </p>
  remarks: >-
    Subclasses can override this method to store the value at some other location.

    <p>

    The default implementation either stores the value (the first time) or calls <xref href="UltraForce.Library.NetStandard.Models.UFModel.Assign%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to assign

    the new value.

    </p>
  example: []
  syntax:
    content: protected virtual bool Set(object? aNewValue, string aPropertyName = "")
    parameters:
    - id: aNewValue
      type: System.Object
      description: wA new value.
    - id: aPropertyName
      type: System.String
      description: >-
        A property name. This parameter is optional and does not need to be set

        when calling this method from inside the property setter.
    return:
      type: System.Boolean
      description: <code>true</code> if the value has changed; otherwise <code>false</code>.
    content.vb: Protected Overridable Function [Set](aNewValue As Object, aPropertyName As String = "") As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.Set*
  nameWithType.vb: UFModel.Set(Object, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Set(Object, String)
  name.vb: Set(Object, String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  id: Get``1(``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  type: Method
  source:
    id: Get
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1308
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Gets an internally stored value for a property.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store a value internally.

    </p>

    <p>

    This method will call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Get%60%601(System.Func%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref> with a simple factory function that

    returns <code>aDefaultValue</code>.

    </p>
  example: []
  syntax:
    content: protected T Get<T>(T aDefaultValue, string aPropertyName = "")
    parameters:
    - id: aDefaultValue
      type: '{T}'
      description: Default value to use when no value was stored.
    - id: aPropertyName
      type: System.String
      description: >-
        A property name. This parameter is optional and does not need to be set

        when calling this method from inside the property getter.
    typeParameters:
    - id: T
      description: The type of the property
    return:
      type: '{T}'
      description: The value of the property
    content.vb: Protected Function [Get](Of T)(aDefaultValue As T, aPropertyName As String = "") As T
  overload: UltraForce.Library.NetStandard.Models.UFModel.Get*
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  id: Get``1(System.Func{``0},System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  type: Method
  source:
    id: Get
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1333
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Gets an internally stored value for a property.

    <p>

    Use <xref href="UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to store a value internally.

    </p>
  remarks: Subclasses can override this method to retrieve the value from some other location.
  example: []
  syntax:
    content: protected virtual T Get<T>(Func<T> aFactory, string aPropertyName = "")
    parameters:
    - id: aFactory
      type: System.Func{{T}}
      description: Factory function that returns a value to be used as default value.
    - id: aPropertyName
      type: System.String
      description: >-
        A property name. This parameter is optional and does not need to be set

        when calling this method from inside the property getter.
    typeParameters:
    - id: T
      description: The type of the property
    return:
      type: '{T}'
      description: The value of the property
    content.vb: Protected Overridable Function [Get](Of T)(aFactory As Func(Of T), aPropertyName As String = "") As T
  overload: UltraForce.Library.NetStandard.Models.UFModel.Get*
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  id: HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: HasOption(Option)
  nameWithType: UFModel.HasOption(UFModel.Option)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  type: Method
  source:
    id: HasOption
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1348
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Check if a certain option is enabled.
  example: []
  syntax:
    content: protected bool HasOption(UFModel.Option anOption)
    parameters:
    - id: anOption
      type: UltraForce.Library.NetStandard.Models.UFModel.Option
      description: Option to check
    return:
      type: System.Boolean
      description: <code>true</code> if anOption is enabled; otherwise, <code>false</code>.
    content.vb: Protected Function HasOption(anOption As UFModel.Option) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModel.HasOption*
- uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  id: LogNewValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  langs:
  - csharp
  - vb
  name: LogNewValue(string, object?)
  nameWithType: UFModel.LogNewValue(string, object?)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(string, object?)
  type: Method
  source:
    id: LogNewValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Models\UFModel.cs
    startLine: 1367
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Checks if <xref href="UltraForce.Library.NetStandard.Annotations.UFLogAttribute" data-throw-if-not-resolved="false"></xref> has been set for the property.

    If it set, a log entry for the new value is added to the log set

    by <xref href="UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)" data-throw-if-not-resolved="false"></xref>.

    <remarks>

    This method only does something if <code>UFDEBUG</code> has been defined.

    </remarks>
  example: []
  syntax:
    content: >-
      [Conditional("UFDEBUG")]

      protected void LogNewValue(string aPropertyName, object? aNewValue)
    parameters:
    - id: aPropertyName
      type: System.String
      description: Property name to log value for
    - id: aNewValue
      type: System.Object
      description: Value to log
    content.vb: >-
      <Conditional("UFDEBUG")>

      Protected Sub LogNewValue(aPropertyName As String, aNewValue As Object)
  overload: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UFDEBUG
  nameWithType.vb: UFModel.LogNewValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(String, Object)
  name.vb: LogNewValue(String, Object)
references:
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  name: Set(object, string)
  nameWithType: UFModel.Set(object, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Set(object, string)
  nameWithType.vb: UFModel.Set(Object, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Set(Object, String)
  name.vb: Set(Object, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel
  nameWithType: UFModel
  fullName: UltraForce.Library.NetStandard.Models.UFModel
- uid: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_DataChanged
  name: DataChanged
  nameWithType: UFModel.DataChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_PropertyChanged
  name: PropertyChanged
  nameWithType: UFModel.PropertyChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Lock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  name: Lock()
  nameWithType: UFModel.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  name: Unlock()
  nameWithType: UFModel.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  name: SetPropertyValue(string, object)
  nameWithType: UFModel.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_TrackChildChange
  name: TrackChildChange
  nameWithType: UFModel.Option.TrackChildChange
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
- uid: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.html
  name: IUFNotifyDataChanged
  nameWithType: IUFNotifyDataChanged
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  name: Changed(string, object, object)
  nameWithType: UFModel.Changed(string, object, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed(string, object, object)
  nameWithType.vb: UFModel.Changed(String, Object, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Changed(String, Object, Object)
  name.vb: Changed(String, Object, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Annotations.UFIgnoreAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFIgnoreAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFIgnoreAttribute.html
  name: UFIgnoreAttribute
  nameWithType: UFIgnoreAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFIgnoreAttribute
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
- uid: UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute.html
  name: UFIOIgnoreAttribute
  nameWithType: UFIOIgnoreAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFIOIgnoreAttribute
- uid: UltraForce.Library.NetStandard.Annotations.UFIONameAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFIONameAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFIONameAttribute.html
  name: UFIONameAttribute
  nameWithType: UFIONameAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFIONameAttribute
- uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  name: CanSave(string, object)
  nameWithType: UFModel.CanSave(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CanSave(string, object)
  nameWithType.vb: UFModel.CanSave(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CanSave(String, Object)
  name.vb: CanSave(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
  commentId: T:UltraForce.Library.NetStandard.Development.UFHtmlLog
  parent: UltraForce.Library.NetStandard.Development
  href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  name: UFHtmlLog
  nameWithType: UFHtmlLog
  fullName: UltraForce.Library.NetStandard.Development.UFHtmlLog
- uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  name: UseLog(UFHtmlLog)
  nameWithType: UFModel.UseLog(UFHtmlLog)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
- uid: UltraForce.Library.NetStandard.Annotations.UFLogAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFLogAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFLogAttribute.html
  name: UFLogAttribute
  nameWithType: UFLogAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFLogAttribute
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  name: AddValidator(string, IUFValidateValue)
  nameWithType: UFModel.AddValidator(string, IUFValidateValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  name.vb: AddValidator(String, IUFValidateValue)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  name: AddValidator(string, IUFValidateProperty)
  nameWithType: UFModel.AddValidator(string, IUFValidateProperty)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateProperty)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  name.vb: AddValidator(String, IUFValidateProperty)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  name: InitMeta()
  nameWithType: UFModel.InitMeta()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.InitMeta()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildChanged
  name: ChildChanged
  nameWithType: UFModel.ChildChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
- uid: UltraForce.Library.NetStandard.Models
  commentId: N:UltraForce.Library.NetStandard.Models
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Models
  nameWithType: UltraForce.Library.NetStandard.Models
  fullName: UltraForce.Library.NetStandard.Models
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  commentId: T:UltraForce.Library.NetStandard.Storage.IUFStorableObject
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  name: IUFStorableObject
  nameWithType: IUFStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject
- uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html
  name: IUFJsonExport
  nameWithType: IUFJsonExport
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFLockable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html
  name: IUFLockable
  nameWithType: IUFLockable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFClearable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html
  name: IUFClearable
  nameWithType: IUFClearable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFClearable
- uid: UltraForce.Library.NetStandard.Models.IUFModel
  commentId: T:UltraForce.Library.NetStandard.Models.IUFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.IUFModel.html
  name: IUFModel
  nameWithType: IUFModel
  fullName: UltraForce.Library.NetStandard.Models.IUFModel
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html
  name: IUFAccessProperty
  nameWithType: IUFAccessProperty
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
- uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html
  name: IUFValidatePropertyValue
  nameWithType: IUFValidatePropertyValue
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: UltraForce.Library.NetStandard.Storage
  commentId: N:UltraForce.Library.NetStandard.Storage
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Storage
  nameWithType: UltraForce.Library.NetStandard.Storage
  fullName: UltraForce.Library.NetStandard.Storage
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
- uid: UltraForce.Library.NetStandard.Development
  commentId: N:UltraForce.Library.NetStandard.Development
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Development
  nameWithType: UltraForce.Library.NetStandard.Development
  fullName: UltraForce.Library.NetStandard.Development
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Development
    name: Development
    href: UltraForce.Library.NetStandard.Development.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Development
    name: Development
    href: UltraForce.Library.NetStandard.Development.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  name: UpdateTrackedProperties()
  nameWithType: UFModel.UpdateTrackedProperties()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.#ctor
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel__ctor_System_Object_UltraForce_Library_NetStandard_Models_UFModel_Option___
  name: UFModel
  nameWithType: UFModel.UFModel
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UFModel
  nameWithType.vb: UFModel.New
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.New
  name.vb: New
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  name: Option[]
  nameWithType: UFModel.Option[]
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  nameWithType.vb: UFModel.Option()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Option()
  name.vb: Option()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.UseLog
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  name: UseLog
  nameWithType: UFModel.UseLog
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UseLog
- uid: System.ComponentModel.DefaultValueAttribute
  commentId: T:System.ComponentModel.DefaultValueAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.defaultvalueattribute
  name: DefaultValueAttribute
  nameWithType: DefaultValueAttribute
  fullName: System.ComponentModel.DefaultValueAttribute
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  name: Changed()
  nameWithType: UFModel.Changed()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Clear
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  name: Clear
  nameWithType: UFModel.Clear
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  name: GetPropertyType
  nameWithType: UFModel.GetPropertyType
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_LockChildren
  name: LockChildren
  nameWithType: UFModel.Option.LockChildren
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  name: ResetLock()
  nameWithType: UFModel.ResetLock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetLock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  name: ResetLock
  nameWithType: UFModel.ResetLock
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  name: HasChanged
  nameWithType: UFModel.HasChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  name: ResetChanged
  nameWithType: UFModel.ResetChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  name: GetPropertyNames
  nameWithType: UFModel.GetPropertyNames
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.HasProperty
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  name: HasProperty
  nameWithType: UFModel.HasProperty
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasProperty
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  name: IsValidPropertyValue(string, object)
  nameWithType: UFModel.IsValidPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(string, object)
  nameWithType.vb: UFModel.IsValidPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(String, Object)
  name.vb: IsValidPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.IsValid
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  name: IsValid
  nameWithType: UFModel.IsValid
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValid
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  name: SetPropertyValue
  nameWithType: UFModel.SetPropertyValue
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  name: SetPropertyValue(string, object, bool)
  nameWithType: UFModel.SetPropertyValue(string, object, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object, bool)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object, Boolean)
  name.vb: SetPropertyValue(String, Object, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  name: GetPropertyValue(string)
  nameWithType: UFModel.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(string)
  nameWithType.vb: UFModel.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.CopyTo
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyTo
  nameWithType: UFModel.CopyTo
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyTo
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyTo(UFModel, bool)
  nameWithType: UFModel.CopyTo(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, bool)
  nameWithType.vb: UFModel.CopyTo(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyTo(UFModel, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.CopyFrom
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyFrom
  nameWithType: UFModel.CopyFrom
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom
- uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
  commentId: T:UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
  parent: UltraForce.Library.NetStandard.Events
  href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  name: UFDataChangedEventArgs
  nameWithType: UFDataChangedEventArgs
  fullName: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  name: GetDataChangedToken
  nameWithType: UFModel.GetDataChangedToken
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UltraForce.Library.NetStandard.Events
  commentId: N:UltraForce.Library.NetStandard.Events
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Events
  nameWithType: UltraForce.Library.NetStandard.Events
  fullName: UltraForce.Library.NetStandard.Events
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Events
    name: Events
    href: UltraForce.Library.NetStandard.Events.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Events
    name: Events
    href: UltraForce.Library.NetStandard.Events.html
- uid: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
  href: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage.html
  name: UFDictionaryStorage
  nameWithType: UFDictionaryStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFDictionaryStorage
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.SaveToStream
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  name: SaveToStream
  nameWithType: UFModel.SaveToStream
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  name: LoadFromStream
  nameWithType: UFModel.LoadFromStream
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ToString*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.ToString
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  name: ToString
  nameWithType: UFModel.ToString
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ToString
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  name: GetPropertyValue
  nameWithType: UFModel.GetPropertyValue
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  name: SaveJson
  nameWithType: UFModel.SaveJson
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  name: Clear(bool)
  nameWithType: UFModel.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear(bool)
  nameWithType.vb: UFModel.Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Clear(Boolean)
  name.vb: Clear(Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear
  parent: UltraForce.Library.NetStandard.Interfaces.IUFClearable
  href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html#UltraForce_Library_NetStandard_Interfaces_IUFClearable_Clear
  name: Clear()
  nameWithType: IUFClearable.Clear()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html#UltraForce_Library_NetStandard_Interfaces_IUFClearable_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html#UltraForce_Library_NetStandard_Interfaces_IUFClearable_Clear
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  name: Lock()
  nameWithType: IUFLockable.Lock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Lock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Lock
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  name: Lock
  nameWithType: UFModel.Lock
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Lock
- uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Unlock
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  name: Unlock
  nameWithType: UFModel.Unlock
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Unlock
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  name: Unlock()
  nameWithType: IUFLockable.Unlock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  name: GetPropertyValue(string)
  nameWithType: IUFAccessProperty.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(string)
  nameWithType.vb: IUFAccessProperty.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  name: SetPropertyValue(string, object)
  nameWithType: IUFAccessProperty.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(string, object)
  nameWithType.vb: IUFAccessProperty.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  name: IsValidPropertyValue
  nameWithType: UFModel.IsValidPropertyValue
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue
- uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html#UltraForce_Library_NetStandard_Interfaces_IUFValidatePropertyValue_IsValidPropertyValue_System_String_System_Object_
  name: IsValidPropertyValue(string, object)
  nameWithType: IUFValidatePropertyValue.IsValidPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(string, object)
  nameWithType.vb: IUFValidatePropertyValue.IsValidPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(String, Object)
  name.vb: IsValidPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html#UltraForce_Library_NetStandard_Interfaces_IUFValidatePropertyValue_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html#UltraForce_Library_NetStandard_Interfaces_IUFValidatePropertyValue_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.DataChanged
  commentId: E:UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.DataChanged
  parent: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  href: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.html#UltraForce_Library_NetStandard_Interfaces_IUFNotifyDataChanged_DataChanged
  name: DataChanged
  nameWithType: IUFNotifyDataChanged.DataChanged
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.DataChanged
- uid: System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  commentId: T:System.EventHandler{UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UFDataChangedEventArgs>
  nameWithType: EventHandler<UFDataChangedEventArgs>
  fullName: System.EventHandler<UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs>
  nameWithType.vb: EventHandler(Of UFDataChangedEventArgs)
  fullName.vb: System.EventHandler(Of UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: EventHandler(Of UFDataChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: IUFStorableObject.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage
  nameWithType: UFModel.SaveToStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: IUFStorableObject.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html#UltraForce_Library_NetStandard_Storage_IUFStorableObject_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage
  nameWithType: UFModel.LoadFromStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html#UltraForce_Library_NetStandard_Interfaces_IUFJsonExport_SaveJson_System_Text_StringBuilder_
  name: SaveJson(StringBuilder)
  nameWithType: IUFJsonExport.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html#UltraForce_Library_NetStandard_Interfaces_IUFJsonExport_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html#UltraForce_Library_NetStandard_Interfaces_IUFJsonExport_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  name: InitMeta
  nameWithType: UFModel.InitMeta
  fullName: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
- uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.CanSave
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  name: CanSave
  nameWithType: UFModel.CanSave
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CanSave
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Changed
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  name: Changed
  nameWithType: UFModel.Changed
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: ChildHasChanged
  nameWithType: UFModel.ChildHasChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnChildChanged
  nameWithType: UFModel.OnChildChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  name: OnPropertyChanged
  nameWithType: UFModel.OnPropertyChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged
- uid: System.ComponentModel.PropertyChangedEventArgs
  commentId: T:System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnDataChanged
  nameWithType: UFModel.OnDataChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  name: Clear()
  nameWithType: UFModel.Clear()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  name: UpdateTrackedProperties
  nameWithType: UFModel.UpdateTrackedProperties
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.AddValidator
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  name: AddValidator
  nameWithType: UFModel.AddValidator
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator
- uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
  commentId: T:UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
  parent: UltraForce.Library.NetStandard.Models.Validators
  href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  name: IUFValidateValue
  nameWithType: IUFValidateValue
  fullName: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
- uid: UltraForce.Library.NetStandard.Models.Validators
  commentId: N:UltraForce.Library.NetStandard.Models.Validators
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Models.Validators
  nameWithType: UltraForce.Library.NetStandard.Models.Validators
  fullName: UltraForce.Library.NetStandard.Models.Validators
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.Validators
    name: Validators
    href: UltraForce.Library.NetStandard.Models.Validators.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.Validators
    name: Validators
    href: UltraForce.Library.NetStandard.Models.Validators.html
- uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
  commentId: T:UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
  parent: UltraForce.Library.NetStandard.Models.Validators
  href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  name: IUFValidateProperty
  nameWithType: IUFValidateProperty
  fullName: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Assign
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign
  nameWithType: UFModel.Assign
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign
- uid: UltraForce.Library.NetStandard.Models.UFModel.Set*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Set
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  name: Set
  nameWithType: UFModel.Set
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Set
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.Get
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get
  nameWithType: UFModel.Get
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.HasOption
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  name: HasOption
  nameWithType: UFModel.HasOption
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasOption
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel.Option
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel.Option
  nameWithType: UFModel.Option
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
- uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModel.LogNewValue
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  name: LogNewValue
  nameWithType: UFModel.LogNewValue
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue
