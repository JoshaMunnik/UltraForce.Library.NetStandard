### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  commentId: T:UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  id: UFModelDictionary`2
  parent: UltraForce.Library.NetStandard.Models
  children:
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(`0,`1)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear(System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey(`0)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item(`0)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(`0)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson(System.Text.StringBuilder)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue(`0,`1@)
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock
  - UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values
  langs:
  - csharp
  - vb
  name: UFModelDictionary<TKey, TValue>
  nameWithType: UFModelDictionary<TKey, TValue>
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFModelDictionary
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 74
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Implements a generic <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> adding support for certain

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref> values and implementing various 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> methods.
  remarks: >-
    <p>

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> will fire a 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event whenever the contents of 

    the dictionary changes.

    </p>

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> option is set and TValue 

    implements the <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref> interface, <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602.Lock" data-throw-if-not-resolved="false"></xref>

    will also lock all items within the list.

    </p>

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> option is set and 

    TValue implements <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref>,  

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> will install change 

    listeners with every stored value and will fire 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref>, 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.ChildChanged" data-throw-if-not-resolved="false"></xref> and 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> events if a value changes. 

    </p>

    <p>

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> will make sure to install

    only one listener, even if the same value instance is added for multiple

    keys.

    </p>
  example: []
  syntax:
    content: 'public class UFModelDictionary<TKey, TValue> : UFModel, IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable where TKey : struct where TValue : struct'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class UFModelDictionary(Of TKey As Structure, TValue As Structure) Inherits UFModel Implements IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue, IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable
  inheritance:
  - System.Object
  - UltraForce.Library.NetStandard.Models.UFModel
  implements:
  - UltraForce.Library.NetStandard.Storage.IUFStorableObject
  - UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  - UltraForce.Library.NetStandard.Interfaces.IUFLockable
  - System.ComponentModel.INotifyPropertyChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFClearable
  - UltraForce.Library.NetStandard.Models.IUFModel
  - UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  - UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  - UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  - UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.IsValid
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  - UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.ToString
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  - UltraForce.Library.NetStandard.Models.UFModel.Clear
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  - UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  - UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  - UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.Changed
  - UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  - UltraForce.Library.NetStandard.Models.UFModel.Assign``1({T}@,{T},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1({T},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{{T}},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  - UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: UFModelDictionary(Of TKey, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue)
  name.vb: UFModelDictionary(Of TKey, TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: UFModelDictionary(params Option[])
  nameWithType: UFModelDictionary<TKey, TValue>.UFModelDictionary(params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.UFModelDictionary(params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 121
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the 

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UFModelDictionary(params UFModel.Option[] anOptions)
    parameters:
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: The options <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).New(ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).New(ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: UFModelDictionary(int, params Option[])
  nameWithType: UFModelDictionary<TKey, TValue>.UFModelDictionary(int, params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.UFModelDictionary(int, params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 144
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the 

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UFModelDictionary(int aCapacity, params UFModel.Option[] anOptions)
    parameters:
    - id: aCapacity
      type: System.Int32
      description: Initial capacity.
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: An options.
    content.vb: Public Sub New(aCapacity As Integer, ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).New(Integer, ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).New(Integer, ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(Integer, ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1},UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: UFModelDictionary(IDictionary<TKey, TValue>, params Option[])
  nameWithType: UFModelDictionary<TKey, TValue>.UFModelDictionary(IDictionary<TKey, TValue>, params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.UFModelDictionary(System.Collections.Generic.IDictionary<TKey, TValue>, params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 167
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the 

    <xref href="UltraForce.Library.NetStandard.Models.UFModelDictionary%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UFModelDictionary(IDictionary<TKey, TValue> aDictionary, params UFModel.Option[] anOptions)
    parameters:
    - id: aDictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: Initial dictionary values.
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: An options.
    content.vb: Public Sub New(aDictionary As IDictionary(Of TKey, TValue), ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).New(IDictionary(Of TKey, TValue), ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).New(System.Collections.Generic.IDictionary(Of TKey, TValue), ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(IDictionary(Of TKey, TValue), ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: UFModelDictionary<TKey, TValue>.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Clear(bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Clear
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 188
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes or clears the properties of the data structure to default values. 

    <p>

    The default implementation sets all the properties that have a <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached to

    the value specified by that attribute. 

    </p><p>

    If the property has no <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached the method will check if the property

    value has a method named <code>Clear</code> and will call that method if it does.

    </p><p>

    As last step the method will call <xref href="UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties" data-throw-if-not-resolved="false"></xref></p><p>

    Subclasses can override this method to initialize or clear additional properties.

    </p><p>

    If there are properties that implement <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used, the clear method should make sure the instances are existing.

    </p><param name="aCallChanged">

    When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed" data-throw-if-not-resolved="false"></xref>. 

    </param>
  example: []
  syntax:
    content: public override void Clear(bool aCallChanged)
    parameters:
    - id: aCallChanged
      type: System.Boolean
    content.vb: Public Overrides Sub Clear(aCallChanged As Boolean)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  id: Lock
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: UFModelDictionary<TKey, TValue>.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Lock()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Lock
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 203
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, call 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock" data-throw-if-not-resolved="false"></xref> on all non-null items that implement

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override int Lock()
    return:
      type: System.Int32
    content.vb: Public Overrides Function Lock() As Integer
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Lock
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Lock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Lock()
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock
  id: Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Unlock()
  nameWithType: UFModelDictionary<TKey, TValue>.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Unlock()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Unlock
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 224
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, call 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock" data-throw-if-not-resolved="false"></xref> on all non-null items that implement

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override int Unlock()
    return:
      type: System.Int32
    content.vb: Public Overrides Function Unlock() As Integer
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Unlock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Unlock()
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: UFModelDictionary<TKey, TValue>.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SaveToStorage
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 248
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Saves the keys and values in the storage.
  example: []
  syntax:
    content: public override void SaveToStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: Storage to save the data to
    content.vb: Public Overrides Sub SaveToStorage(aStorage As UFKeyedStorage)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).SaveToStorage(UFKeyedStorage)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: UFModelDictionary<TKey, TValue>.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: LoadFromStorage
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 265
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Loads the keys and values from the storage.
  example: []
  syntax:
    content: public override void LoadFromStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: Storage to save the data to
    content.vb: Public Overrides Sub LoadFromStorage(aStorage As UFKeyedStorage)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).LoadFromStorage(UFKeyedStorage)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson(System.Text.StringBuilder)
  id: SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: SaveJson(StringBuilder)
  nameWithType: UFModelDictionary<TKey, TValue>.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.SaveJson(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SaveJson
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 290
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Save data as object definition.
  example: []
  syntax:
    content: public override void SaveJson(StringBuilder aBuilder)
    parameters:
    - id: aBuilder
      type: System.Text.StringBuilder
      description: A builder to add data to.
    content.vb: Public Overrides Sub SaveJson(aBuilder As StringBuilder)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson*
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).SaveJson(StringBuilder)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).SaveJson(System.Text.StringBuilder)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: UFModelDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ContainsKey
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 301
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Determines whether the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(TKey aKey)
    parameters:
    - id: aKey
      type: '{TKey}'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function ContainsKey(aKey As TKey) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(`0,`1)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: UFModelDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 307
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Adds an element with the provided key and value to the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(TKey aKey, TValue aValue)
    parameters:
    - id: aKey
      type: '{TKey}'
    - id: aValue
      type: '{TValue}'
    content.vb: Public Sub Add(aKey As TKey, aValue As TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element with the same key already exists in the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: UFModelDictionary<TKey, TValue>.Remove(TKey)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Remove
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 314
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Removes the element with the specified key from the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Remove(TKey aKey)
    parameters:
    - id: aKey
      type: '{TKey}'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the element is successfully removed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.  This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">key</code> was not found in the original <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Remove(aKey As TKey) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Remove(TKey)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue(`0,`1@)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: UFModelDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: TryGetValue
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 333
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the value associated with the specified key.
  example: []
  syntax:
    content: public bool TryGetValue(TKey aKey, out TValue aValue)
    parameters:
    - id: aKey
      type: '{TKey}'
    - id: aValue
      type: '{TValue}'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function TryGetValue(aKey As TKey, aValue As TValue) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item(`0)
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item(`0)
  id: Item(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: UFModelDictionary<TKey, TValue>.this[TKey]
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: this[]
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 339
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets or sets the element with the specified key.
  example: []
  syntax:
    content: public TValue this[TKey aKey] { get; set; }
    parameters:
    - id: aKey
      type: '{TKey}'
    return:
      type: '{TValue}'
      description: The element with the specified key.
    content.vb: Public Default Property this[](aKey As TKey) As TValue
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: The property is retrieved and <code class="paramref">key</code> is not found.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys
  id: Keys
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: UFModelDictionary<TKey, TValue>.Keys
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Keys
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 355
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets an <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the keys of the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ICollection<TKey> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
      description: An <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the keys of the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Keys As ICollection(Of TKey)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Keys
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Keys
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values
  id: Values
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: UFModelDictionary<TKey, TValue>.Values
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Values
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 362
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets an <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the values in the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ICollection<TValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
      description: An <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the values in the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Values As ICollection(Of TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Values
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Values
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: UFModelDictionary<TKey, TValue>.GetEnumerator()
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetEnumerator
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 373
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Returns an enumerator that iterates through a collection.
  example: []
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).GetEnumerator()
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: UFModelDictionary<TKey, TValue>.Add(KeyValuePair<TKey, TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 394
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Adds an item to the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(KeyValuePair<TKey, TValue> anItem)
    parameters:
    - id: anItem
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    content.vb: Public Sub Add(anItem As KeyValuePair(Of TKey, TValue))
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: UFModelDictionary<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Contains
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 401
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Determines whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> contains a specific value.
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<TKey, TValue> anItem)
    parameters:
    - id: anItem
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> is found in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Contains(anItem As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: UFModelDictionary<TKey, TValue>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CopyTo
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 408
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Copies the elements of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  example: []
  syntax:
    content: public void CopyTo(KeyValuePair<TKey, TValue>[] anArray, int anArrayIndex)
    parameters:
    - id: anArray
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
    - id: anArrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(anArray As KeyValuePair(Of TKey, TValue)(), anArrayIndex As Integer)
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">array</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">arrayIndex</code> is less than 0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of elements in the source <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is greater than the available space from <code class="paramref">arrayIndex</code> to the end of the destination <code class="paramref">array</code>.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: UFModelDictionary<TKey, TValue>.Remove(KeyValuePair<TKey, TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Remove
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 420
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Remove(KeyValuePair<TKey, TValue> anItem)
    parameters:
    - id: anItem
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> was successfully removed from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">item</code> is not found in the original <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Remove(anItem As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count
  id: Count
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: UFModelDictionary<TKey, TValue>.Count
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Count
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 433
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Count
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Count
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly
  id: IsReadOnly
  parent: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: UFModelDictionary<TKey, TValue>.IsReadOnly
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.IsReadOnly
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IsReadOnly
    path: ../UltraForce.Library.NetStandard/Models/UFModelDictionary.cs
    startLine: 440
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets a value indicating whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).IsReadOnly
references:
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel.Option
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel.Option
  nameWithType: UFModel.Option
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
- uid: UltraForce.Library.NetStandard.Models.UFModel
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel
  nameWithType: UFModel
  fullName: UltraForce.Library.NetStandard.Models.UFModel
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  commentId: T:UltraForce.Library.NetStandard.Models.UFModelDictionary`2
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html
  name: UFModelDictionary<TKey, TValue>
  nameWithType: UFModelDictionary<TKey, TValue>
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>
  nameWithType.vb: UFModelDictionary(Of TKey, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue)
  name.vb: UFModelDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
    name: UFModelDictionary
    href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2
    name: UFModelDictionary
    href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_DataChanged
  name: DataChanged
  nameWithType: UFModel.DataChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_LockChildren
  name: LockChildren
  nameWithType: UFModel.Option.LockChildren
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFLockable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html
  name: IUFLockable
  nameWithType: IUFLockable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Lock
  name: Lock()
  nameWithType: UFModelDictionary<TKey, TValue>.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Lock()
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Lock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_TrackChildChange
  name: TrackChildChange
  nameWithType: UFModel.Option.TrackChildChange
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
- uid: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.html
  name: IUFNotifyDataChanged
  nameWithType: IUFNotifyDataChanged
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildChanged
  name: ChildChanged
  nameWithType: UFModel.ChildChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_PropertyChanged
  name: PropertyChanged
  nameWithType: UFModel.PropertyChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
- uid: UltraForce.Library.NetStandard.Models
  commentId: N:UltraForce.Library.NetStandard.Models
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Models
  nameWithType: UltraForce.Library.NetStandard.Models
  fullName: UltraForce.Library.NetStandard.Models
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  commentId: T:UltraForce.Library.NetStandard.Storage.IUFStorableObject
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  name: IUFStorableObject
  nameWithType: IUFStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject
- uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html
  name: IUFJsonExport
  nameWithType: IUFJsonExport
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFClearable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html
  name: IUFClearable
  nameWithType: IUFClearable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFClearable
- uid: UltraForce.Library.NetStandard.Models.IUFModel
  commentId: T:UltraForce.Library.NetStandard.Models.IUFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.IUFModel.html
  name: IUFModel
  nameWithType: IUFModel
  fullName: UltraForce.Library.NetStandard.Models.IUFModel
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html
  name: IUFAccessProperty
  nameWithType: IUFAccessProperty
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
- uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html
  name: IUFValidatePropertyValue
  nameWithType: IUFValidatePropertyValue
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<TKey, TValue>>
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  name: UseLog(UFHtmlLog)
  nameWithType: UFModel.UseLog(UFHtmlLog)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  name: GetPropertyType(string)
  nameWithType: UFModel.GetPropertyType(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(string)
  nameWithType.vb: UFModel.GetPropertyType(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(String)
  name.vb: GetPropertyType(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
    name: GetPropertyType
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
    name: GetPropertyType
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  name: ResetLock()
  nameWithType: UFModel.ResetLock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetLock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  name: HasChanged()
  nameWithType: UFModel.HasChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasChanged()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
    name: HasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
    name: HasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  name: ResetChanged()
  nameWithType: UFModel.ResetChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
    name: ResetChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
    name: ResetChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  name: GetPropertyNames()
  nameWithType: UFModel.GetPropertyNames()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
    name: GetPropertyNames
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
    name: GetPropertyNames
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  name: HasProperty(string)
  nameWithType: UFModel.HasProperty(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(string)
  nameWithType.vb: UFModel.HasProperty(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(String)
  name.vb: HasProperty(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
    name: HasProperty
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
    name: HasProperty
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValid
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  name: IsValid()
  nameWithType: UFModel.IsValid()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValid()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
    name: IsValid
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
    name: IsValid
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  name: SetPropertyValue(string, object, bool)
  nameWithType: UFModel.SetPropertyValue(string, object, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object, bool)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object, Boolean)
  name.vb: SetPropertyValue(String, Object, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyTo(UFModel, bool)
  nameWithType: UFModel.CopyTo(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, bool)
  nameWithType.vb: UFModel.CopyTo(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyTo(UFModel, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyFrom(UFModel, bool)
  nameWithType: UFModel.CopyFrom(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, bool)
  nameWithType.vb: UFModel.CopyFrom(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyFrom(UFModel, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyFrom
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyFrom
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  name: GetDataChangedToken()
  nameWithType: UFModel.GetDataChangedToken()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
    name: GetDataChangedToken
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
    name: GetDataChangedToken
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  name: SaveToStream(int, Stream)
  nameWithType: UFModel.SaveToStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(int, System.IO.Stream)
  nameWithType.vb: UFModel.SaveToStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(Integer, System.IO.Stream)
  name.vb: SaveToStream(Integer, Stream)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
    name: SaveToStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
    name: SaveToStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  name: LoadFromStream(int, Stream)
  nameWithType: UFModel.LoadFromStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(int, System.IO.Stream)
  nameWithType.vb: UFModel.LoadFromStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(Integer, System.IO.Stream)
  name.vb: LoadFromStream(Integer, Stream)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
    name: LoadFromStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
    name: LoadFromStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ToString
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  name: ToString()
  nameWithType: UFModel.ToString()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ToString()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
    name: ToString
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
    name: ToString
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  name: GetPropertyValue<T>(string)
  nameWithType: UFModel.GetPropertyValue<T>(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue<T>(string)
  nameWithType.vb: UFModel.GetPropertyValue(Of T)(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(Of T)(String)
  name.vb: GetPropertyValue(Of T)(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  name: SaveJson()
  nameWithType: UFModel.SaveJson()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  name: Clear()
  nameWithType: UFModel.Clear()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  name: GetPropertyValue(string)
  nameWithType: UFModel.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(string)
  nameWithType.vb: UFModel.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  name: SetPropertyValue(string, object)
  nameWithType: UFModel.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  name: IsValidPropertyValue(string, object)
  nameWithType: UFModel.IsValidPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(string, object)
  nameWithType.vb: UFModel.IsValidPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(String, Object)
  name.vb: IsValidPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  name: InitMeta()
  nameWithType: UFModel.InitMeta()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.InitMeta()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  name: CanSave(string, object)
  nameWithType: UFModel.CanSave(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CanSave(string, object)
  nameWithType.vb: UFModel.CanSave(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CanSave(String, Object)
  name.vb: CanSave(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  name: Changed()
  nameWithType: UFModel.Changed()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  name: Changed(string, object, object)
  nameWithType: UFModel.Changed(string, object, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed(string, object, object)
  nameWithType.vb: UFModel.Changed(String, Object, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Changed(String, Object, Object)
  name.vb: Changed(String, Object, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: ChildHasChanged(object, string[], UFDataChangedEventArgs)
  nameWithType: UFModel.ChildHasChanged(object, string[], UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(object, string[], UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  nameWithType.vb: UFModel.ChildHasChanged(Object, String(), UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(Object, String(), UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: ChildHasChanged(Object, String(), UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: ChildHasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: ChildHasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnChildChanged(object, UFDataChangedEventArgs)
  nameWithType: UFModel.OnChildChanged(object, UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  nameWithType.vb: UFModel.OnChildChanged(Object, UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(Object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: OnChildChanged(Object, UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnChildChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnChildChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  name: OnPropertyChanged(object, PropertyChangedEventArgs)
  nameWithType: UFModel.OnPropertyChanged(object, PropertyChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: UFModel.OnPropertyChanged(Object, PropertyChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(Object, System.ComponentModel.PropertyChangedEventArgs)
  name.vb: OnPropertyChanged(Object, PropertyChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnDataChanged(UFDataChangedEventArgs)
  nameWithType: UFModel.OnDataChanged(UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnDataChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnDataChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  name: UpdateTrackedProperties()
  nameWithType: UFModel.UpdateTrackedProperties()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  name: AddValidator(string, IUFValidateValue)
  nameWithType: UFModel.AddValidator(string, IUFValidateValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  name.vb: AddValidator(String, IUFValidateValue)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  name: AddValidator(string, IUFValidateProperty)
  nameWithType: UFModel.AddValidator(string, IUFValidateProperty)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateProperty)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  name.vb: AddValidator(String, IUFValidateProperty)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1({T}@,{T},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  name: Set(object, string)
  nameWithType: UFModel.Set(object, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Set(object, string)
  nameWithType.vb: UFModel.Set(Object, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Set(Object, String)
  name.vb: Set(Object, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1({T},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{{T}},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  name: HasOption(Option)
  nameWithType: UFModel.HasOption(UFModel.Option)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
    name: HasOption
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
    name: HasOption
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  name: LogNewValue(string, object)
  nameWithType: UFModel.LogNewValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(string, object)
  nameWithType.vb: UFModel.LogNewValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(String, Object)
  name.vb: LogNewValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
    name: LogNewValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
    name: LogNewValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Storage
  commentId: N:UltraForce.Library.NetStandard.Storage
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Storage
  nameWithType: UltraForce.Library.NetStandard.Storage
  fullName: UltraForce.Library.NetStandard.Storage
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.#ctor
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2__ctor_UltraForce_Library_NetStandard_Models_UFModel_Option___
  name: UFModelDictionary
  nameWithType: UFModelDictionary<TKey, TValue>.UFModelDictionary
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.UFModelDictionary
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).New
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).New
  name.vb: New
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  name: Option[]
  nameWithType: UFModel.Option[]
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  nameWithType.vb: UFModel.Option()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Option()
  name.vb: Option()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ComponentModel.DefaultValueAttribute
  commentId: T:System.ComponentModel.DefaultValueAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.defaultvalueattribute
  name: DefaultValueAttribute
  nameWithType: DefaultValueAttribute
  fullName: System.ComponentModel.DefaultValueAttribute
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  name: Clear(bool)
  nameWithType: UFModel.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear(bool)
  nameWithType.vb: UFModel.Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Clear(Boolean)
  name.vb: Clear(Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Clear
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Clear_System_Boolean_
  name: Clear
  nameWithType: UFModelDictionary<TKey, TValue>.Clear
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Clear
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Clear
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Clear
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  name: Lock()
  nameWithType: IUFLockable.Lock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Lock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  name: Lock()
  nameWithType: UFModel.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Lock
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Lock
  name: Lock
  nameWithType: UFModelDictionary<TKey, TValue>.Lock
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Lock
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Lock
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Lock
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  name: Unlock()
  nameWithType: IUFLockable.Unlock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  name: Unlock()
  nameWithType: UFModel.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Unlock
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Unlock
  name: Unlock
  nameWithType: UFModelDictionary<TKey, TValue>.Unlock
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Unlock
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Unlock
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Unlock
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: UFModel.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveToStorage
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage
  nameWithType: UFModelDictionary<TKey, TValue>.SaveToStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.SaveToStorage
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).SaveToStorage
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).SaveToStorage
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: UFModel.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.LoadFromStorage
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage
  nameWithType: UFModelDictionary<TKey, TValue>.LoadFromStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.LoadFromStorage
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).LoadFromStorage
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).LoadFromStorage
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  name: SaveJson(StringBuilder)
  nameWithType: UFModel.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.SaveJson
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_SaveJson_System_Text_StringBuilder_
  name: SaveJson
  nameWithType: UFModelDictionary<TKey, TValue>.SaveJson
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.SaveJson
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).SaveJson
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).SaveJson
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.ContainsKey
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: UFModelDictionary<TKey, TValue>.ContainsKey
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).ContainsKey
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).ContainsKey
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Add
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Add__0__1_
  name: Add
  nameWithType: UFModelDictionary<TKey, TValue>.Add
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Add
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Add
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Add
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Remove
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Remove__0_
  name: Remove
  nameWithType: UFModelDictionary<TKey, TValue>.Remove
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Remove
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Remove
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Remove
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.TryGetValue
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: UFModelDictionary<TKey, TValue>.TryGetValue
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).TryGetValue
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Item
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Item__0_
  name: this
  nameWithType: UFModelDictionary<TKey, TValue>.this
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.this
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).this[]
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Keys
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Keys
  name: Keys
  nameWithType: UFModelDictionary<TKey, TValue>.Keys
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Keys
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Keys
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.ICollection{{TKey}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  nameWithType.vb: ICollection(Of TKey)
  fullName.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Values
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Values
  name: Values
  nameWithType: UFModelDictionary<TKey, TValue>.Values
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Values
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Values
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.GetEnumerator
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_GetEnumerator
  name: GetEnumerator
  nameWithType: UFModelDictionary<TKey, TValue>.GetEnumerator
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).GetEnumerator
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Contains
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Contains_System_Collections_Generic_KeyValuePair__0__1__
  name: Contains
  nameWithType: UFModelDictionary<TKey, TValue>.Contains
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Contains
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Contains
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Array
  commentId: T:System.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.CopyTo
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_CopyTo_System_Collections_Generic_KeyValuePair__0__1____System_Int32_
  name: CopyTo
  nameWithType: UFModelDictionary<TKey, TValue>.CopyTo
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.CopyTo
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).CopyTo
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>[]
  nameWithType: KeyValuePair<TKey, TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  nameWithType.vb: KeyValuePair(Of TKey, TValue)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  name.vb: KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.Count
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_Count
  name: Count
  nameWithType: UFModelDictionary<TKey, TValue>.Count
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.Count
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).Count
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelDictionary`2.IsReadOnly
  href: UltraForce.Library.NetStandard.Models.UFModelDictionary-2.html#UltraForce_Library_NetStandard_Models_UFModelDictionary_2_IsReadOnly
  name: IsReadOnly
  nameWithType: UFModelDictionary<TKey, TValue>.IsReadOnly
  fullName: UltraForce.Library.NetStandard.Models.UFModelDictionary<TKey, TValue>.IsReadOnly
  nameWithType.vb: UFModelDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelDictionary(Of TKey, TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
