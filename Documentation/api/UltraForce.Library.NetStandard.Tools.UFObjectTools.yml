### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools
  commentId: T:UltraForce.Library.NetStandard.Tools.UFObjectTools
  id: UFObjectTools
  parent: UltraForce.Library.NetStandard.Tools
  children:
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual(System.Object,System.Object)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Collections.Generic.ICollection{System.String},System.Boolean)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Collections.Generic.ICollection{System.String},System.Boolean)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner(System.Object,System.String,System.Char)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName(System.String,System.Char)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue(System.Object,System.String)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue(System.Object,System.String,System.Char)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements``2
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue``1(System.Nullable{``0},``0)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue(System.Object,System.String,System.Object)
  - UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap``1(``0@,``0@)
  langs:
  - csharp
  - vb
  name: UFObjectTools
  nameWithType: UFObjectTools
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools
  type: Class
  source:
    id: UFObjectTools
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 39
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: <xref href="System.Object" data-throw-if-not-resolved="false"></xref> related support methods.
  example: []
  syntax:
    content: public static class UFObjectTools
    content.vb: Public Module UFObjectTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue``1(System.Nullable{``0},``0)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue``1(System.Nullable{``0},``0)
  id: SelectValue``1(System.Nullable{``0},``0)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: SelectValue<T>(T?, T)
  nameWithType: UFObjectTools.SelectValue<T>(T?, T)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue<T>(T?, T)
  type: Method
  source:
    id: SelectValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 51
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Checks if a nullable type is null, if so return a default value else 

    return the value converted to the underlying type.
  example: []
  syntax:
    content: 'public static T SelectValue<T>(T? aValue, T aDefault) where T : struct'
    parameters:
    - id: aValue
      type: System.Nullable{{T}}
      description: value to check
    - id: aDefault
      type: '{T}'
      description: default value to use if aValue is null
    typeParameters:
    - id: T
      description: type to return
    return:
      type: '{T}'
      description: aValue converted to underlying type or aDefault if aValue is <code>null</code>
    content.vb: Public Shared Function SelectValue(Of T As Structure)(aValue As T?, aDefault As T) As T
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue*
  nameWithType.vb: UFObjectTools.SelectValue(Of T)(T?, T)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue(Of T)(T?, T)
  name.vb: SelectValue(Of T)(T?, T)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner(System.Object,System.String,System.Char)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner(System.Object,System.String,System.Char)
  id: GetOwner(System.Object,System.String,System.Char)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: GetOwner(object, string, char)
  nameWithType: UFObjectTools.GetOwner(object, string, char)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner(object, string, char)
  type: Method
  source:
    id: GetOwner
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 63
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets the owning object of a property using a path specification.
  example: []
  syntax:
    content: public static object? GetOwner(object aRoot, string aPath, char aSeparator = '.')
    parameters:
    - id: aRoot
      type: System.Object
      description: Root object to start at
    - id: aPath
      type: System.String
      description: Property names separated by aSeparator
    - id: aSeparator
      type: System.Char
      description: Separator character to use (default is '.')
    return:
      type: System.Object
      description: owning object or null if none could be found
    content.vb: Public Shared Function GetOwner(aRoot As Object, aPath As String, aSeparator As Char = "."c) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner*
  nameWithType.vb: UFObjectTools.GetOwner(Object, String, Char)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner(Object, String, Char)
  name.vb: GetOwner(Object, String, Char)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue(System.Object,System.String,System.Char)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue(System.Object,System.String,System.Char)
  id: GetValue(System.Object,System.String,System.Char)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: GetValue(object, string, char)
  nameWithType: UFObjectTools.GetValue(object, string, char)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue(object, string, char)
  type: Method
  source:
    id: GetValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 76
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets the property value using a path specification.
  example: []
  syntax:
    content: public static object? GetValue(object aRoot, string aPath, char aSeparator = '.')
    parameters:
    - id: aRoot
      type: System.Object
      description: Root object to start at
    - id: aPath
      type: System.String
      description: Property names separated by aSeparator
    - id: aSeparator
      type: System.Char
      description: Separator character to use (default is '.')
    return:
      type: System.Object
      description: value or null if none could be found
    content.vb: Public Shared Function GetValue(aRoot As Object, aPath As String, aSeparator As Char = "."c) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue*
  nameWithType.vb: UFObjectTools.GetValue(Object, String, Char)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue(Object, String, Char)
  name.vb: GetValue(Object, String, Char)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName(System.String,System.Char)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName(System.String,System.Char)
  id: GetPropertyName(System.String,System.Char)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: GetPropertyName(string, char)
  nameWithType: UFObjectTools.GetPropertyName(string, char)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName(string, char)
  type: Method
  source:
    id: GetPropertyName
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 88
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Gets the property name at the end of a path specification.
  example: []
  syntax:
    content: public static string GetPropertyName(string aPath, char aSeparator = '.')
    parameters:
    - id: aPath
      type: System.String
      description: Property names separated by aSeparator
    - id: aSeparator
      type: System.Char
      description: Separator character to use (default is '.')
    return:
      type: System.String
      description: Value of last part in the path
    content.vb: Public Shared Function GetPropertyName(aPath As String, aSeparator As Char = "."c) As String
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName*
  nameWithType.vb: UFObjectTools.GetPropertyName(String, Char)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName(String, Char)
  name.vb: GetPropertyName(String, Char)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual(System.Object,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual(System.Object,System.Object)
  id: AreEqual(System.Object,System.Object)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: AreEqual(object?, object?)
  nameWithType: UFObjectTools.AreEqual(object?, object?)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual(object?, object?)
  type: Method
  source:
    id: AreEqual
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 104
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Checks if two objects are equal. The method checks for <code>null</code> values and then

    uses <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref> to check for equality.
  example: []
  syntax:
    content: public static bool AreEqual(object? anObject0, object? anObject1)
    parameters:
    - id: anObject0
      type: System.Object
      description: First object to check
    - id: anObject1
      type: System.Object
      description: Second object to check
    return:
      type: System.Boolean
      description: >-
        <code>True</code> if both objects are <code>null</code> or <code>Equals</code> returns

        <code>true</code>.
    content.vb: Public Shared Function AreEqual(anObject0 As Object, anObject1 As Object) As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual*
  nameWithType.vb: UFObjectTools.AreEqual(Object, Object)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual(Object, Object)
  name.vb: AreEqual(Object, Object)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements``2
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements``2
  id: Implements``2
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: Implements<TType, TInterface>()
  nameWithType: UFObjectTools.Implements<TType, TInterface>()
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements<TType, TInterface>()
  type: Method
  source:
    id: Implements
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 115
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Checks if a type implements an interface.
  example: []
  syntax:
    content: public static bool Implements<TType, TInterface>()
    typeParameters:
    - id: TType
      description: Type to check
    - id: TInterface
      description: Interface to check
    return:
      type: System.Boolean
      description: <code>True</code> if TType implements TInterface
    content.vb: Public Shared Function [Implements](Of TType, TInterface)() As Boolean
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements*
  nameWithType.vb: UFObjectTools.Implements(Of TType, TInterface)()
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements(Of TType, TInterface)()
  name.vb: Implements(Of TType, TInterface)()
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap``1(``0@,``0@)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap``1(``0@,``0@)
  id: Swap``1(``0@,``0@)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: Swap<T>(ref T, ref T)
  nameWithType: UFObjectTools.Swap<T>(ref T, ref T)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap<T>(ref T, ref T)
  type: Method
  source:
    id: Swap
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 128
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Swaps two object values.
  example: []
  syntax:
    content: public static void Swap<T>(ref T anObject0, ref T anObject1)
    parameters:
    - id: anObject0
      type: '{T}'
      description: First object to swap
    - id: anObject1
      type: '{T}'
      description: Second object to swap
    typeParameters:
    - id: T
      description: Type of objects
    content.vb: Public Shared Sub Swap(Of T)(anObject0 As T, anObject1 As T)
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap*
  nameWithType.vb: UFObjectTools.Swap(Of T)(T, T)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap(Of T)(T, T)
  name.vb: Swap(Of T)(T, T)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue(System.Object,System.String)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: GetPropertyValue(object, string)
  nameWithType: UFObjectTools.GetPropertyValue(object, string)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue(object, string)
  type: Method
  source:
    id: GetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 145
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Gets the property value of an object.

    <p>

    The method checks if the object implements <xref href="UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty" data-throw-if-not-resolved="false"></xref>, if it does the method will use

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)" data-throw-if-not-resolved="false"></xref> to obtain the value. Else the method uses reflection to

    get the value.

    </p>
  example: []
  syntax:
    content: public static object GetPropertyValue(object anObject, string aPropertyName)
    parameters:
    - id: anObject
      type: System.Object
      description: Object to get the property value from
    - id: aPropertyName
      type: System.String
      description: Name of the property
    return:
      type: System.Object
      description: Value of the property
    content.vb: Public Shared Function GetPropertyValue(anObject As Object, aPropertyName As String) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if no property with the specified name could not be found
  nameWithType.vb: UFObjectTools.GetPropertyValue(Object, String)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue(Object, String)
  name.vb: GetPropertyValue(Object, String)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue(System.Object,System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue(System.Object,System.String,System.Object)
  id: SetPropertyValue(System.Object,System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: SetPropertyValue(object, string, object)
  nameWithType: UFObjectTools.SetPropertyValue(object, string, object)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue(object, string, object)
  type: Method
  source:
    id: SetPropertyValue
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 172
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Sets the property value of an object.

    <p>

    The method checks if the object implements <xref href="UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty" data-throw-if-not-resolved="false"></xref>, if it does the method will use

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> to set the value. Else the method uses reflection to

    set the value.

    </p>
  example: []
  syntax:
    content: public static void SetPropertyValue(object anObject, string aPropertyName, object aValue)
    parameters:
    - id: anObject
      type: System.Object
      description: Object to set the property value at
    - id: aPropertyName
      type: System.String
      description: Name of the property
    - id: aValue
      type: System.Object
      description: Value to set
    content.vb: Public Shared Sub SetPropertyValue(anObject As Object, aPropertyName As String, aValue As Object)
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if no property with the specified name could not be found
  nameWithType.vb: UFObjectTools.SetPropertyValue(Object, String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue(Object, String, Object)
  name.vb: SetPropertyValue(Object, String, Object)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0)
  id: CopyProperties``1(``0,``0)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties<T>(T, T)
  nameWithType: UFObjectTools.CopyProperties<T>(T, T)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties<T>(T, T)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 194
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Copies all the public properties of a source to a target.
  example: []
  syntax:
    content: 'public static T CopyProperties<T>(T aSource, T aTarget) where T : notnull'
    parameters:
    - id: aSource
      type: '{T}'
      description: source to copy from
    - id: aTarget
      type: '{T}'
      description: target to copy to
    typeParameters:
    - id: T
      description: the type of object
    return:
      type: '{T}'
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(Of T)(aSource As T, aTarget As T) As T
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Of T)(T, T)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Of T)(T, T)
  name.vb: CopyProperties(Of T)(T, T)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  id: CopyProperties``1(``0,``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties<T>(T, T, Func<PropertyInfo, bool>)
  nameWithType: UFObjectTools.CopyProperties<T>(T, T, Func<PropertyInfo, bool>)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties<T>(T, T, System.Func<System.Reflection.PropertyInfo, bool>)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 208
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Copies certain public properties of a source to a target.
  example: []
  syntax:
    content: 'public static T CopyProperties<T>(T aSource, T aTarget, Func<PropertyInfo, bool> anIsValid) where T : notnull'
    parameters:
    - id: aSource
      type: '{T}'
      description: Source to copy from
    - id: aTarget
      type: '{T}'
      description: target to copy to
    - id: anIsValid
      type: System.Func{System.Reflection.PropertyInfo,System.Boolean}
      description: a function that should return true if the property should be copied
    typeParameters:
    - id: T
      description: the type of object
    return:
      type: '{T}'
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(Of T)(aSource As T, aTarget As T, anIsValid As Func(Of PropertyInfo, Boolean)) As T
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Of T)(T, T, System.Func(Of System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyProperties(Of T)(T, T, Func(Of PropertyInfo, Boolean))
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Collections.Generic.ICollection{System.String},System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties``1(``0,``0,System.Collections.Generic.ICollection{System.String},System.Boolean)
  id: CopyProperties``1(``0,``0,System.Collections.Generic.ICollection{System.String},System.Boolean)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties<T>(T, T, ICollection<string>, bool)
  nameWithType: UFObjectTools.CopyProperties<T>(T, T, ICollection<string>, bool)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties<T>(T, T, System.Collections.Generic.ICollection<string>, bool)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 223
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Copies all the public properties of a source to a target.
  example: []
  syntax:
    content: 'public static T CopyProperties<T>(T aSource, T aTarget, ICollection<string> aPropertyNames, bool aSkip = false) where T : notnull'
    parameters:
    - id: aSource
      type: '{T}'
      description: source to copy from
    - id: aTarget
      type: '{T}'
      description: target to copy to
    - id: aPropertyNames
      type: System.Collections.Generic.ICollection{System.String}
      description: Names of properties to copy or skip
    - id: aSkip
      type: System.Boolean
      description: When true then skip the properties in aPropertyNames
    typeParameters:
    - id: T
      description: the type of object
    return:
      type: '{T}'
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(Of T)(aSource As T, aTarget As T, aPropertyNames As ICollection(Of String), aSkip As Boolean = False) As T
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Of T)(T, T, ICollection(Of String), Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Of T)(T, T, System.Collections.Generic.ICollection(Of String), Boolean)
  name.vb: CopyProperties(Of T)(T, T, ICollection(Of String), Boolean)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type)
  id: CopyProperties(System.Object,System.Object,System.Type)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties(object, object, Type)
  nameWithType: UFObjectTools.CopyProperties(object, object, Type)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(object, object, System.Type)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 238
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Copies all the public properties of a certain type of from source to a target.
  example: []
  syntax:
    content: public static object CopyProperties(object aSource, object aTarget, Type aType)
    parameters:
    - id: aSource
      type: System.Object
      description: source to copy from
    - id: aTarget
      type: System.Object
      description: target to copy to
    - id: aType
      type: System.Type
      description: the type to get property info from
    return:
      type: System.Object
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(aSource As Object, aTarget As Object, aType As Type) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Object, Object, Type)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Object, Object, System.Type)
  name.vb: CopyProperties(Object, Object, Type)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Collections.Generic.ICollection{System.String},System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Collections.Generic.ICollection{System.String},System.Boolean)
  id: CopyProperties(System.Object,System.Object,System.Type,System.Collections.Generic.ICollection{System.String},System.Boolean)
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties(object, object, Type, ICollection<string>, bool)
  nameWithType: UFObjectTools.CopyProperties(object, object, Type, ICollection<string>, bool)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(object, object, System.Type, System.Collections.Generic.ICollection<string>, bool)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 252
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: Copies all the public properties of a certain type of from source to a target.
  example: []
  syntax:
    content: public static object CopyProperties(object aSource, object aTarget, Type aType, ICollection<string> aPropertyNames, bool aSkip = false)
    parameters:
    - id: aSource
      type: System.Object
      description: source to copy from
    - id: aTarget
      type: System.Object
      description: target to copy to
    - id: aType
      type: System.Type
      description: the type to get property info from
    - id: aPropertyNames
      type: System.Collections.Generic.ICollection{System.String}
      description: Names of properties to copy or skip
    - id: aSkip
      type: System.Boolean
      description: When true then skip the properties in aPropertyNames
    return:
      type: System.Object
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(aSource As Object, aTarget As Object, aType As Type, aPropertyNames As ICollection(Of String), aSkip As Boolean = False) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Object, Object, Type, ICollection(Of String), Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Object, Object, System.Type, System.Collections.Generic.ICollection(Of String), Boolean)
  name.vb: CopyProperties(Object, Object, Type, ICollection(Of String), Boolean)
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  commentId: M:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(System.Object,System.Object,System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  id: CopyProperties(System.Object,System.Object,System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean})
  parent: UltraForce.Library.NetStandard.Tools.UFObjectTools
  langs:
  - csharp
  - vb
  name: CopyProperties(object, object, Type, Func<PropertyInfo, bool>)
  nameWithType: UFObjectTools.CopyProperties(object, object, Type, Func<PropertyInfo, bool>)
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(object, object, System.Type, System.Func<System.Reflection.PropertyInfo, bool>)
  type: Method
  source:
    id: CopyProperties
    path: D:\projects\ultraforce.com\csharp\NuGetPackages\UltraForce.Library.NetStandard\UltraForce.Library.NetStandard\Tools\UFObjectTools.cs
    startLine: 274
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Tools
  summary: >-
    Copies certain public properties of a certain type from a source to a target.

    <p>

    If the type of either aSource or aTarget is not the same as aType, the method will only copy the property

    if both aSource and aTarget have a property with the same name. 

    </p>
  example: []
  syntax:
    content: public static object CopyProperties(object aSource, object aTarget, Type aType, Func<PropertyInfo, bool> anIsValid)
    parameters:
    - id: aSource
      type: System.Object
      description: source to copy from
    - id: aTarget
      type: System.Object
      description: target to copy to
    - id: aType
      type: System.Type
      description: the type to get property info from
    - id: anIsValid
      type: System.Func{System.Reflection.PropertyInfo,System.Boolean}
      description: a function that should return true if the property should be copied
    return:
      type: System.Object
      description: the value of aTarget
    content.vb: Public Shared Function CopyProperties(aSource As Object, aTarget As Object, aType As Type, anIsValid As Func(Of PropertyInfo, Boolean)) As Object
  overload: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  nameWithType.vb: UFObjectTools.CopyProperties(Object, Object, Type, Func(Of PropertyInfo, Boolean))
  fullName.vb: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties(Object, Object, System.Type, System.Func(Of System.Reflection.PropertyInfo, Boolean))
  name.vb: CopyProperties(Object, Object, Type, Func(Of PropertyInfo, Boolean))
references:
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Tools
  commentId: N:UltraForce.Library.NetStandard.Tools
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Tools
  nameWithType: UltraForce.Library.NetStandard.Tools
  fullName: UltraForce.Library.NetStandard.Tools
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Tools
    name: Tools
    href: UltraForce.Library.NetStandard.Tools.html
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_SelectValue__1_System_Nullable___0____0_
  name: SelectValue
  nameWithType: UFObjectTools.SelectValue
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.SelectValue
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: T?
  nameWithType: T?
  fullName: T?
  spec.csharp:
  - name: T
  - name: '?'
  spec.vb:
  - name: T
  - name: '?'
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_GetOwner_System_Object_System_String_System_Char_
  name: GetOwner
  nameWithType: UFObjectTools.GetOwner
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetOwner
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_GetValue_System_Object_System_String_System_Char_
  name: GetValue
  nameWithType: UFObjectTools.GetValue
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetValue
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_GetPropertyName_System_String_System_Char_
  name: GetPropertyName
  nameWithType: UFObjectTools.GetPropertyName
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyName
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_AreEqual_System_Object_System_Object_
  name: AreEqual
  nameWithType: UFObjectTools.AreEqual
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.AreEqual
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_Implements__2
  name: Implements
  nameWithType: UFObjectTools.Implements
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.Implements
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_Swap__1___0____0__
  name: Swap
  nameWithType: UFObjectTools.Swap
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.Swap
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html
  name: IUFAccessProperty
  nameWithType: IUFAccessProperty
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  name: GetPropertyValue(string)
  nameWithType: IUFAccessProperty.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(string)
  nameWithType.vb: IUFAccessProperty.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_GetPropertyValue_System_Object_System_String_
  name: GetPropertyValue
  nameWithType: UFObjectTools.GetPropertyValue
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.GetPropertyValue
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  isExternal: true
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  name: SetPropertyValue(string, object)
  nameWithType: IUFAccessProperty.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(string, object)
  nameWithType.vb: IUFAccessProperty.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html#UltraForce_Library_NetStandard_Interfaces_IUFAccessProperty_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_SetPropertyValue_System_Object_System_String_System_Object_
  name: SetPropertyValue
  nameWithType: UFObjectTools.SetPropertyValue
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.SetPropertyValue
- uid: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties*
  commentId: Overload:UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties
  href: UltraForce.Library.NetStandard.Tools.UFObjectTools.html#UltraForce_Library_NetStandard_Tools_UFObjectTools_CopyProperties__1___0___0_
  name: CopyProperties
  nameWithType: UFObjectTools.CopyProperties
  fullName: UltraForce.Library.NetStandard.Tools.UFObjectTools.CopyProperties
- uid: System.Func{System.Reflection.PropertyInfo,System.Boolean}
  commentId: T:System.Func{System.Reflection.PropertyInfo,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<PropertyInfo, bool>
  nameWithType: Func<PropertyInfo, bool>
  fullName: System.Func<System.Reflection.PropertyInfo, bool>
  nameWithType.vb: Func(Of PropertyInfo, Boolean)
  fullName.vb: System.Func(Of System.Reflection.PropertyInfo, Boolean)
  name.vb: Func(Of PropertyInfo, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
