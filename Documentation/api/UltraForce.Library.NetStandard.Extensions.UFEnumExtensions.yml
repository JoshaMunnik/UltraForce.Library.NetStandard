### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  commentId: T:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  id: UFEnumExtensions
  parent: UltraForce.Library.NetStandard.Extensions
  children:
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute``1(System.Enum)
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription(System.Enum)
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName(System.Enum)
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription(System.Enum)
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next``1(``0)
  - UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous``1(``0)
  langs:
  - csharp
  - vb
  name: UFEnumExtensions
  nameWithType: UFEnumExtensions
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFEnumExtensions
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 41
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: Defines extension method for use with <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public static class UFEnumExtensions
    content.vb: Public Module UFEnumExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription(System.Enum)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription(System.Enum)
  id: GetDescription(System.Enum)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: GetDescription(Enum)
  nameWithType: UFEnumExtensions.GetDescription(Enum)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription(System.Enum)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetDescription
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 80
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: >-
    Get the value of a <xref href="UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute" data-throw-if-not-resolved="false"></xref> used with an enum value.

    If no value is found, the value of the <xref href="System.ComponentModel.DescriptionAttribute" data-throw-if-not-resolved="false"></xref> is

    used. If that one also cannot be found, the enum value is converted to a string using

    <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Based on code from: 

    http://stackoverflow.com/questions/18912697/system-componentmodel-descriptionattribute-in.NetStandard1-class-library

    <p>

    Usage:

    <pre><code class="lang-csharp">... 

    [UFDescription("Some text")]

    FirstEnumValue

    ...

    // returns "Some text"

    FirstEnumValue.GetDescription()

    ... 

    [Description("other text")]

    SecondEnumValue

    ... 

    // returns "Other text"

    SecondEnumValue.GetDescription()

    ... 

    ThirdEnumValue

    ... 

    // returns "ThirdEnumValue" 

    ThirdEnumValue.GetDescription()</code></pre>

    </p>
  example: []
  syntax:
    content: public static string GetDescription(this Enum anEnumerationValue)
    parameters:
    - id: anEnumerationValue
      type: System.Enum
      description: Enumeration value.
    return:
      type: System.String
      description: >-
        The value of the description attribute or enum value converted to 

        string.
    content.vb: Public Shared Function GetDescription(anEnumerationValue As [Enum]) As String
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription*
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription(System.Enum)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription(System.Enum)
  id: GetShortDescription(System.Enum)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: GetShortDescription(Enum)
  nameWithType: UFEnumExtensions.GetShortDescription(Enum)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription(System.Enum)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetShortDescription
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 96
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: Get the value of a <xref href="UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.ShortDescription" data-throw-if-not-resolved="false"></xref> used with an enum value.
  example: []
  syntax:
    content: public static string GetShortDescription(this Enum anEnumerationValue)
    parameters:
    - id: anEnumerationValue
      type: System.Enum
      description: Enumeration value.
    return:
      type: System.String
      description: The short description value of the description attribute or enum value converted to string.
    content.vb: Public Shared Function GetShortDescription(anEnumerationValue As [Enum]) As String
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription*
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName(System.Enum)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName(System.Enum)
  id: GetName(System.Enum)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: GetName(Enum)
  nameWithType: UFEnumExtensions.GetName(Enum)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName(System.Enum)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetName
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 111
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: Get the value of a <xref href="UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.ShortDescription" data-throw-if-not-resolved="false"></xref> used with an enum value.
  example: []
  syntax:
    content: public static string GetName(this Enum anEnumerationValue)
    parameters:
    - id: anEnumerationValue
      type: System.Enum
      description: Enumeration value.
    return:
      type: System.String
      description: The short description value of the description attribute or enum value converted to string.
    content.vb: Public Shared Function GetName(anEnumerationValue As [Enum]) As String
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName*
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next``1(``0)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next``1(``0)
  id: Next``1(``0)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: Next<T>(T)
  nameWithType: UFEnumExtensions.Next<T>(T)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next<T>(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Next
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 130
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: >-
    Get the next value in an enum; if the value is the last value in 

    the enum, the first value is returned.
  remarks: >-
    Source: 

    http://stackoverflow.com/questions/642542/how-to-get-next-or-previous-enum-value-in-c-sharp
  example: []
  syntax:
    content: 'public static T Next<T>(this T aSource) where T : struct, Enum'
    parameters:
    - id: aSource
      type: '{T}'
      description: Source.
    typeParameters:
    - id: T
      description: The 1st type parameter.
    return:
      type: '{T}'
      description: The next value (or first value)
    content.vb: Public Shared Function [Next](Of T As {Structure, [Enum]})(aSource As T) As T
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next*
  nameWithType.vb: UFEnumExtensions.Next(Of T)(T)
  fullName.vb: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next(Of T)(T)
  name.vb: Next(Of T)(T)
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous``1(``0)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous``1(``0)
  id: Previous``1(``0)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: Previous<T>(T)
  nameWithType: UFEnumExtensions.Previous<T>(T)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous<T>(T)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Previous
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 148
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: >-
    Get the next value in an enum; if the value is the last value in 

    the enum, the first value is returned.
  remarks: >-
    Source: 

    http://stackoverflow.com/questions/642542/how-to-get-next-or-previous-enum-value-in-c-sharp
  example: []
  syntax:
    content: 'public static T Previous<T>(this T aSource) where T : struct, Enum'
    parameters:
    - id: aSource
      type: '{T}'
      description: Source.
    typeParameters:
    - id: T
      description: The 1st type parameter.
    return:
      type: '{T}'
      description: The next value (or first value)
    content.vb: Public Shared Function Previous(Of T As {Structure, [Enum]})(aSource As T) As T
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous*
  nameWithType.vb: UFEnumExtensions.Previous(Of T)(T)
  fullName.vb: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous(Of T)(T)
  name.vb: Previous(Of T)(T)
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute``1(System.Enum)
  commentId: M:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute``1(System.Enum)
  id: GetAttribute``1(System.Enum)
  isExtensionMethod: true
  parent: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions
  langs:
  - csharp
  - vb
  name: GetAttribute<T>(Enum)
  nameWithType: UFEnumExtensions.GetAttribute<T>(Enum)
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute<T>(System.Enum)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetAttribute
    path: ../UltraForce.Library.NetStandard/Extensions/UFEnumExtensions.cs
    startLine: 161
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Extensions
  summary: Gets an attribute type for an enum value.
  example: []
  syntax:
    content: 'public static T? GetAttribute<T>(this Enum anEnumerationValue) where T : class'
    parameters:
    - id: anEnumerationValue
      type: System.Enum
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function GetAttribute(Of T As Class)(anEnumerationValue As [Enum]) As T
  overload: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute*
  nameWithType.vb: UFEnumExtensions.GetAttribute(Of T)(Enum)
  fullName.vb: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute(Of T)(System.Enum)
  name.vb: GetAttribute(Of T)(Enum)
references:
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.enum
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: UltraForce.Library.NetStandard.Extensions
  commentId: N:UltraForce.Library.NetStandard.Extensions
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Extensions
  nameWithType: UltraForce.Library.NetStandard.Extensions
  fullName: UltraForce.Library.NetStandard.Extensions
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Extensions
    name: Extensions
    href: UltraForce.Library.NetStandard.Extensions.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Extensions
    name: Extensions
    href: UltraForce.Library.NetStandard.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute
  commentId: T:UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute
  href: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.html
  name: UFDescriptionAttribute
  nameWithType: UFDescriptionAttribute
  fullName: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute
- uid: System.ComponentModel.DescriptionAttribute
  commentId: T:System.ComponentModel.DescriptionAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.descriptionattribute
  name: DescriptionAttribute
  nameWithType: DescriptionAttribute
  fullName: System.ComponentModel.DescriptionAttribute
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_GetDescription_System_Enum_
  name: GetDescription
  nameWithType: UFEnumExtensions.GetDescription
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.ShortDescription
  commentId: P:UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.ShortDescription
  href: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.html#UltraForce_Library_NetStandard_Annotations_UFDescriptionAttribute_ShortDescription
  name: ShortDescription
  nameWithType: UFDescriptionAttribute.ShortDescription
  fullName: UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute.ShortDescription
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_GetShortDescription_System_Enum_
  name: GetShortDescription
  nameWithType: UFEnumExtensions.GetShortDescription
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetShortDescription
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_GetName_System_Enum_
  name: GetName
  nameWithType: UFEnumExtensions.GetName
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetName
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_Next__1___0_
  name: Next
  nameWithType: UFEnumExtensions.Next
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Next
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_Previous__1___0_
  name: Previous
  nameWithType: UFEnumExtensions.Previous
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.Previous
- uid: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute*
  commentId: Overload:UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute
  href: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.html#UltraForce_Library_NetStandard_Extensions_UFEnumExtensions_GetAttribute__1_System_Enum_
  name: GetAttribute
  nameWithType: UFEnumExtensions.GetAttribute
  fullName: UltraForce.Library.NetStandard.Extensions.UFEnumExtensions.GetAttribute
