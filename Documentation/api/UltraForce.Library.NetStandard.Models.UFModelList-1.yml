### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1
  commentId: T:UltraForce.Library.NetStandard.Models.UFModelList`1
  id: UFModelList`1
  parent: UltraForce.Library.NetStandard.Models
  children:
  - UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Collections.Generic.IEnumerable{`0},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Add(`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Clear(System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Contains(`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[])
  - UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[],System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Count
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Find(System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll(System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast(System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Predicate{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach(System.Action{`0})
  - UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator
  - UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange(System.Int32,System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32,System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Insert(System.Int32,`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Item(System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Remove(`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt(System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues
  - UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson(System.Text.StringBuilder)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle(System.Int32,System.Int32)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray
  - UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock
  - UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded(System.Int32,`0,System.Boolean,System.Boolean,`0)
  - UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved(System.Int32,`0,System.Boolean)
  langs:
  - csharp
  - vb
  name: UFModelList<TValue>
  nameWithType: UFModelList<TValue>
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>
  type: Class
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: UFModelList
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 71
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Implements a generic <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> adding support for certain

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref> values and implementing various 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel" data-throw-if-not-resolved="false"></xref> methods.
  remarks: >-
    <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> will fire a 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref> event whenever the contents of the 

    list changes.

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> option is set and TValue 

    implements the <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref> interface, <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601.Lock" data-throw-if-not-resolved="false"></xref>

    will also lock all items within the list.

    </p>

    <p>

    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> option is set and 

    TValue implements <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref>,  

    <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> will install change listeners with 

    every item and will fire <xref href="UltraForce.Library.NetStandard.Models.UFModel.DataChanged" data-throw-if-not-resolved="false"></xref>, 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.ChildChanged" data-throw-if-not-resolved="false"></xref> and 

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged" data-throw-if-not-resolved="false"></xref> events if an item changes. 

    </p>

    <p>

    <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> will make sure to install only one 

    listener, even if the same instance is added multiple times.

    </p>
  example: []
  syntax:
    content: 'public class UFModelList<TValue> : UFModel, IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue, IList<TValue>, ICollection<TValue>, IEnumerable<TValue>, IEnumerable'
    typeParameters:
    - id: TValue
    content.vb: Public Class UFModelList(Of TValue) Inherits UFModel Implements IUFStorableObject, IUFJsonExport, IUFLockable, INotifyPropertyChanged, IUFClearable, IUFModel, IUFAccessProperty, IUFNotifyDataChanged, IUFValidatePropertyValue, IList(Of TValue), ICollection(Of TValue), IEnumerable(Of TValue), IEnumerable
  inheritance:
  - System.Object
  - UltraForce.Library.NetStandard.Models.UFModel
  derivedClasses:
  - UltraForce.Library.NetStandard.Models.UFModelObservableList`1
  implements:
  - UltraForce.Library.NetStandard.Storage.IUFStorableObject
  - UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  - UltraForce.Library.NetStandard.Interfaces.IUFLockable
  - System.ComponentModel.INotifyPropertyChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFClearable
  - UltraForce.Library.NetStandard.Models.IUFModel
  - UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  - UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  - UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  - System.Collections.Generic.IList{{TValue}}
  - System.Collections.Generic.ICollection{{TValue}}
  - System.Collections.Generic.IEnumerable{{TValue}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  - UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  - UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.IsValid
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  - UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  - UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  - UltraForce.Library.NetStandard.Models.UFModel.ToString
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  - UltraForce.Library.NetStandard.Models.UFModel.Clear
  - UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  - UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  - UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  - UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  - UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.Changed
  - UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  - UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  - UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  - UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  - UltraForce.Library.NetStandard.Models.UFModel.Assign``1({T}@,{T},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1({T},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{{T}},System.String)
  - UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  - UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: UFModelList(Of TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue)
  name.vb: UFModelList(Of TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: UFModelList(params Option[])
  nameWithType: UFModelList<TValue>.UFModelList(params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.UFModelList(params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 113
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> 

    class.
  example: []
  syntax:
    content: public UFModelList(params UFModel.Option[] anOptions)
    parameters:
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor*
  nameWithType.vb: UFModelList(Of TValue).New(ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).New(ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(System.Int32,UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: UFModelList(int, params Option[])
  nameWithType: UFModelList<TValue>.UFModelList(int, params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.UFModelList(int, params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 136
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the 

    <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UFModelList(int aCapacity, params UFModel.Option[] anOptions)
    parameters:
    - id: aCapacity
      type: System.Int32
      description: Initial list capacity.
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(aCapacity As Integer, ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor*
  nameWithType.vb: UFModelList(Of TValue).New(Integer, ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).New(Integer, ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(Integer, ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Collections.Generic.IEnumerable{`0},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor(System.Collections.Generic.IEnumerable{`0},UltraForce.Library.NetStandard.Models.UFModel.Option[])
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},UltraForce.Library.NetStandard.Models.UFModel.Option[])'
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: UFModelList(IEnumerable<TValue>, params Option[])
  nameWithType: UFModelList<TValue>.UFModelList(IEnumerable<TValue>, params UFModel.Option[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.UFModelList(System.Collections.Generic.IEnumerable<TValue>, params UltraForce.Library.NetStandard.Models.UFModel.Option[])
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: .ctor
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 160
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes a new instance of the 

    <xref href="UltraForce.Library.NetStandard.Models.UFModelList%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UFModelList(IEnumerable<TValue> aCollection, params UFModel.Option[] anOptions)
    parameters:
    - id: aCollection
      type: System.Collections.Generic.IEnumerable{{TValue}}
      description: An initial collection to fill list with
    - id: anOptions
      type: UltraForce.Library.NetStandard.Models.UFModel.Option[]
      description: <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(aCollection As IEnumerable(Of TValue), ParamArray anOptions As UFModel.Option())
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor*
  nameWithType.vb: UFModelList(Of TValue).New(IEnumerable(Of TValue), ParamArray UFModel.Option())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).New(System.Collections.Generic.IEnumerable(Of TValue), ParamArray UltraForce.Library.NetStandard.Models.UFModel.Option())
  name.vb: New(IEnumerable(Of TValue), ParamArray Option())
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: UFModelList<TValue>.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Clear(bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Clear
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 180
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Initializes or clears the properties of the data structure to default values. 

    <p>

    The default implementation sets all the properties that have a <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached to

    the value specified by that attribute. 

    </p><p>

    If the property has no <xref href="System.ComponentModel.DefaultValueAttribute" data-throw-if-not-resolved="false"></xref> attached the method will check if the property

    value has a method named <code>Clear</code> and will call that method if it does.

    </p><p>

    As last step the method will call <xref href="UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties" data-throw-if-not-resolved="false"></xref></p><p>

    Subclasses can override this method to initialize or clear additional properties.

    </p><p>

    If there are properties that implement <xref href="UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged" data-throw-if-not-resolved="false"></xref> and

    <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange" data-throw-if-not-resolved="false"></xref> is used, the clear method should make sure the instances are existing.

    </p><param name="aCallChanged">

    When <code>true</code> call <xref href="UltraForce.Library.NetStandard.Models.UFModel.Changed" data-throw-if-not-resolved="false"></xref>. 

    </param>
  example: []
  syntax:
    content: public override void Clear(bool aCallChanged)
    parameters:
    - id: aCallChanged
      type: System.Boolean
    content.vb: Public Overrides Sub Clear(aCallChanged As Boolean)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Clear*
  nameWithType.vb: UFModelList(Of TValue).Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle
  id: Shuffle
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Shuffle()
  nameWithType: UFModelList<TValue>.Shuffle()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Shuffle()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Shuffle
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 189
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Shuffle the elements inside the list.
  example: []
  syntax:
    content: public void Shuffle()
    content.vb: Public Sub Shuffle()
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle*
  nameWithType.vb: UFModelList(Of TValue).Shuffle()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Shuffle()
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle(System.Int32,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle(System.Int32,System.Int32)
  id: Shuffle(System.Int32,System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Shuffle(int, int)
  nameWithType: UFModelList<TValue>.Shuffle(int, int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Shuffle(int, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Shuffle
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 203
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Shuffle a part of the list.
  example: []
  syntax:
    content: public virtual void Shuffle(int aStart, int aCount)
    parameters:
    - id: aStart
      type: System.Int32
      description: Start index.
    - id: aCount
      type: System.Int32
      description: Number of elements.
    content.vb: Public Overridable Sub Shuffle(aStart As Integer, aCount As Integer)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle*
  nameWithType.vb: UFModelList(Of TValue).Shuffle(Integer, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Shuffle(Integer, Integer)
  name.vb: Shuffle(Integer, Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Find(System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Find(System.Predicate{`0})
  id: Find(System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Find(Predicate<TValue>)
  nameWithType: UFModelList<TValue>.Find(Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Find(System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Find
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 223
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find first value that matches aMatch.
  example: []
  syntax:
    content: public TValue Find(Predicate<TValue> aMatch)
    parameters:
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: '{TValue}'
      description: An instance or null if no match was found
    content.vb: Public Function Find(aMatch As Predicate(Of TValue)) As TValue
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Find*
  nameWithType.vb: UFModelList(Of TValue).Find(Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Find(System.Predicate(Of TValue))
  name.vb: Find(Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast(System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast(System.Predicate{`0})
  id: FindLast(System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindLast(Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindLast(Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLast(System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindLast
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 235
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find last value that matches aMatch.
  example: []
  syntax:
    content: public TValue FindLast(Predicate<TValue> aMatch)
    parameters:
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: '{TValue}'
      description: An instance or null if no match was found
    content.vb: Public Function FindLast(aMatch As Predicate(Of TValue)) As TValue
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast*
  nameWithType.vb: UFModelList(Of TValue).FindLast(Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLast(System.Predicate(Of TValue))
  name.vb: FindLast(Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Predicate{`0})
  id: FindIndex(System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindIndex(Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindIndex(Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindIndex(System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 247
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of first value that matches aMatch.
  example: []
  syntax:
    content: public int FindIndex(Predicate<TValue> aMatch)
    parameters:
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindIndex(aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex*
  nameWithType.vb: UFModelList(Of TValue).FindIndex(Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindIndex(System.Predicate(Of TValue))
  name.vb: FindIndex(Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindIndex(int, Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindIndex(int, Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindIndex(int, System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 262
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of first value that matches aMatch.
  example: []
  syntax:
    content: public int FindIndex(int aStart, Predicate<TValue> aMatch)
    parameters:
    - id: aStart
      type: System.Int32
      description: Index to searching from.
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindIndex(aStart As Integer, aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex*
  nameWithType.vb: UFModelList(Of TValue).FindIndex(Integer, Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindIndex(Integer, System.Predicate(Of TValue))
  name.vb: FindIndex(Integer, Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindIndex(int, int, Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindIndex(int, int, Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindIndex(int, int, System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 280
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of first value that matches aMatch.
  example: []
  syntax:
    content: public int FindIndex(int aStart, int aCount, Predicate<TValue> aMatch)
    parameters:
    - id: aStart
      type: System.Int32
      description: Index to searching from.
    - id: aCount
      type: System.Int32
      description: Max number of values to test.
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindIndex(aStart As Integer, aCount As Integer, aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex*
  nameWithType.vb: UFModelList(Of TValue).FindIndex(Integer, Integer, Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindIndex(Integer, Integer, System.Predicate(Of TValue))
  name.vb: FindIndex(Integer, Integer, Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Predicate{`0})
  id: FindLastIndex(System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindLastIndex(Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindLastIndex(Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLastIndex(System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindLastIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 292
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of last value that matches aMatch.
  example: []
  syntax:
    content: public int FindLastIndex(Predicate<TValue> aMatch)
    parameters:
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindLastIndex(aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex*
  nameWithType.vb: UFModelList(Of TValue).FindLastIndex(Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLastIndex(System.Predicate(Of TValue))
  name.vb: FindLastIndex(Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindLastIndex(int, Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindLastIndex(int, Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLastIndex(int, System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindLastIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 307
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of last value that matches aMatch.
  example: []
  syntax:
    content: public int FindLastIndex(int aStart, Predicate<TValue> aMatch)
    parameters:
    - id: aStart
      type: System.Int32
      description: Index to searching from (backwards, so Index, Index-1, Index-2, etc).
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindLastIndex(aStart As Integer, aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex*
  nameWithType.vb: UFModelList(Of TValue).FindLastIndex(Integer, Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLastIndex(Integer, System.Predicate(Of TValue))
  name.vb: FindLastIndex(Integer, Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindLastIndex(int, int, Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindLastIndex(int, int, Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLastIndex(int, int, System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindLastIndex
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 325
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find index of last value that matches aMatch.
  example: []
  syntax:
    content: public int FindLastIndex(int aStart, int aCount, Predicate<TValue> aMatch)
    parameters:
    - id: aStart
      type: System.Int32
      description: Index to searching from (backwards, so Index, Index-1, Index-2, etc).
    - id: aCount
      type: System.Int32
      description: Max number of values to test.
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Int32
      description: The index or -1 if not found
    content.vb: Public Function FindLastIndex(aStart As Integer, aCount As Integer, aMatch As Predicate(Of TValue)) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex*
  nameWithType.vb: UFModelList(Of TValue).FindLastIndex(Integer, Integer, Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLastIndex(Integer, Integer, System.Predicate(Of TValue))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll(System.Predicate{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll(System.Predicate{`0})
  id: FindAll(System.Predicate{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: FindAll(Predicate<TValue>)
  nameWithType: UFModelList<TValue>.FindAll(Predicate<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindAll(System.Predicate<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: FindAll
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 341
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Find all values that match aMatch.
  example: []
  syntax:
    content: public List<TValue> FindAll(Predicate<TValue> aMatch)
    parameters:
    - id: aMatch
      type: System.Predicate{{TValue}}
      description: Match predicate
    return:
      type: System.Collections.Generic.List{{TValue}}
      description: A list instance containing all the values.
    content.vb: Public Function FindAll(aMatch As Predicate(Of TValue)) As List(Of TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll*
  nameWithType.vb: UFModelList(Of TValue).FindAll(Predicate(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindAll(System.Predicate(Of TValue))
  name.vb: FindAll(Predicate(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32)
  id: IndexOf(`0,System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: IndexOf(TValue, int)
  nameWithType: UFModelList<TValue>.IndexOf(TValue, int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IndexOf(TValue, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IndexOf
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 358
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Return the first index of a value starting from a certain position.
  example: []
  syntax:
    content: public int IndexOf(TValue aValue, int aStart)
    parameters:
    - id: aValue
      type: '{TValue}'
      description: The value to get the index of
    - id: aStart
      type: System.Int32
      description: Starting position
    return:
      type: System.Int32
      description: The index of the item or -1 if not found.
    content.vb: Public Function IndexOf(aValue As TValue, aStart As Integer) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf*
  nameWithType.vb: UFModelList(Of TValue).IndexOf(TValue, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IndexOf(TValue, Integer)
  name.vb: IndexOf(TValue, Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0,System.Int32,System.Int32)
  id: IndexOf(`0,System.Int32,System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: IndexOf(TValue, int, int)
  nameWithType: UFModelList<TValue>.IndexOf(TValue, int, int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IndexOf(TValue, int, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IndexOf
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 378
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Return the index of a value within a certain range.
  example: []
  syntax:
    content: public int IndexOf(TValue aValue, int aStart, int aCount)
    parameters:
    - id: aValue
      type: '{TValue}'
      description: The value to get the index of
    - id: aStart
      type: System.Int32
      description: A starting position.
    - id: aCount
      type: System.Int32
      description: Number of items to check.
    return:
      type: System.Int32
      description: The index of the item or -1 if not found.
    content.vb: Public Function IndexOf(aValue As TValue, aStart As Integer, aCount As Integer) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf*
  nameWithType.vb: UFModelList(Of TValue).IndexOf(TValue, Integer, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IndexOf(TValue, Integer, Integer)
  name.vb: IndexOf(TValue, Integer, Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach(System.Action{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach(System.Action{`0})
  id: ForEach(System.Action{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: ForEach(Action<TValue>)
  nameWithType: UFModelList<TValue>.ForEach(Action<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ForEach(System.Action<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ForEach
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 389
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Perform action on each item.
  example: []
  syntax:
    content: public void ForEach(Action<TValue> anAction)
    parameters:
    - id: anAction
      type: System.Action{{TValue}}
      description: An action for specific type.
    content.vb: Public Sub ForEach(anAction As Action(Of TValue))
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach*
  nameWithType.vb: UFModelList(Of TValue).ForEach(Action(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ForEach(System.Action(Of TValue))
  name.vb: ForEach(Action(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  id: Lock
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: UFModelList<TValue>.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Lock()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Lock
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 406
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, call 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock" data-throw-if-not-resolved="false"></xref> on all non-null items that implement

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override int Lock()
    return:
      type: System.Int32
    content.vb: Public Overrides Function Lock() As Integer
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Lock
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock*
  nameWithType.vb: UFModelList(Of TValue).Lock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Lock()
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock
  id: Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Unlock()
  nameWithType: UFModelList<TValue>.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Unlock()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Unlock
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 425
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    If <xref href="UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren" data-throw-if-not-resolved="false"></xref> is set, call 

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock" data-throw-if-not-resolved="false"></xref> on all non-null items that implement

    <xref href="UltraForce.Library.NetStandard.Interfaces.IUFLockable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override int Unlock()
    return:
      type: System.Int32
    content.vb: Public Overrides Function Unlock() As Integer
  overridden: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock*
  nameWithType.vb: UFModelList(Of TValue).Unlock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Unlock()
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: UFModelList<TValue>.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SaveToStorage
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 447
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Stores the items in a keyed storage.
  example: []
  syntax:
    content: public override void SaveToStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: A storage to store data in.
    content.vb: Public Overrides Sub SaveToStorage(aStorage As UFKeyedStorage)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage*
  nameWithType.vb: UFModelList(Of TValue).SaveToStorage(UFKeyedStorage)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  id: LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: UFModelList<TValue>.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: LoadFromStorage
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 461
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the items from a keyed storage.
  example: []
  syntax:
    content: public override void LoadFromStorage(UFKeyedStorage aStorage)
    parameters:
    - id: aStorage
      type: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
      description: A storage to get data from.
    content.vb: Public Overrides Sub LoadFromStorage(aStorage As UFKeyedStorage)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage*
  nameWithType.vb: UFModelList(Of TValue).LoadFromStorage(UFKeyedStorage)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson(System.Text.StringBuilder)
  id: SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: SaveJson(StringBuilder)
  nameWithType: UFModelList<TValue>.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.SaveJson(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: SaveJson
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 488
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Save the items as an array. This method does not save any other

    property.
  example: []
  syntax:
    content: public override void SaveJson(StringBuilder aBuilder)
    parameters:
    - id: aBuilder
      type: System.Text.StringBuilder
      description: A builder to add data to.
    content.vb: Public Overrides Sub SaveJson(aBuilder As StringBuilder)
  overridden: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson*
  nameWithType.vb: UFModelList(Of TValue).SaveJson(StringBuilder)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).SaveJson(System.Text.StringBuilder)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[])
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: CopyTo(TValue[])
  nameWithType: UFModelList<TValue>.CopyTo(TValue[])
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.CopyTo(TValue[])
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CopyTo
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 504
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Copies list to an array.
  example: []
  syntax:
    content: public void CopyTo(TValue[] anArray)
    parameters:
    - id: anArray
      type: '{TValue}[]'
      description: An array to copy to.
    content.vb: Public Sub CopyTo(anArray As TValue())
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo*
  nameWithType.vb: UFModelList(Of TValue).CopyTo(TValue())
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).CopyTo(TValue())
  name.vb: CopyTo(TValue())
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  id: CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: CopyTo(int, TValue[], int, int)
  nameWithType: UFModelList<TValue>.CopyTo(int, TValue[], int, int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.CopyTo(int, TValue[], int, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CopyTo
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 524
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Copies part of the list to an array.
  example: []
  syntax:
    content: public void CopyTo(int anIndex, TValue[] anArray, int anArrayIndex, int aCount)
    parameters:
    - id: anIndex
      type: System.Int32
      description: Starting index in list
    - id: anArray
      type: '{TValue}[]'
      description: An array to copy to.
    - id: anArrayIndex
      type: System.Int32
      description: Starting index in the array.
    - id: aCount
      type: System.Int32
      description: Number of elements.
    content.vb: Public Sub CopyTo(anIndex As Integer, anArray As TValue(), anArrayIndex As Integer, aCount As Integer)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo*
  nameWithType.vb: UFModelList(Of TValue).CopyTo(Integer, TValue(), Integer, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).CopyTo(Integer, TValue(), Integer, Integer)
  name.vb: CopyTo(Integer, TValue(), Integer, Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray
  id: ToArray
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: UFModelList<TValue>.ToArray()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ToArray()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ToArray
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 540
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Convert the list to an array.
  example: []
  syntax:
    content: public TValue[] ToArray()
    return:
      type: '{TValue}[]'
      description: Array of objects of type <code>TValue</code> containing the items
    content.vb: Public Function ToArray() As TValue()
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray*
  nameWithType.vb: UFModelList(Of TValue).ToArray()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ToArray()
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<TValue>)
  nameWithType: UFModelList<TValue>.AddRange(IEnumerable<TValue>)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.AddRange(System.Collections.Generic.IEnumerable<TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: AddRange
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 549
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Adds another collection to the list.
  example: []
  syntax:
    content: public virtual void AddRange(IEnumerable<TValue> aCollection)
    parameters:
    - id: aCollection
      type: System.Collections.Generic.IEnumerable{{TValue}}
      description: Collection to add
    content.vb: Public Overridable Sub AddRange(aCollection As IEnumerable(Of TValue))
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange*
  nameWithType.vb: UFModelList(Of TValue).AddRange(IEnumerable(Of TValue))
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).AddRange(System.Collections.Generic.IEnumerable(Of TValue))
  name.vb: AddRange(IEnumerable(Of TValue))
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange(System.Int32,System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange(System.Int32,System.Int32)
  id: GetRange(System.Int32,System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: GetRange(int, int)
  nameWithType: UFModelList<TValue>.GetRange(int, int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.GetRange(int, int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetRange
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 563
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets a shallow copy of part of the list.
  example: []
  syntax:
    content: public IList<TValue> GetRange(int aStart, int aCount)
    parameters:
    - id: aStart
      type: System.Int32
      description: start of part
    - id: aCount
      type: System.Int32
      description: number of items
    return:
      type: System.Collections.Generic.IList{{TValue}}
      description: copy
    content.vb: Public Function GetRange(aStart As Integer, aCount As Integer) As IList(Of TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange*
  nameWithType.vb: UFModelList(Of TValue).GetRange(Integer, Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity
  id: Capacity
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: UFModelList<TValue>.Capacity
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Capacity
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Capacity
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 575
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: The capacity of the list (see <xref href="System.Collections.Generic.List%601.Capacity" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public int Capacity { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Capacity As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity*
  nameWithType.vb: UFModelList(Of TValue).Capacity
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Capacity
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: IndexOf(TValue)
  nameWithType: UFModelList<TValue>.IndexOf(TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IndexOf(TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IndexOf
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 595
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Get first index of item.
  example: []
  syntax:
    content: public int IndexOf(TValue anItem)
    parameters:
    - id: anItem
      type: '{TValue}'
      description: The item to get the index for
    return:
      type: System.Int32
      description: The index or -1 if not found.
    content.vb: Public Function IndexOf(anItem As TValue) As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{TValue}}.IndexOf({TValue})
  nameWithType.vb: UFModelList(Of TValue).IndexOf(TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IndexOf(TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Insert(System.Int32,`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Insert(int, TValue)
  nameWithType: UFModelList<TValue>.Insert(int, TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Insert(int, TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Insert
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 609
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Insert item at specified index. Will fire an DataChanged event.
  example: []
  syntax:
    content: public void Insert(int anIndex, TValue anItem)
    parameters:
    - id: anIndex
      type: System.Int32
      description: Index to insert at (must be a value between 0 and Count)
    - id: anItem
      type: '{TValue}'
      description: Item to insert
    content.vb: Public Sub Insert(anIndex As Integer, anItem As TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Insert*
  implements:
  - System.Collections.Generic.IList{{TValue}}.Insert(System.Int32,{TValue})
  nameWithType.vb: UFModelList(Of TValue).Insert(Integer, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Insert(Integer, TValue)
  name.vb: Insert(Integer, TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt(System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: UFModelList<TValue>.RemoveAt(int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.RemoveAt(int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: RemoveAt
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 621
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Remove item at index. Will fire an DataChanged event.
  example: []
  syntax:
    content: public void RemoveAt(int anIndex)
    parameters:
    - id: anIndex
      type: System.Int32
      description: Index to remove item at.
    content.vb: Public Sub RemoveAt(anIndex As Integer)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{TValue}}.RemoveAt(System.Int32)
  nameWithType.vb: UFModelList(Of TValue).RemoveAt(Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Item(System.Int32)
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelList`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: UFModelList<TValue>.this[int]
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.this[int]
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: this[]
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 635
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Access an item at an index. When assigning a new value, the instance

    will fire an DataChanged event.
  example: []
  syntax:
    content: public TValue this[int anIndex] { get; set; }
    parameters:
    - id: anIndex
      type: System.Int32
      description: Index in list.
    return:
      type: '{TValue}'
    content.vb: Public Default Property this[](anIndex As Integer) As TValue
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Item*
  implements:
  - System.Collections.Generic.IList{{TValue}}.Item(System.Int32)
  nameWithType.vb: UFModelList(Of TValue).this[](Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).this[](Integer)
  name.vb: this[](Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator
  id: GetEnumerator
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: UFModelList<TValue>.GetEnumerator()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: GetEnumerator
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 658
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Gets the enumerator.
  example: []
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: The enumerator.
    content.vb: Public Function GetEnumerator() As IEnumerator
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: UFModelList(Of TValue).GetEnumerator()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).GetEnumerator()
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Add(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Add(`0)
  id: Add(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Add(TValue)
  nameWithType: UFModelList<TValue>.Add(TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Add(TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Add
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 688
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Add the item to the end of the list. Will fire an DataChanged event.
  example: []
  syntax:
    content: public void Add(TValue anItem)
    parameters:
    - id: anItem
      type: '{TValue}'
      description: Item to add.
    content.vb: Public Sub Add(anItem As TValue)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  nameWithType.vb: UFModelList(Of TValue).Add(TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Add(TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Contains(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Contains(`0)
  id: Contains(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Contains(TValue)
  nameWithType: UFModelList<TValue>.Contains(TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Contains(TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Contains
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 700
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Check if the list contains the item.
  example: []
  syntax:
    content: public bool Contains(TValue anItem)
    parameters:
    - id: anItem
      type: '{TValue}'
      description: <code>true</code> if the list contains the item, <code>false</code> if not.
    return:
      type: System.Boolean
    content.vb: Public Function Contains(anItem As TValue) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  nameWithType.vb: UFModelList(Of TValue).Contains(TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Contains(TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[],System.Int32)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: CopyTo(TValue[], int)
  nameWithType: UFModelList<TValue>.CopyTo(TValue[], int)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.CopyTo(TValue[], int)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: CopyTo
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 714
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Copies list to an array.
  example: []
  syntax:
    content: public void CopyTo(TValue[] anArray, int anArrayIndex)
    parameters:
    - id: anArray
      type: '{TValue}[]'
      description: Array.
    - id: anArrayIndex
      type: System.Int32
      description: Start in anArray to copy to
    content.vb: Public Sub CopyTo(anArray As TValue(), anArrayIndex As Integer)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  nameWithType.vb: UFModelList(Of TValue).CopyTo(TValue(), Integer)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).CopyTo(TValue(), Integer)
  name.vb: CopyTo(TValue(), Integer)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Remove(`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Remove(`0)
  id: Remove(`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Remove(TValue)
  nameWithType: UFModelList<TValue>.Remove(TValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Remove(TValue)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Remove
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 729
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Remove the first occurrence of an item.
  example: []
  syntax:
    content: public bool Remove(TValue anItem)
    parameters:
    - id: anItem
      type: '{TValue}'
      description: Item to remove
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if item was removed, <code>false</code> if item could not 

        be found.
    content.vb: Public Function Remove(anItem As TValue) As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  nameWithType.vb: UFModelList(Of TValue).Remove(TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Remove(TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Count
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelList`1.Count
  id: Count
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: UFModelList<TValue>.Count
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Count
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: Count
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 746
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: Get the number of items
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of items
    content.vb: Public ReadOnly Property Count As Integer
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Count
  nameWithType.vb: UFModelList(Of TValue).Count
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Count
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly
  commentId: P:UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly
  id: IsReadOnly
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: UFModelList<TValue>.IsReadOnly
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IsReadOnly
  type: Property
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: IsReadOnly
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 759
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Get a value indicating the list is read only; this property always 

    returns <code>false</code>.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if the list is read only; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  nameWithType.vb: UFModelList(Of TValue).IsReadOnly
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IsReadOnly
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded(System.Int32,`0,System.Boolean,System.Boolean,`0)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded(System.Int32,`0,System.Boolean,System.Boolean,`0)
  id: ValueAdded(System.Int32,`0,System.Boolean,System.Boolean,`0)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: ValueAdded(int, TValue, bool, bool, TValue?)
  nameWithType: UFModelList<TValue>.ValueAdded(int, TValue, bool, bool, TValue?)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ValueAdded(int, TValue, bool, bool, TValue?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ValueAdded
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 787
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: A value has been added for a specific key.
  example: []
  syntax:
    content: protected virtual void ValueAdded(int anIndex, TValue aValue, bool aFireChanged, bool anAdded, TValue? anOldValue = default)
    parameters:
    - id: anIndex
      type: System.Int32
      description: The index the item has been added for.
    - id: aValue
      type: '{TValue}'
      description: An item.
    - id: aFireChanged
      type: System.Boolean
      description: <code>true</code> fire changed events, <code>false</code> not
    - id: anAdded
      type: System.Boolean
      description: True if value was added, false if value was replaced
    - id: anOldValue
      type: '{TValue}'
      description: Value that is getting replaced (only used if anAction is Replace). Can be null else.
    content.vb: Protected Overridable Sub ValueAdded(anIndex As Integer, aValue As TValue, aFireChanged As Boolean, anAdded As Boolean, anOldValue As TValue = Nothing)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded*
  nameWithType.vb: UFModelList(Of TValue).ValueAdded(Integer, TValue, Boolean, Boolean, TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ValueAdded(Integer, TValue, Boolean, Boolean, TValue)
  name.vb: ValueAdded(Integer, TValue, Boolean, Boolean, TValue)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved(System.Int32,`0,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved(System.Int32,`0,System.Boolean)
  id: ValueRemoved(System.Int32,`0,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: ValueRemoved(int, TValue, bool)
  nameWithType: UFModelList<TValue>.ValueRemoved(int, TValue, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ValueRemoved(int, TValue, bool)
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: ValueRemoved
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 828
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: A value has been removed for a specific key.
  example: []
  syntax:
    content: protected virtual void ValueRemoved(int anIndex, TValue aValue, bool aFireChanged)
    parameters:
    - id: anIndex
      type: System.Int32
      description: The index of the item has been removed for.
    - id: aValue
      type: '{TValue}'
      description: An item.
    - id: aFireChanged
      type: System.Boolean
      description: <code>true</code> fire DataChanged event, <code>false</code> not
    content.vb: Protected Overridable Sub ValueRemoved(anIndex As Integer, aValue As TValue, aFireChanged As Boolean)
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved*
  nameWithType.vb: UFModelList(Of TValue).ValueRemoved(Integer, TValue, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ValueRemoved(Integer, TValue, Boolean)
  name.vb: ValueRemoved(Integer, TValue, Boolean)
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues
  id: RemoveValues
  parent: UltraForce.Library.NetStandard.Models.UFModelList`1
  langs:
  - csharp
  - vb
  name: RemoveValues()
  nameWithType: UFModelList<TValue>.RemoveValues()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.RemoveValues()
  type: Method
  source:
    remote:
      path: UltraForce.Library.NetStandard/Models/UFModelList.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.NetStandard.git
    id: RemoveValues
    path: ../UltraForce.Library.NetStandard/Models/UFModelList.cs
    startLine: 861
  assemblies:
  - UltraForce.Library.NetStandard
  namespace: UltraForce.Library.NetStandard.Models
  summary: >-
    Remove the values from internal list and call ValueRemoved in case 

    of children are being tracked.
  example: []
  syntax:
    content: protected virtual void RemoveValues()
    content.vb: Protected Overridable Sub RemoveValues()
  overload: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues*
  nameWithType.vb: UFModelList(Of TValue).RemoveValues()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).RemoveValues()
references:
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel.Option
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel.Option
  nameWithType: UFModel.Option
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
- uid: UltraForce.Library.NetStandard.Models.UFModel
  commentId: T:UltraForce.Library.NetStandard.Models.UFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.UFModel.html
  name: UFModel
  nameWithType: UFModel
  fullName: UltraForce.Library.NetStandard.Models.UFModel
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1
  commentId: T:UltraForce.Library.NetStandard.Models.UFModelList`1
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html
  name: UFModelList<TValue>
  nameWithType: UFModelList<TValue>
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>
  nameWithType.vb: UFModelList(Of TValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue)
  name.vb: UFModelList(Of TValue)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModelList`1
    name: UFModelList
    href: UltraForce.Library.NetStandard.Models.UFModelList-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModelList`1
    name: UFModelList
    href: UltraForce.Library.NetStandard.Models.UFModelList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.DataChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_DataChanged
  name: DataChanged
  nameWithType: UFModel.DataChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.DataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_LockChildren
  name: LockChildren
  nameWithType: UFModel.Option.LockChildren
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.LockChildren
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFLockable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html
  name: IUFLockable
  nameWithType: IUFLockable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Lock
  name: Lock()
  nameWithType: UFModelList<TValue>.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Lock()
  nameWithType.vb: UFModelList(Of TValue).Lock()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  commentId: F:UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html#UltraForce_Library_NetStandard_Models_UFModel_Option_TrackChildChange
  name: TrackChildChange
  nameWithType: UFModel.Option.TrackChildChange
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option.TrackChildChange
- uid: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged.html
  name: IUFNotifyDataChanged
  nameWithType: IUFNotifyDataChanged
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFNotifyDataChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildChanged
  name: ChildChanged
  nameWithType: UFModel.ChildChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildChanged
- uid: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  commentId: E:UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_PropertyChanged
  name: PropertyChanged
  nameWithType: UFModel.PropertyChanged
  fullName: UltraForce.Library.NetStandard.Models.UFModel.PropertyChanged
- uid: UltraForce.Library.NetStandard.Models
  commentId: N:UltraForce.Library.NetStandard.Models
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Models
  nameWithType: UltraForce.Library.NetStandard.Models
  fullName: UltraForce.Library.NetStandard.Models
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Models
    name: Models
    href: UltraForce.Library.NetStandard.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UltraForce.Library.NetStandard.Storage.IUFStorableObject
  commentId: T:UltraForce.Library.NetStandard.Storage.IUFStorableObject
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.IUFStorableObject.html
  name: IUFStorableObject
  nameWithType: IUFStorableObject
  fullName: UltraForce.Library.NetStandard.Storage.IUFStorableObject
- uid: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport.html
  name: IUFJsonExport
  nameWithType: IUFJsonExport
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFJsonExport
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: UltraForce.Library.NetStandard.Interfaces.IUFClearable
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFClearable
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFClearable.html
  name: IUFClearable
  nameWithType: IUFClearable
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFClearable
- uid: UltraForce.Library.NetStandard.Models.IUFModel
  commentId: T:UltraForce.Library.NetStandard.Models.IUFModel
  parent: UltraForce.Library.NetStandard.Models
  href: UltraForce.Library.NetStandard.Models.IUFModel.html
  name: IUFModel
  nameWithType: IUFModel
  fullName: UltraForce.Library.NetStandard.Models.IUFModel
- uid: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty.html
  name: IUFAccessProperty
  nameWithType: IUFAccessProperty
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFAccessProperty
- uid: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  commentId: T:UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
  parent: UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue.html
  name: IUFValidatePropertyValue
  nameWithType: IUFValidatePropertyValue
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFValidatePropertyValue
- uid: System.Collections.Generic.IList{{TValue}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: System.Collections.Generic.IList<TValue>
  nameWithType.vb: IList(Of TValue)
  fullName.vb: System.Collections.Generic.IList(Of TValue)
  name.vb: IList(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  nameWithType.vb: IEnumerable(Of TValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  name: UseLog(UFHtmlLog)
  nameWithType: UFModel.UseLog(UFHtmlLog)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UseLog(UltraForce.Library.NetStandard.Development.UFHtmlLog)
    name: UseLog
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UseLog_UltraForce_Library_NetStandard_Development_UFHtmlLog_
  - name: (
  - uid: UltraForce.Library.NetStandard.Development.UFHtmlLog
    name: UFHtmlLog
    href: UltraForce.Library.NetStandard.Development.UFHtmlLog.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  name: GetPropertyType(string)
  nameWithType: UFModel.GetPropertyType(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(string)
  nameWithType.vb: UFModel.GetPropertyType(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(String)
  name.vb: GetPropertyType(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
    name: GetPropertyType
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyType(System.String)
    name: GetPropertyType
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyType_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetLock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  name: ResetLock()
  nameWithType: UFModel.ResetLock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetLock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetLock
    name: ResetLock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetLock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  name: HasChanged()
  nameWithType: UFModel.HasChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasChanged()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
    name: HasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasChanged
    name: HasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasChanged
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  name: ResetChanged()
  nameWithType: UFModel.ResetChanged()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
    name: ResetChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ResetChanged
    name: ResetChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ResetChanged
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  name: GetPropertyNames()
  nameWithType: UFModel.GetPropertyNames()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
    name: GetPropertyNames
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyNames
    name: GetPropertyNames
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyNames
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  name: HasProperty(string)
  nameWithType: UFModel.HasProperty(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(string)
  nameWithType.vb: UFModel.HasProperty(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(String)
  name.vb: HasProperty(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
    name: HasProperty
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasProperty(System.String)
    name: HasProperty
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasProperty_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValid
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  name: IsValid()
  nameWithType: UFModel.IsValid()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValid()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
    name: IsValid
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValid
    name: IsValid
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValid
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  name: SetPropertyValue(string, object, bool)
  nameWithType: UFModel.SetPropertyValue(string, object, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object, bool)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object, Boolean)
  name.vb: SetPropertyValue(String, Object, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object,System.Boolean)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyTo(UFModel, bool)
  nameWithType: UFModel.CopyTo(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, bool)
  nameWithType.vb: UFModel.CopyTo(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyTo(UFModel, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyTo(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyTo
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyTo_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  name: CopyFrom(UFModel, bool)
  nameWithType: UFModel.CopyFrom(UFModel, bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, bool)
  nameWithType.vb: UFModel.CopyFrom(UFModel, Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel, Boolean)
  name.vb: CopyFrom(UFModel, Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyFrom
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CopyFrom(UltraForce.Library.NetStandard.Models.UFModel,System.Boolean)
    name: CopyFrom
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CopyFrom_UltraForce_Library_NetStandard_Models_UFModel_System_Boolean_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel
    name: UFModel
    href: UltraForce.Library.NetStandard.Models.UFModel.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  name: GetDataChangedToken()
  nameWithType: UFModel.GetDataChangedToken()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
    name: GetDataChangedToken
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetDataChangedToken
    name: GetDataChangedToken
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetDataChangedToken
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  name: SaveToStream(int, Stream)
  nameWithType: UFModel.SaveToStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(int, System.IO.Stream)
  nameWithType.vb: UFModel.SaveToStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(Integer, System.IO.Stream)
  name.vb: SaveToStream(Integer, Stream)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
    name: SaveToStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStream(System.Int32,System.IO.Stream)
    name: SaveToStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  name: LoadFromStream(int, Stream)
  nameWithType: UFModel.LoadFromStream(int, Stream)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(int, System.IO.Stream)
  nameWithType.vb: UFModel.LoadFromStream(Integer, Stream)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(Integer, System.IO.Stream)
  name.vb: LoadFromStream(Integer, Stream)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
    name: LoadFromStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStream(System.Int32,System.IO.Stream)
    name: LoadFromStream
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStream_System_Int32_System_IO_Stream_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ToString
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  name: ToString()
  nameWithType: UFModel.ToString()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ToString()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
    name: ToString
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ToString
    name: ToString
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ToString
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  name: GetPropertyValue<T>(string)
  nameWithType: UFModel.GetPropertyValue<T>(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue<T>(string)
  nameWithType.vb: UFModel.GetPropertyValue(Of T)(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(Of T)(String)
  name.vb: GetPropertyValue(Of T)(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue``1(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  name: SaveJson()
  nameWithType: UFModel.SaveJson()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  name: Clear()
  nameWithType: UFModel.Clear()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  name: GetPropertyValue(string)
  nameWithType: UFModel.GetPropertyValue(string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(string)
  nameWithType.vb: UFModel.GetPropertyValue(String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(String)
  name.vb: GetPropertyValue(String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.GetPropertyValue(System.String)
    name: GetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_GetPropertyValue_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  name: SetPropertyValue(string, object)
  nameWithType: UFModel.SetPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(string, object)
  nameWithType.vb: UFModel.SetPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(String, Object)
  name.vb: SetPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SetPropertyValue(System.String,System.Object)
    name: SetPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SetPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  name: IsValidPropertyValue(string, object)
  nameWithType: UFModel.IsValidPropertyValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(string, object)
  nameWithType.vb: UFModel.IsValidPropertyValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(String, Object)
  name.vb: IsValidPropertyValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.IsValidPropertyValue(System.String,System.Object)
    name: IsValidPropertyValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_IsValidPropertyValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.InitMeta
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  name: InitMeta()
  nameWithType: UFModel.InitMeta()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.InitMeta()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.InitMeta
    name: InitMeta
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_InitMeta
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  name: CanSave(string, object)
  nameWithType: UFModel.CanSave(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.CanSave(string, object)
  nameWithType.vb: UFModel.CanSave(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.CanSave(String, Object)
  name.vb: CanSave(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.CanSave(System.String,System.Object)
    name: CanSave
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_CanSave_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  name: Changed()
  nameWithType: UFModel.Changed()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  name: Changed(string, object, object)
  nameWithType: UFModel.Changed(string, object, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Changed(string, object, object)
  nameWithType.vb: UFModel.Changed(String, Object, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Changed(String, Object, Object)
  name.vb: Changed(String, Object, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Changed(System.String,System.Object,System.Object)
    name: Changed
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Changed_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: ChildHasChanged(object, string[], UFDataChangedEventArgs)
  nameWithType: UFModel.ChildHasChanged(object, string[], UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(object, string[], UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  nameWithType.vb: UFModel.ChildHasChanged(Object, String(), UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(Object, String(), UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: ChildHasChanged(Object, String(), UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: ChildHasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.ChildHasChanged(System.Object,System.String[],UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: ChildHasChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_ChildHasChanged_System_Object_System_String___UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnChildChanged(object, UFDataChangedEventArgs)
  nameWithType: UFModel.OnChildChanged(object, UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  nameWithType.vb: UFModel.OnChildChanged(Object, UFDataChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(Object, UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  name.vb: OnChildChanged(Object, UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnChildChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnChildChanged(System.Object,UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnChildChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnChildChanged_System_Object_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  name: OnPropertyChanged(object, PropertyChangedEventArgs)
  nameWithType: UFModel.OnPropertyChanged(object, PropertyChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(object, System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: UFModel.OnPropertyChanged(Object, PropertyChangedEventArgs)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(Object, System.ComponentModel.PropertyChangedEventArgs)
  name.vb: OnPropertyChanged(Object, PropertyChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnPropertyChanged_System_Object_System_ComponentModel_PropertyChangedEventArgs_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  name: OnDataChanged(UFDataChangedEventArgs)
  nameWithType: UFModel.OnDataChanged(UFDataChangedEventArgs)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnDataChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.OnDataChanged(UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs)
    name: OnDataChanged
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_OnDataChanged_UltraForce_Library_NetStandard_Events_UFDataChangedEventArgs_
  - name: (
  - uid: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs
    name: UFDataChangedEventArgs
    href: UltraForce.Library.NetStandard.Events.UFDataChangedEventArgs.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  name: UpdateTrackedProperties()
  nameWithType: UFModel.UpdateTrackedProperties()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.UpdateTrackedProperties
    name: UpdateTrackedProperties
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_UpdateTrackedProperties
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  name: AddValidator(string, IUFValidateValue)
  nameWithType: UFModel.AddValidator(string, IUFValidateValue)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateValue)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
  name.vb: AddValidator(String, IUFValidateValue)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateValue_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue
    name: IUFValidateValue
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateValue.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  name: AddValidator(string, IUFValidateProperty)
  nameWithType: UFModel.AddValidator(string, IUFValidateProperty)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(string, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  nameWithType.vb: UFModel.AddValidator(String, IUFValidateProperty)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(String, UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
  name.vb: AddValidator(String, IUFValidateProperty)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.AddValidator(System.String,UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty)
    name: AddValidator
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_AddValidator_System_String_UltraForce_Library_NetStandard_Models_Validators_IUFValidateProperty_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty
    name: IUFValidateProperty
    href: UltraForce.Library.NetStandard.Models.Validators.IUFValidateProperty.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1({T}@,{T},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  name: Set(object, string)
  nameWithType: UFModel.Set(object, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Set(object, string)
  nameWithType.vb: UFModel.Set(Object, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Set(Object, String)
  name.vb: Set(Object, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Set(System.Object,System.String)
    name: Set
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Set_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1({T},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{{T}},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  definition: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  name: HasOption(Option)
  nameWithType: UFModel.HasOption(UFModel.Option)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
    name: HasOption
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.HasOption(UltraForce.Library.NetStandard.Models.UFModel.Option)
    name: HasOption
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_HasOption_UltraForce_Library_NetStandard_Models_UFModel_Option_
  - name: (
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  name: LogNewValue(string, object)
  nameWithType: UFModel.LogNewValue(string, object)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(string, object)
  nameWithType.vb: UFModel.LogNewValue(String, Object)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(String, Object)
  name.vb: LogNewValue(String, Object)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
    name: LogNewValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LogNewValue(System.String,System.Object)
    name: LogNewValue
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LogNewValue_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: UltraForce.Library.NetStandard.Interfaces
  commentId: N:UltraForce.Library.NetStandard.Interfaces
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Interfaces
  nameWithType: UltraForce.Library.NetStandard.Interfaces
  fullName: UltraForce.Library.NetStandard.Interfaces
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Interfaces
    name: Interfaces
    href: UltraForce.Library.NetStandard.Interfaces.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.NetStandard.Storage
  commentId: N:UltraForce.Library.NetStandard.Storage
  href: UltraForce.html
  name: UltraForce.Library.NetStandard.Storage
  nameWithType: UltraForce.Library.NetStandard.Storage
  fullName: UltraForce.Library.NetStandard.Storage
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.NetStandard
    name: NetStandard
    href: UltraForce.Library.NetStandard.html
  - name: .
  - uid: UltraForce.Library.NetStandard.Storage
    name: Storage
    href: UltraForce.Library.NetStandard.Storage.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  name: Assign<T>(ref T, T, string)
  nameWithType: UFModel.Assign<T>(ref T, T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Assign<T>(ref T, T, string)
  nameWithType.vb: UFModel.Assign(Of T)(T, T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Assign(Of T)(T, T, String)
  name.vb: Assign(Of T)(T, T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Assign``1(``0@,``0,System.String)
    name: Assign
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Assign__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  name: Get<T>(T, string)
  nameWithType: UFModel.Get<T>(T, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(T, string)
  nameWithType.vb: UFModel.Get(Of T)(T, String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(T, String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(``0,System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  name: Get<T>(Func<T>, string)
  nameWithType: UFModel.Get<T>(Func<T>, string)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Get<T>(System.Func<T>, string)
  nameWithType.vb: UFModel.Get(Of T)(Func(Of T), String)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Get(Of T)(System.Func(Of T), String)
  name.vb: Get(Of T)(Func(Of T), String)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Get``1(System.Func{``0},System.String)
    name: Get
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Get__1_System_Func___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.#ctor
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1__ctor_UltraForce_Library_NetStandard_Models_UFModel_Option___
  name: UFModelList
  nameWithType: UFModelList<TValue>.UFModelList
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.UFModelList
  nameWithType.vb: UFModelList(Of TValue).New
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).New
  name.vb: New
- uid: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  name: Option[]
  nameWithType: UFModel.Option[]
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Option[]
  nameWithType.vb: UFModel.Option()
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Option()
  name.vb: Option()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Option
    name: Option
    href: UltraForce.Library.NetStandard.Models.UFModel.Option.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ComponentModel.DefaultValueAttribute
  commentId: T:System.ComponentModel.DefaultValueAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.defaultvalueattribute
  name: DefaultValueAttribute
  nameWithType: DefaultValueAttribute
  fullName: System.ComponentModel.DefaultValueAttribute
- uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  name: Clear(bool)
  nameWithType: UFModel.Clear(bool)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Clear(bool)
  nameWithType.vb: UFModel.Clear(Boolean)
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModel.Clear(Boolean)
  name.vb: Clear(Boolean)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Clear(System.Boolean)
    name: Clear
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Clear_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Clear*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Clear
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Clear_System_Boolean_
  name: Clear
  nameWithType: UFModelList<TValue>.Clear
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Clear
  nameWithType.vb: UFModelList(Of TValue).Clear
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Clear
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Shuffle
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Shuffle
  name: Shuffle
  nameWithType: UFModelList<TValue>.Shuffle
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Shuffle
  nameWithType.vb: UFModelList(Of TValue).Shuffle
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Shuffle
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Find*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Find
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Find_System_Predicate__0__
  name: Find
  nameWithType: UFModelList<TValue>.Find
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Find
  nameWithType.vb: UFModelList(Of TValue).Find
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Find
- uid: System.Predicate{{TValue}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<TValue>
  nameWithType: Predicate<TValue>
  fullName: System.Predicate<TValue>
  nameWithType.vb: Predicate(Of TValue)
  fullName.vb: System.Predicate(Of TValue)
  name.vb: Predicate(Of TValue)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLast
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_FindLast_System_Predicate__0__
  name: FindLast
  nameWithType: UFModelList<TValue>.FindLast
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLast
  nameWithType.vb: UFModelList(Of TValue).FindLast
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLast
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.FindIndex
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_FindIndex_System_Predicate__0__
  name: FindIndex
  nameWithType: UFModelList<TValue>.FindIndex
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindIndex
  nameWithType.vb: UFModelList(Of TValue).FindIndex
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindIndex
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.FindLastIndex
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_FindLastIndex_System_Predicate__0__
  name: FindLastIndex
  nameWithType: UFModelList<TValue>.FindLastIndex
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindLastIndex
  nameWithType.vb: UFModelList(Of TValue).FindLastIndex
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindLastIndex
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.FindAll
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_FindAll_System_Predicate__0__
  name: FindAll
  nameWithType: UFModelList<TValue>.FindAll
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.FindAll
  nameWithType.vb: UFModelList(Of TValue).FindAll
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).FindAll
- uid: System.Collections.Generic.List{{TValue}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TValue>
  nameWithType: List<TValue>
  fullName: System.Collections.Generic.List<TValue>
  nameWithType.vb: List(Of TValue)
  fullName.vb: System.Collections.Generic.List(Of TValue)
  name.vb: List(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.IndexOf
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_IndexOf__0_System_Int32_
  name: IndexOf
  nameWithType: UFModelList<TValue>.IndexOf
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IndexOf
  nameWithType.vb: UFModelList(Of TValue).IndexOf
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IndexOf
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.ForEach
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_ForEach_System_Action__0__
  name: ForEach
  nameWithType: UFModelList<TValue>.ForEach
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ForEach
  nameWithType.vb: UFModelList(Of TValue).ForEach
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ForEach
- uid: System.Action{{TValue}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TValue>
  nameWithType: Action<TValue>
  fullName: System.Action<TValue>
  nameWithType.vb: Action(Of TValue)
  fullName.vb: System.Action(Of TValue)
  name.vb: Action(Of TValue)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  name: Lock()
  nameWithType: IUFLockable.Lock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Lock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  name: Lock()
  nameWithType: UFModel.Lock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Lock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Lock
    name: Lock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Lock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Lock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Lock
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Lock
  name: Lock
  nameWithType: UFModelList<TValue>.Lock
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Lock
  nameWithType.vb: UFModelList(Of TValue).Lock
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Lock
- uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  commentId: M:UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
  parent: UltraForce.Library.NetStandard.Interfaces.IUFLockable
  href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  name: Unlock()
  nameWithType: IUFLockable.Unlock()
  fullName: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Interfaces.IUFLockable.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Interfaces.IUFLockable.html#UltraForce_Library_NetStandard_Interfaces_IUFLockable_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.Unlock
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  name: Unlock()
  nameWithType: UFModel.Unlock()
  fullName: UltraForce.Library.NetStandard.Models.UFModel.Unlock()
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.Unlock
    name: Unlock
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_Unlock
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Unlock
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Unlock
  name: Unlock
  nameWithType: UFModelList<TValue>.Unlock
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Unlock
  nameWithType.vb: UFModelList(Of TValue).Unlock
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Unlock
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage(UFKeyedStorage)
  nameWithType: UFModel.SaveToStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveToStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: SaveToStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.SaveToStorage
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_SaveToStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: SaveToStorage
  nameWithType: UFModelList<TValue>.SaveToStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.SaveToStorage
  nameWithType.vb: UFModelList(Of TValue).SaveToStorage
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).SaveToStorage
- uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  commentId: T:UltraForce.Library.NetStandard.Storage.UFKeyedStorage
  parent: UltraForce.Library.NetStandard.Storage
  href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  name: UFKeyedStorage
  nameWithType: UFKeyedStorage
  fullName: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
- uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage(UFKeyedStorage)
  nameWithType: UFModel.LoadFromStorage(UFKeyedStorage)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.LoadFromStorage(UltraForce.Library.NetStandard.Storage.UFKeyedStorage)
    name: LoadFromStorage
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  - name: (
  - uid: UltraForce.Library.NetStandard.Storage.UFKeyedStorage
    name: UFKeyedStorage
    href: UltraForce.Library.NetStandard.Storage.UFKeyedStorage.html
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.LoadFromStorage
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_LoadFromStorage_UltraForce_Library_NetStandard_Storage_UFKeyedStorage_
  name: LoadFromStorage
  nameWithType: UFModelList<TValue>.LoadFromStorage
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.LoadFromStorage
  nameWithType.vb: UFModelList(Of TValue).LoadFromStorage
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).LoadFromStorage
- uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  commentId: M:UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  parent: UltraForce.Library.NetStandard.Models.UFModel
  isExternal: true
  href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  name: SaveJson(StringBuilder)
  nameWithType: UFModel.SaveJson(StringBuilder)
  fullName: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
  spec.csharp:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: UltraForce.Library.NetStandard.Models.UFModel.SaveJson(System.Text.StringBuilder)
    name: SaveJson
    href: UltraForce.Library.NetStandard.Models.UFModel.html#UltraForce_Library_NetStandard_Models_UFModel_SaveJson_System_Text_StringBuilder_
  - name: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.SaveJson
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_SaveJson_System_Text_StringBuilder_
  name: SaveJson
  nameWithType: UFModelList<TValue>.SaveJson
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.SaveJson
  nameWithType.vb: UFModelList(Of TValue).SaveJson
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).SaveJson
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.CopyTo
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_CopyTo__0___
  name: CopyTo
  nameWithType: UFModelList<TValue>.CopyTo
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.CopyTo
  nameWithType.vb: UFModelList(Of TValue).CopyTo
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).CopyTo
- uid: '{TValue}[]'
  isExternal: true
  name: TValue[]
  nameWithType: TValue[]
  fullName: TValue[]
  nameWithType.vb: TValue()
  fullName.vb: TValue()
  name.vb: TValue()
  spec.csharp:
  - name: TValue
  - name: '['
  - name: ']'
  spec.vb:
  - name: TValue
  - name: (
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.ToArray
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_ToArray
  name: ToArray
  nameWithType: UFModelList<TValue>.ToArray
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ToArray
  nameWithType.vb: UFModelList(Of TValue).ToArray
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ToArray
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.AddRange
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange
  nameWithType: UFModelList<TValue>.AddRange
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.AddRange
  nameWithType.vb: UFModelList(Of TValue).AddRange
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).AddRange
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.GetRange
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_GetRange_System_Int32_System_Int32_
  name: GetRange
  nameWithType: UFModelList<TValue>.GetRange
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.GetRange
  nameWithType.vb: UFModelList(Of TValue).GetRange
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).GetRange
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Capacity
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Capacity
  name: Capacity
  nameWithType: UFModelList<TValue>.Capacity
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Capacity
  nameWithType.vb: UFModelList(Of TValue).Capacity
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Capacity
- uid: System.Collections.Generic.IList{{TValue}}.IndexOf({TValue})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{TValue}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(TValue)
  nameWithType: IList<TValue>.IndexOf(TValue)
  fullName: System.Collections.Generic.IList<TValue>.IndexOf(TValue)
  nameWithType.vb: IList(Of TValue).IndexOf(TValue)
  fullName.vb: System.Collections.Generic.IList(Of TValue).IndexOf(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Insert*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Insert
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: UFModelList<TValue>.Insert
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Insert
  nameWithType.vb: UFModelList(Of TValue).Insert
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Insert
- uid: System.Collections.Generic.IList{{TValue}}.Insert(System.Int32,{TValue})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{TValue}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, TValue)
  nameWithType: IList<TValue>.Insert(int, TValue)
  fullName: System.Collections.Generic.IList<TValue>.Insert(int, TValue)
  nameWithType.vb: IList(Of TValue).Insert(Integer, TValue)
  fullName.vb: System.Collections.Generic.IList(Of TValue).Insert(Integer, TValue)
  name.vb: Insert(Integer, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveAt
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: UFModelList<TValue>.RemoveAt
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.RemoveAt
  nameWithType.vb: UFModelList(Of TValue).RemoveAt
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).RemoveAt
- uid: System.Collections.Generic.IList{{TValue}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{TValue}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<TValue>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<TValue>.RemoveAt(int)
  nameWithType.vb: IList(Of TValue).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of TValue).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Item*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Item
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Item_System_Int32_
  name: this
  nameWithType: UFModelList<TValue>.this
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.this
  nameWithType.vb: UFModelList(Of TValue).this[]
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{TValue}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{TValue}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<TValue>.this[int]
  fullName: System.Collections.Generic.IList<TValue>.this[int]
  nameWithType.vb: IList(Of TValue).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of TValue).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.GetEnumerator
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_GetEnumerator
  name: GetEnumerator
  nameWithType: UFModelList<TValue>.GetEnumerator
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.GetEnumerator
  nameWithType.vb: UFModelList(Of TValue).GetEnumerator
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Add*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Add
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Add__0_
  name: Add
  nameWithType: UFModelList<TValue>.Add
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Add
  nameWithType.vb: UFModelList(Of TValue).Add
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Add
- uid: System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(TValue)
  nameWithType: ICollection<TValue>.Add(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Add(TValue)
  nameWithType.vb: ICollection(Of TValue).Add(TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).Add(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Contains*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Contains
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Contains__0_
  name: Contains
  nameWithType: UFModelList<TValue>.Contains
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Contains
  nameWithType.vb: UFModelList(Of TValue).Contains
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Contains
- uid: System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(TValue)
  nameWithType: ICollection<TValue>.Contains(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  nameWithType.vb: ICollection(Of TValue).Contains(TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).Contains(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(TValue[], int)
  nameWithType: ICollection<TValue>.CopyTo(TValue[], int)
  fullName: System.Collections.Generic.ICollection<TValue>.CopyTo(TValue[], int)
  nameWithType.vb: ICollection(Of TValue).CopyTo(TValue(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).CopyTo(TValue(), Integer)
  name.vb: CopyTo(TValue(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: TValue
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: TValue
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Remove*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Remove
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Remove__0_
  name: Remove
  nameWithType: UFModelList<TValue>.Remove
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Remove
  nameWithType.vb: UFModelList(Of TValue).Remove
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Remove
- uid: System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(TValue)
  nameWithType: ICollection<TValue>.Remove(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  nameWithType.vb: ICollection(Of TValue).Remove(TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).Remove(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.Count*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.Count
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_Count
  name: Count
  nameWithType: UFModelList<TValue>.Count
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.Count
  nameWithType.vb: UFModelList(Of TValue).Count
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).Count
- uid: System.Collections.Generic.ICollection{{TValue}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<TValue>.Count
  fullName: System.Collections.Generic.ICollection<TValue>.Count
  nameWithType.vb: ICollection(Of TValue).Count
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.IsReadOnly
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_IsReadOnly
  name: IsReadOnly
  nameWithType: UFModelList<TValue>.IsReadOnly
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.IsReadOnly
  nameWithType.vb: UFModelList(Of TValue).IsReadOnly
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<TValue>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<TValue>.IsReadOnly
  nameWithType.vb: ICollection(Of TValue).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.ValueAdded
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_ValueAdded_System_Int32__0_System_Boolean_System_Boolean__0_
  name: ValueAdded
  nameWithType: UFModelList<TValue>.ValueAdded
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ValueAdded
  nameWithType.vb: UFModelList(Of TValue).ValueAdded
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ValueAdded
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.ValueRemoved
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_ValueRemoved_System_Int32__0_System_Boolean_
  name: ValueRemoved
  nameWithType: UFModelList<TValue>.ValueRemoved
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.ValueRemoved
  nameWithType.vb: UFModelList(Of TValue).ValueRemoved
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).ValueRemoved
- uid: UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues*
  commentId: Overload:UltraForce.Library.NetStandard.Models.UFModelList`1.RemoveValues
  href: UltraForce.Library.NetStandard.Models.UFModelList-1.html#UltraForce_Library_NetStandard_Models_UFModelList_1_RemoveValues
  name: RemoveValues
  nameWithType: UFModelList<TValue>.RemoveValues
  fullName: UltraForce.Library.NetStandard.Models.UFModelList<TValue>.RemoveValues
  nameWithType.vb: UFModelList(Of TValue).RemoveValues
  fullName.vb: UltraForce.Library.NetStandard.Models.UFModelList(Of TValue).RemoveValues
